var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.051,1,2.742]],["body/classes/AccessToken.html",[0,0.059,1,5.055,2,1.681,3,0.128,4,0.128,5,0.112,6,5.937,7,4.084,8,1.784,9,1.846,10,4.818,11,4.818,12,1.846,13,3.873,14,5.234,15,2.874,16,4.937,17,0.375,18,1.906,19,6.821,20,1.807,21,6.113,22,0.834,23,6.113,24,4.313,25,4.434,26,1.278,27,0.013,28,1.155,29,1.12,30,3.873,31,6.113,32,0.318,33,1.574,34,6.113,35,2.275,36,0.263,37,4.682,38,4.682,39,0.128,40,3.397,41,3.162,42,4.682,43,1.462,44,4.682,45,0.007,46,0.009,47,0.007]],["title/interfaces/AccessTokenInterfaces.html",[16,2.946,35,1.511]],["body/interfaces/AccessTokenInterfaces.html",[3,0.151,4,0.151,5,0.132,8,1.613,10,5.353,13,3.502,14,4.01,16,4.926,17,0.443,18,1.794,19,6.688,25,4.926,27,0.013,30,3.502,32,0.375,33,1.7,35,2.527,39,0.151,45,0.008,46,0.01,47,0.008,48,2.977,49,4.822,50,4.822,51,5.527,52,4.822,53,3.847,54,5.353,55,4.586,56,4.926,57,5.353,58,6.791]],["title/controllers/AppController.html",[9,1.226,59,2.946]],["body/controllers/AppController.html",[0,0.047,1,3.521,3,0.101,4,0.101,5,0.089,8,1.081,9,1.977,10,5.162,13,4.149,14,5.007,17,0.297,22,0.711,26,1.424,27,0.013,28,0.985,29,1.247,32,0.251,36,0.422,39,0.101,40,2.687,41,2.501,43,1.885,45,0.006,46,0.008,47,0.006,56,4.377,59,3.782,60,1.197,61,3.231,62,4.11,63,5.214,64,4.548,65,5.214,66,5.214,67,1.424,68,2.09,69,5.214,70,4.548,71,3.704,72,1.472,73,3.704,74,3.704,75,3.915,76,4.548,77,4.548,78,7.16,79,1.424,80,3.704,81,6.549,82,5.007,83,3.704,84,3.704,85,3.782,86,5.214,87,1.629,88,1.995,89,1.903,90,2.809,91,0.486,92,3.607,93,3.704,94,1.995,95,1.67,96,3.704,97,1.741,98,1.995,99,1.604,100,1.995,101,3.704,102,3.117,103,4.756,104,1.995,105,5.264,106,1.197,107,3.704,108,2.501,109,1.542,110,3.704,111,3.704,112,3.704,113,2.92,114,3.231,115,1.197,116,3.704,117,1.995,118,1.995,119,3.704,120,3.704,121,3.231]],["title/modules/AppModule.html",[122,1.037,123,2.946]],["body/modules/AppModule.html",[0,0.036,3,0.077,4,0.077,5,0.067,27,0.013,32,0.472,36,0.457,39,0.077,45,0.004,46,0.007,47,0.004,59,3.735,60,1.378,91,0.369,122,1.316,123,5.987,124,1.086,125,1.086,126,1.171,127,1.171,128,1.086,129,2.144,130,1.171,131,2.454,132,2.454,133,2.454,134,4.387,135,4.116,136,4.387,137,3.884,138,3.884,139,3.884,140,3.884,141,4.387,142,3.884,143,3.884,144,3.884,145,4.387,146,4.116,147,4.387,148,1.775,149,1.171,150,1.171,151,2.813,152,2.004,153,2.813,154,2.454,155,2.813,156,2.454,157,2.218,158,2.218,159,2.454,160,1.445,161,0.975,162,1.922,163,1.782,164,2.229,165,2.813,166,2.093,167,2.813,168,2.218,169,2.218,170,2.813,171,2.216,172,2.041,173,1.775,174,1.9,175,2.415,176,1.515,177,3.361,178,2.041,179,2.813,180,2.549,181,2.454,182,2.038,183,1.9,184,3.361,185,1.445,186,1.846,187,1.784,188,1.445,189,1.709,190,2.041,191,2.415,192,2.454,193,2.813,194,2.813,195,2.218,196,2.813,197,2.813,198,2.813,199,2.813,200,2.813,201,2.454,202,2.813,203,2.454,204,1.515,205,2.813,206,2.813,207,1.9,208,2.813,209,2.454,210,2.813,211,2.813,212,1.171]],["title/injectables/AppService.html",[147,2.742,213,0.62]],["body/injectables/AppService.html",[0,0.068,3,0.148,4,0.148,5,0.13,8,1.577,17,0.433,22,0.737,27,0.013,33,1.683,36,0.303,39,0.148,45,0.008,46,0.01,47,0.008,67,1.828,75,4.003,79,1.828,91,0.709,109,1.38,147,4.522,213,1.023,214,1.746,215,4.713,216,7.606,217,5.278,218,7.606,219,7.606,220,5.403,221,5.403,222,5.403]],["title/modules/AuthModule.html",[122,1.037,134,2.742]],["body/modules/AuthModule.html",[0,0.054,3,0.118,4,0.118,5,0.103,27,0.013,36,0.437,39,0.118,45,0.007,46,0.009,47,0.007,91,0.564,92,4.84,95,1.939,122,1.667,124,1.66,125,1.66,126,1.79,127,1.79,128,1.66,129,2.717,130,2.717,134,5.556,140,4.48,146,4.748,148,2.405,149,1.79,150,1.79,152,2.716,156,3.751,157,3.389,223,3.751,224,4.3,225,3.751,226,3.751,227,5.061,228,5.061,229,4.3,230,3.751,231,5.777,232,4.3,233,3.389,234,4.3,235,4.3,236,4.3,237,3.389,238,4.3,239,3.751,240,3.751,241,3.751,242,4.3,243,4.3,244,4.3]],["title/injectables/AuthService.html",[92,2.427,213,0.62]],["body/injectables/AuthService.html",[0,0.072,1,3.259,3,0.091,4,0.091,5,0.08,8,0.97,11,3.804,12,1.004,13,3.057,14,3.501,17,0.266,20,1.863,22,0.775,24,2.885,25,2.411,26,1.551,27,0.013,28,1.074,29,1.358,32,0.328,33,1.688,36,0.372,39,0.091,43,2.068,45,0.01,46,0.007,47,0.005,55,3.259,62,3.804,67,1.318,68,2.016,70,5.438,75,4.128,79,1.702,87,1.507,91,0.436,92,2.885,109,1.82,115,1.836,164,2.867,204,3.566,213,0.737,214,1.074,233,2.62,245,2.9,246,4.826,247,4.522,248,4.826,249,4.826,250,4.826,251,4.826,252,2.9,253,4.281,254,7.656,255,3.324,256,4.826,257,3.324,258,4.826,259,4.826,260,6.234,261,3.324,262,4.826,263,4.21,264,4.471,265,3.218,266,2.9,267,3.804,268,2.176,269,0.976,270,2.9,271,2.406,272,3.324,273,3.324,274,2.9,275,2.9,276,2.9,277,3.324,278,3.324,279,3.324,280,3.324]],["title/classes/Company.html",[0,0.051,166,1.993]],["body/classes/Company.html",[0,0.028,2,0.799,3,0.061,4,0.061,5,0.053,8,0.65,11,3.991,17,0.178,18,0.938,22,0.979,27,0.013,28,1.046,32,0.521,33,1.795,36,0.125,39,0.061,45,0.003,46,0.005,47,0.003,53,3.341,54,2.801,57,2.801,72,2.025,166,3.848,207,2.399,212,2.941,264,2.995,265,2.013,281,1.942,282,3.765,283,3.505,284,3.496,285,3.505,286,3.869,287,3.496,288,3.496,289,1.986,290,2.995,291,2.995,292,3.496,293,2.81,294,4.279,295,4.279,296,2.226,297,6.482,298,6.482,299,3.1,300,5.608,301,4.843,302,5.063,303,5.067,304,2.226,305,4.417,306,3.553,307,3.553,308,4.663,309,2.651,310,2.226,311,3.869,312,2.226,313,3.553,314,2.226,315,3.1,316,3.673,317,3.1,318,3.419,319,3.1,320,2.226,321,3.1,322,1.234,323,2.389,324,2.226,325,3.496,326,2.226,327,2.801,328,5.145,329,3.991,330,5.063,331,5.063,332,5.063,333,2.226,334,2.801,335,2.226,336,3.843,337,3.673,338,2.226,339,1.942,340,2.578,341,2.226,342,3.1,343,2.801,344,2.801,345,3.1,346,3.1,347,4.063,348,2.226,349,3.1,350,3.1,351,2.226,352,2.578,353,2.578,354,3.1,355,2.578,356,0.771]],["title/controllers/CompanyController.html",[9,1.226,357,2.946]],["body/controllers/CompanyController.html",[0,0.03,3,0.065,4,0.065,5,0.057,8,1.093,9,1.398,12,1.917,17,0.191,22,0.828,26,1.434,27,0.013,28,0.992,29,1.256,32,0.388,33,0.866,36,0.38,39,0.065,43,1.895,45,0.004,46,0.006,47,0.004,53,3.438,60,0.768,67,1.022,68,2.234,72,1.713,75,4.41,77,3.265,79,1.892,85,3.81,87,2.055,88,2.016,89,1.221,90,2.016,91,0.312,94,1.28,95,1.072,97,1.117,98,1.28,99,1.029,100,1.28,102,2.237,103,4.503,104,1.28,105,5.293,106,0.768,109,1.77,115,2.052,117,1.28,118,3.269,166,3.697,207,3.547,212,2.187,247,2.715,269,0.481,282,1.837,289,2.43,322,1.478,357,2.715,358,2.073,359,1.221,360,3.743,361,3.743,362,3.265,363,3.265,364,4.582,365,5.252,366,3.743,367,3.743,368,2.073,369,5.129,370,2.377,371,2.377,372,3.597,373,2.377,374,3.547,375,3.743,376,2.073,377,2.377,378,2.377,379,2.975,380,4.039,381,2.377,382,2.377,383,2.377,384,2.377,385,2.377,386,2.377,387,2.377,388,4.582,389,2.377,390,2.377,391,2.377,392,3.265,393,2.975,394,2.073,395,2.073,396,1.346,397,2.768,398,2.073,399,1.873,400,1.605,401,2.073,402,2.073,403,3.743,404,3.265,405,5.252,406,2.377,407,2.377,408,1.506,409,3.438,410,2.975,411,2.95,412,2.377,413,3.743,414,1.605,415,1.923,416,2.377,417,2.377,418,2.073,419,2.377,420,2.073,421,2.377,422,1.421,423,2.377,424,2.377,425,2.377,426,2.377,427,2.073,428,2.377]],["title/injectables/CompanyDto.html",[213,0.62,369,2.742]],["body/injectables/CompanyDto.html",[0,0.045,3,0.06,4,0.06,5,0.053,8,2.058,12,1.066,15,1.038,17,0.177,18,0.933,22,0.962,27,0.013,28,1.166,29,0.844,32,0.516,33,1.772,36,0.309,39,0.06,45,0.003,46,0.005,47,0.003,53,3.631,54,3.973,57,3.973,72,1.99,91,0.29,106,0.714,166,3.147,213,0.539,214,0.714,265,2.855,269,1.644,270,3.08,283,3.909,284,3.477,285,3.909,287,3.477,288,3.477,289,1.584,290,2.979,291,2.979,292,3.477,293,2.795,297,4.397,298,4.397,300,5.127,305,5.592,315,4.397,316,5.679,317,4.397,318,3.969,319,3.848,321,4.397,322,1.341,327,2.783,328,4.397,334,2.783,342,4.397,343,3.973,344,3.973,345,4.397,346,3.848,349,4.397,350,4.397,352,2.561,353,2.561,354,3.08,355,2.561,369,2.384,374,2.384,429,1.926,430,3.531,431,3.531,432,3.531,433,3.531,434,4.577,435,4.412,436,2.208,437,4.397,438,3.531,439,2.208,440,2.208,441,2.208,442,2.208,443,2.208,444,2.208,445,2.208,446,3.531,447,3.531,448,3.531,449,2.208,450,2.208,451,2.208,452,1.926,453,2.208,454,2.208,455,2.208,456,2.208,457,2.783,458,2.208,459,2.208,460,2.561,461,2.208,462,2.208,463,2.208,464,1.741,465,2.783,466,3.08,467,4.397,468,3.951,469,1.19,470,2.561,471,2.208,472,3.255,473,3.848,474,2.208]],["title/interfaces/CompanyInterface.html",[35,1.511,460,2.946]],["body/interfaces/CompanyInterface.html",[3,0.127,4,0.127,5,0.111,17,0.372,18,1.606,27,0.013,28,1.359,29,1.72,32,0.559,33,1.963,35,1.728,39,0.127,45,0.007,46,0.009,47,0.007,48,2.501,269,1.62,283,4.556,284,5.669,285,4.556,287,5.669,288,5.669,292,5.669,293,4.556,322,1.418,460,4.41,475,4.051]],["title/modules/CompanyModule.html",[122,1.037,135,2.573]],["body/modules/CompanyModule.html",[0,0.064,3,0.137,4,0.137,5,0.12,27,0.013,36,0.429,39,0.137,45,0.008,46,0.01,47,0.008,60,2.066,91,0.658,122,1.797,124,1.937,125,1.937,126,2.089,127,2.089,128,1.937,129,2.928,130,2.928,135,5.034,148,2.661,149,2.089,150,2.089,152,2.358,160,2.577,161,1.738,166,2.463,357,5.102,397,4.951,398,4.376,399,3.954,476,4.376,477,4.376,478,4.376,479,5.017,480,5.017,481,5.017]],["title/injectables/CompanyService.html",[213,0.62,397,2.427]],["body/injectables/CompanyService.html",[0,0.063,3,0.072,4,0.072,5,0.064,8,1.189,12,0.8,17,0.212,20,1.572,22,0.931,24,2.435,26,1.641,27,0.013,28,1.136,29,1.437,30,1.679,32,0.449,33,1.148,36,0.313,39,0.072,43,1.877,45,0.004,46,0.006,47,0.004,53,2.307,55,2.75,67,1.112,68,2.314,75,4.078,79,2.014,87,2.131,91,0.348,109,1.788,115,2.136,161,0.918,166,3.802,207,4.607,213,0.622,214,0.856,217,3.211,264,4.607,268,1.195,269,0.536,271,1.023,282,2,286,2.311,289,2.512,301,1.789,322,1.464,356,0.918,362,3.553,363,3.553,364,4.858,368,3.553,369,3.761,374,3.761,376,3.553,379,3.155,380,5.243,388,4.858,392,4.858,397,2.435,399,2.088,482,2.311,483,5.569,484,4.073,485,4.073,486,4.858,487,2.65,488,3.561,489,2.65,490,4.962,491,2.65,492,2.955,493,2.65,494,4.073,495,2.65,496,2.65,497,2.65,498,4.073,499,2.65,500,3.553,501,4.073,502,2.811,503,2.65,504,1.501,505,1.427,506,2.65,507,2.65,508,2.65,509,2.65,510,2.65,511,1.501,512,1.301,513,2.65,514,4.073,515,2.65,516,4.073,517,2.311,518,2.311]],["title/injectables/EntityTypeInterceptor.html",[213,0.62,400,2.742]],["body/injectables/EntityTypeInterceptor.html",[0,0.053,3,0.114,4,0.114,5,0.1,15,1.961,17,0.334,22,0.569,26,1.139,27,0.013,28,0.788,29,0.998,32,0.283,36,0.404,39,0.114,41,4.339,45,0.006,46,0.009,47,0.006,53,3.207,67,1.546,79,1.139,87,1.768,91,0.548,109,1.761,171,2.032,213,0.865,214,1.348,271,2.185,309,2.494,322,0.873,340,3.026,400,3.823,519,4.938,520,3.639,521,5.661,522,5.661,523,6.011,524,6.891,525,4.172,526,3.639,527,5.605,528,5.661,529,3.288,530,4.172,531,4.172,532,4.172,533,4.172,534,3.639,535,2.817,536,2.817,537,2.643,538,4.172,539,4.172,540,5.661,541,4.462,542,4.172,543,3.288,544,4.172,545,4.172,546,3.639,547,4.172,548,3.639,549,3.639,550,3.639,551,4.172,552,3.639,553,4.172,554,3.639,555,4.172,556,3.639,557,4.172,558,3.639,559,3.639,560,3.288,561,4.172]],["title/controllers/GreenScoreController.html",[9,1.226,562,2.946]],["body/controllers/GreenScoreController.html",[0,0.077,3,0.166,4,0.166,5,0.146,9,1.838,27,0.012,36,0.342,39,0.166,45,0.009,46,0.011,47,0.009,60,1.967,91,0.799,182,1.838,183,4.11,187,2.493,359,3.126,562,5.221,563,4.415,564,4.415,565,6.086]],["title/modules/GreenScoreModule.html",[122,1.037,136,2.742]],["body/modules/GreenScoreModule.html",[0,0.068,3,0.146,4,0.146,5,0.128,27,0.013,36,0.407,39,0.146,45,0.008,46,0.01,47,0.008,60,2.151,91,0.702,122,1.851,124,2.066,125,2.066,126,2.228,127,2.228,128,2.066,129,3.016,130,2.228,136,5.367,148,2.771,149,2.228,150,2.228,182,2.01,183,3.614,562,5.256,563,3.882,566,4.668,567,4.668,568,5.367,569,4.668,570,3.199,571,4.668]],["title/injectables/GreenScoreService.html",[213,0.62,568,2.742]],["body/injectables/GreenScoreService.html",[0,0.078,3,0.169,4,0.169,5,0.148,27,0.012,36,0.347,39,0.169,45,0.009,46,0.011,47,0.009,91,0.811,183,4.17,213,1.109,214,1.996,563,4.48,568,4.902,572,4.868]],["title/classes/JoinTagPoiEntity.html",[0,0.051,180,2.427]],["body/classes/JoinTagPoiEntity.html",[0,0.056,2,1.58,3,0.12,4,0.12,5,0.105,17,0.353,18,1.55,22,0.901,24,3.508,27,0.013,28,1.109,32,0.448,36,0.371,39,0.12,45,0.007,46,0.009,47,0.007,72,1.864,171,2.917,172,3.192,173,3.258,174,2.972,180,3.508,212,1.832,264,3.963,282,2.881,289,2.37,308,4.257,309,3.508,322,1.228,323,3.556,356,1.525,573,5.108,574,3.839,575,4.401,576,4.625,577,6.143,578,6.399,579,6.143,580,3.839,581,5.868,582,4.401,583,4.401,584,5.119,585,4.401,586,5.204,587,3.469,588,4.625,589,3.839,590,3.839]],["title/modules/JoinTagPoiModule.html",[122,1.037,137,2.427]],["body/modules/JoinTagPoiModule.html",[0,0.064,3,0.138,4,0.138,5,0.121,27,0.013,36,0.417,39,0.138,45,0.008,46,0.01,47,0.008,91,0.664,122,1.805,124,1.954,125,1.954,126,2.108,127,2.108,128,1.954,129,2.941,130,2.941,137,4.76,148,2.676,149,2.108,150,2.108,152,2.38,160,2.6,161,1.754,171,2.535,175,2.868,176,2.727,180,3.842,573,3.672,591,4.416,592,4.416,593,4.416,594,4.697,595,4.416,596,3.026,597,5.062]],["title/injectables/JoinTagPoiService.html",[213,0.62,594,2.3]],["body/injectables/JoinTagPoiService.html",[0,0.036,3,0.078,4,0.078,5,0.068,17,0.229,20,1.663,22,0.925,26,1.783,27,0.013,28,1.234,29,1.562,32,0.443,36,0.367,39,0.078,43,2.118,45,0.004,46,0.007,47,0.004,67,1.176,68,2.303,79,1.783,87,2.04,91,0.374,109,1.733,115,2.007,161,0.988,171,2.941,172,2.068,173,3.158,174,1.925,176,3.761,180,3.712,213,0.658,214,0.922,268,1.286,269,0.577,271,1.101,356,0.988,488,3.116,505,1.536,573,5.064,584,2.487,589,2.487,594,2.44,598,2.248,599,4.307,600,4.307,601,4.307,602,5.784,603,4.307,604,4.307,605,2.851,606,2.851,607,5.191,608,4.307,609,6.21,610,2.851,611,5.191,612,4.307,613,2.851,614,4.307,615,2.851,616,6.21,617,2.851,618,4.307,619,2.851,620,4.307,621,2.851,622,2.729,623,2.851,624,2.851,625,2.851,626,4.307,627,3.395,628,2.487,629,2.487,630,2.851,631,2.851,632,2.851,633,2.248,634,2.851,635,2.575,636,2.851,637,2.487,638,2.851]],["title/injectables/JwtStrategy.html",[213,0.62,227,2.742]],["body/injectables/JwtStrategy.html",[0,0.076,3,0.163,4,0.099,5,0.087,8,1.058,12,1.094,13,4.813,17,0.291,20,1.982,22,0.701,24,4.25,26,1.402,27,0.013,28,0.97,29,1.228,32,0.246,36,0.384,39,0.099,40,2.629,41,2.447,43,1.862,45,0.01,46,0.008,47,0.006,53,2.909,55,3.467,56,4.705,62,4.047,67,1.402,68,1.741,79,0.99,91,0.476,95,1.634,99,2.223,109,1.657,113,2.857,114,3.162,115,1.927,121,4.479,164,2.582,204,3.212,212,1.509,213,0.784,214,1.171,227,3.467,239,4.479,240,3.162,241,3.162,247,3.725,252,3.162,253,4.231,263,4.479,266,3.162,268,2.315,269,1.039,271,1.982,275,4.479,316,3.725,492,3.725,512,1.779,639,3.162,640,5.135,641,4.479,642,4.541,643,3.624,644,5.135,645,5.135,646,5.135,647,3.624,648,5.135,649,4.479,650,3.162,651,3.624,652,3.162,653,2.857,654,3.162,655,3.162,656,3.162,657,3.162,658,3.624,659,3.624,660,3.624,661,3.624,662,3.624,663,3.624,664,3.624,665,3.624]],["title/injectables/LocalStrategy.html",[213,0.62,228,2.742]],["body/injectables/LocalStrategy.html",[0,0.082,3,0.116,4,0.116,5,0.101,8,1.233,12,1.275,17,0.339,20,1.631,22,0.779,24,3.413,26,1.559,27,0.013,28,1.079,29,1.365,32,0.387,33,1.793,36,0.389,39,0.116,43,2.02,45,0.006,46,0.009,47,0.006,55,3.855,64,4.98,67,1.559,68,1.888,76,4.98,79,1.153,91,0.554,92,4.747,95,1.905,109,1.652,115,1.365,164,3.133,204,3.897,213,0.872,214,1.365,228,3.855,230,3.685,237,3.33,247,4.141,265,3.234,269,0.855,271,1.631,316,4.141,408,2.676,492,4.141,500,4.98,512,2.074,641,4.98,649,4.98,650,3.685,652,3.685,653,3.33,655,3.685,656,3.685,657,3.685,666,3.685,667,5.709,668,4.224,669,4.224,670,5.709,671,4.224,672,5.709,673,4.224,674,4.224]],["title/classes/LoginDto.html",[0,0.051,82,2.946]],["body/classes/LoginDto.html",[0,0.084,2,1.921,3,0.146,4,0.146,5,0.128,17,0.429,18,1.758,22,0.908,27,0.013,32,0.452,33,1.753,36,0.374,39,0.146,45,0.008,46,0.01,47,0.008,72,1.879,82,4.829,106,1.73,201,6.32,204,3.903,269,1.608,468,3.979,469,2.883,472,3.406,675,4.668,676,4.668,677,5.352,678,5.352,679,5.352,680,5.807]],["title/classes/PercentAndIdTag.html",[0,0.051,681,2.427]],["body/classes/PercentAndIdTag.html",[0,0.074,2,2.109,3,0.161,4,0.161,5,0.141,17,0.471,18,1.861,22,0.961,27,0.012,32,0.478,39,0.161,45,0.009,46,0.011,47,0.009,186,3.268,322,1.638,681,4.212,682,5.124,683,5.476,684,5.874,685,5.874]],["title/classes/PercentTypeGreenScoreAndPoi.html",[0,0.051,191,2.3]],["body/classes/PercentTypeGreenScoreAndPoi.html",[0,0.051,2,1.444,3,0.11,4,0.11,5,0.096,17,0.322,18,1.458,22,0.926,27,0.013,28,1.043,29,1.32,32,0.534,36,0.381,39,0.11,45,0.006,46,0.008,47,0.006,72,1.916,106,1.3,173,3.191,174,2.716,182,2.218,186,2.73,187,2.464,189,3.071,190,2.918,191,3.128,269,1.62,282,2.711,289,2.263,308,4.923,309,3.301,322,1.42,323,2.975,347,3.128,356,1.394,472,3.19,576,3.171,586,4.97,587,3.171,588,4.352,590,3.509,635,3.301,686,4.029,687,3.509,688,2.918,689,4.022,690,4.022,691,4.022,692,5.522,693,4.022,694,4.022,695,3.498,696,4.022,697,4.022,698,5.522]],["title/controllers/PercentTypeGreenScoreAndPoiController.html",[9,1.226,699,2.946]],["body/controllers/PercentTypeGreenScoreAndPoiController.html",[0,0.039,3,0.085,4,0.085,5,0.074,8,0.903,9,1.645,12,1.645,27,0.013,32,0.473,36,0.41,39,0.085,43,1.702,45,0.005,46,0.007,47,0.005,60,0.999,68,1.965,87,1.702,88,2.465,89,1.588,90,1.666,91,0.406,94,1.666,95,1.394,97,1.454,98,1.666,99,1.339,100,1.666,108,2.088,109,1.72,115,2.078,117,1.666,118,3.626,162,1.394,163,1.959,173,1.905,182,2.159,186,2.608,187,2.478,188,1.588,191,1.752,212,2.507,322,1.14,344,2.437,359,1.588,372,3.642,379,1.752,393,3.412,396,1.752,409,3.813,410,3.412,414,2.088,415,3.093,422,1.848,596,1.848,635,1.848,686,1.752,699,3.32,700,2.697,701,5.253,702,6.022,703,3.244,704,4.073,705,2.437,706,2.243,707,3.092,708,3.092,709,3.092,710,3.092,711,3.092,712,3.092,713,3.092,714,3.092,715,3.092,716,3.092,717,3.092,718,3.092,719,3.992,720,3.092,721,3.092,722,3.092,723,3.092,724,3.092,725,3.092]],["title/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.051,704,2.573]],["body/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.078,2,1.685,3,0.128,4,0.128,5,0.113,15,2.879,17,0.376,18,1.617,22,0.93,27,0.013,32,0.539,36,0.383,39,0.128,45,0.007,46,0.009,47,0.007,72,1.924,106,1.517,182,2.262,186,2.951,187,2.596,269,1.623,322,1.607,465,5.693,469,2.529,472,3.396,635,4.074,686,4.092,695,4.318,704,3.88,726,4.096,727,4.944,728,6.815,729,4.695,730,4.695,731,4.695,732,4.695,733,4.695]],["title/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[35,1.511,727,2.946]],["body/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[3,0.15,4,0.15,5,0.132,17,0.44,18,1.786,27,0.012,32,0.533,35,2.043,39,0.15,45,0.008,46,0.01,47,0.008,48,2.958,182,2.042,186,3.312,187,2.343,269,1.483,322,1.726,635,4.573,686,3.111,695,4.846,727,4.906,734,4.79,735,4.79]],["title/modules/PercentTypeGreenScoreAndPoiModule.html",[122,1.037,138,2.427]],["body/modules/PercentTypeGreenScoreAndPoiModule.html",[0,0.057,3,0.123,4,0.123,5,0.108,27,0.013,32,0.516,36,0.442,39,0.123,45,0.007,46,0.009,47,0.007,60,1.927,91,0.592,122,1.707,124,1.74,125,1.74,126,1.876,127,1.876,128,1.74,129,2.781,130,2.781,138,4.631,139,2.694,143,2.694,148,2.482,149,1.876,150,1.876,152,2.119,158,3.552,160,2.315,161,1.561,182,2.339,184,3.552,185,2.315,186,2.581,187,2.463,188,2.315,189,1.806,190,3.269,191,2.553,595,3.931,596,2.694,686,2.553,699,4.846,703,4.393,705,3.552,736,3.931,737,3.931,738,3.931,739,3.931,740,3.931,741,4.507]],["title/injectables/PercentTypeGreenScoreAndPoiService.html",[213,0.62,703,2.187]],["body/injectables/PercentTypeGreenScoreAndPoiService.html",[0,0.03,3,0.065,4,0.065,5,0.057,12,0.716,17,0.19,20,1.442,22,0.779,26,1.558,27,0.013,28,1.078,29,1.364,32,0.523,36,0.38,39,0.065,43,1.782,45,0.004,46,0.006,47,0.004,67,1.02,68,2.216,79,1.432,87,1.782,91,0.311,109,1.769,115,2.354,161,0.821,173,3.16,174,1.6,182,2.25,185,1.217,186,1.026,187,2.487,188,3.113,189,2.829,190,1.719,191,3.433,213,0.57,214,0.766,268,1.069,269,0.479,271,2.34,289,0.851,322,1.449,356,0.821,488,2.825,502,1.343,504,1.343,505,1.277,511,1.343,512,1.164,543,3.643,570,1.417,598,1.868,627,1.868,686,3.433,703,2.012,704,2.928,705,1.868,719,2.067,742,3.734,743,3.734,744,3.734,745,3.734,746,2.37,747,2.37,748,4.621,749,3.734,750,2.37,751,3.734,752,3.734,753,5.705,754,2.37,755,2.37,756,3.734,757,2.37,758,3.734,759,2.37,760,1.343,761,2.067,762,1.217,763,2.37,764,2.37,765,2.37,766,2.37,767,3.734,768,2.37,769,3.734,770,2.37,771,2.37,772,2.37,773,2.37,774,5.244,775,2.37,776,2.37,777,2.37,778,2.37,779,2.37,780,2.37,781,2.37,782,2.37,783,2.37,784,2.37,785,3.734,786,4.621,787,2.37,788,2.37,789,2.37,790,2.37,791,2.37,792,3.734,793,2.37]],["title/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[213,0.62,706,2.946]],["body/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[0,0.061,3,0.131,4,0.131,5,0.114,15,2.245,17,0.383,22,0.652,26,1.304,27,0.013,28,0.902,29,1.142,30,4.353,32,0.511,36,0.386,39,0.131,43,1.934,45,0.007,46,0.009,47,0.007,67,1.691,79,1.304,87,1.934,91,0.627,109,1.22,182,2.195,187,2.519,213,0.946,214,1.543,271,1.843,415,3.18,536,3.225,537,3.025,686,3.507,704,3.923,706,4.492,794,5.401,795,4.165,796,5.401,797,5.73,798,6.342,799,4.775,800,5.401,801,5.401,802,4.775,803,4.775,804,4.775,805,4.775,806,4.775,807,4.775]],["title/classes/Poi.html",[0,0.051,173,1.691]],["body/classes/Poi.html",[0,0.041,2,1.148,3,0.087,4,0.087,5,0.077,8,1.622,17,0.256,18,1.239,22,1.058,27,0.013,28,1.05,32,0.542,33,1.886,36,0.18,39,0.087,45,0.005,46,0.007,47,0.005,72,2.19,173,1.953,212,3.198,264,4.401,282,2.303,283,3.52,285,3.52,289,1.995,290,3.752,291,3.752,293,3.52,294,5.238,295,4.44,299,2.79,301,5.058,308,5.238,309,3.896,311,4.847,322,1.281,323,2.993,325,3.698,336,4.316,337,4.942,347,4.351,356,1.108,808,2.79,809,4.847,810,4.031,811,4.847,812,4.38,813,4.691,814,3.198,815,3.198,816,3.198,817,4.691,818,3.198,819,4.691,820,3.198,821,3.198,822,3.198,823,3.198,824,3.198,825,4.691,826,3.198,827,4.691,828,3.198,829,3.198,830,3.198]],["title/classes/PoiAndTags.html",[0,0.051,831,3.201]],["body/classes/PoiAndTags.html",[0,0.062,2,1.764,3,0.134,4,0.134,5,0.118,17,0.394,18,1.666,20,1.897,22,0.95,26,1.342,27,0.013,28,0.929,29,1.175,32,0.473,36,0.391,39,0.134,43,1.97,45,0.008,46,0.01,47,0.008,171,2.264,172,3.565,173,3.455,175,2.784,180,4.728,181,4.287,622,5.075,831,4.972,832,4.287,833,6.307,834,6.307,835,4.914,836,3.565,837,4.914,838,4.914]],["title/controllers/PoiController.html",[9,1.226,839,2.946]],["body/controllers/PoiController.html",[0,0.034,3,0.074,4,0.074,5,0.065,8,0.793,9,1.522,12,1.254,17,0.218,20,1.049,22,0.875,26,1.376,27,0.013,28,0.953,29,1.205,32,0.413,36,0.417,39,0.074,43,1.763,45,0.004,46,0.006,47,0.004,60,0.878,67,1.134,68,2.285,72,1.81,79,1.75,87,1.763,88,2.237,89,1.396,90,1.464,91,0.357,94,1.464,95,1.225,97,1.278,98,1.464,99,1.177,100,1.464,102,2.483,103,5.053,104,1.464,106,0.878,109,1.757,115,1.965,117,1.464,118,3.453,171,1.491,173,2.35,175,1.54,176,1.464,182,1.254,186,1.177,187,1.439,188,1.396,207,2.805,212,1.729,268,2.273,269,1.02,322,1.341,359,1.396,372,3.197,393,2.856,394,2.371,395,2.371,396,1.54,400,1.835,401,2.371,402,2.371,404,3.623,409,3.632,410,2.856,414,1.835,415,2.134,418,2.371,420,2.371,427,2.371,594,2.856,596,3.013,635,3.832,703,2.715,760,2.856,836,1.972,839,3.013,840,2.371,841,3.623,842,3.623,843,3.623,844,4.923,845,4.153,846,5.644,847,5.644,848,5.041,849,2.371,850,4.357,851,2.718,852,2.718,853,2.718,854,2.718,855,2.718,856,2.718,857,2.718,858,2.718,859,2.718,860,2.718,861,2.718,862,2.718,863,2.718,864,2.718,865,2.718,866,2.718,867,2.718,868,1.972,869,2.718,870,6.67,871,2.718,872,2.718,873,2.718,874,2.718,875,2.718,876,2.718,877,2.718,878,2.718,879,2.718,880,2.718,881,2.718,882,2.718,883,2.718]],["title/injectables/PoiDto.html",[213,0.62,850,2.573]],["body/injectables/PoiDto.html",[0,0.049,3,0.068,4,0.068,5,0.059,8,2.302,12,1.165,15,1.162,17,0.198,18,1.019,22,0.99,27,0.013,28,1.1,32,0.54,33,1.805,36,0.362,39,0.068,45,0.004,46,0.006,47,0.004,52,3.366,53,2.186,72,2.048,91,0.324,106,0.799,173,3.249,182,1.165,187,0.856,189,1.902,213,0.589,214,0.799,269,1.665,283,4.082,285,4.082,289,2.089,290,3.206,291,3.206,293,3.687,309,2.306,318,2.606,322,1.218,327,4.229,329,3.041,334,3.041,374,2.606,434,3.93,452,4.68,457,3.041,464,1.948,465,3.041,466,3.366,467,5.816,468,3.852,469,1.331,472,2.9,473,5.977,622,3.399,681,3.479,810,3.444,812,4.587,841,3.366,842,3.366,850,2.444,884,2.155,885,4.747,886,2.471,887,2.471,888,3.859,889,4.747,890,2.471,891,2.471,892,2.471,893,2.471,894,2.471,895,2.471,896,2.471,897,2.471,898,2.471,899,2.471,900,3.859,901,5.82,902,2.471,903,2.471,904,2.471,905,2.471,906,2.471,907,2.471,908,2.799,909,2.471,910,5.365,911,3.859,912,3.366,913,2.471,914,2.471,915,1.948,916,2.155,917,2.471,918,2.471,919,2.471]],["title/interfaces/PoiInterface.html",[35,1.511,908,2.946]],["body/interfaces/PoiInterface.html",[3,0.116,4,0.116,5,0.102,8,2.028,17,0.341,18,1.516,27,0.013,28,1.313,29,1.372,32,0.56,33,1.972,35,1.584,36,0.239,39,0.116,45,0.007,46,0.009,47,0.007,48,2.293,189,2.784,269,1.635,283,4.401,285,4.401,290,4.691,291,4.691,293,4.401,681,4.336,810,5.04,811,6.06,812,5.476,908,4.163,920,3.713]],["title/modules/PoiModule.html",[122,1.037,139,2.427]],["body/modules/PoiModule.html",[0,0.05,3,0.107,4,0.107,5,0.094,27,0.013,32,0.456,36,0.444,39,0.107,45,0.006,46,0.008,47,0.006,60,1.756,91,0.516,122,1.591,124,1.517,125,1.517,126,1.636,127,1.636,128,1.517,129,2.593,130,2.593,137,4.36,138,4.36,139,4.904,142,4.36,143,4.36,144,4.36,148,2.262,149,1.636,150,1.636,152,2.554,160,2.018,161,1.361,168,3.097,169,3.097,171,1.95,173,1.636,175,2.226,176,2.116,177,4.282,182,2.202,184,3.097,185,2.791,186,1.701,187,1.882,188,2.018,570,2.348,596,2.348,739,3.427,740,3.427,760,4.519,762,2.018,836,2.85,839,4.518,921,3.427,922,3.929,923,3.427,924,3.427,925,3.929,926,3.929]],["title/injectables/PoiService.html",[213,0.62,760,2.3]],["body/injectables/PoiService.html",[0,0.026,3,0.056,4,0.056,5,0.049,12,0.619,17,0.164,20,1.284,22,0.924,26,1.552,27,0.013,28,1.131,29,1.359,32,0.46,33,0.97,36,0.394,39,0.056,43,1.87,45,0.003,46,0.005,47,0.003,67,0.908,68,2.315,79,1.808,87,2.068,91,0.269,109,1.844,115,2.502,161,0.71,171,1.733,173,2.757,175,1.161,176,1.104,182,1.602,185,1.053,186,1.817,187,1.454,188,1.053,189,0.821,191,1.161,192,1.788,213,0.508,214,0.663,268,2.699,269,0.415,271,2.666,289,0.736,322,1.189,356,0.71,486,4.211,488,2.6,502,1.161,504,1.161,505,1.104,511,1.161,512,1.006,517,2.901,518,2.901,535,1.384,537,1.299,560,1.616,570,1.225,594,3.532,596,1.988,622,3.058,635,2.508,681,3.172,701,1.788,703,3.359,760,1.884,762,3.203,809,1.788,836,1.487,843,2.901,844,4.211,849,2.901,850,1.299,915,1.616,916,1.788,927,1.788,928,4.827,929,3.325,930,3.325,931,3.325,932,3.325,933,4.827,934,4.827,935,2.05,936,6.235,937,3.532,938,3.532,939,2.05,940,4.196,941,2.05,942,2.05,943,3.325,944,2.05,945,3.325,946,4.196,947,2.05,948,2.05,949,3.325,950,2.05,951,3.325,952,2.05,953,2.05,954,2.05,955,2.05,956,1.788,957,1.788,958,1.487,959,2.05,960,2.05,961,2.05,962,2.05,963,2.05,964,2.05,965,2.05,966,2.05,967,2.05,968,4.196,969,2.05,970,2.05,971,2.05,972,2.05,973,2.05,974,2.05,975,2.05,976,2.05,977,2.05,978,2.05,979,2.05,980,2.05,981,2.05,982,2.05,983,2.05,984,2.05,985,2.05,986,2.05,987,3.325,988,2.05,989,3.325,990,3.325,991,3.325,992,2.05,993,2.05,994,2.05,995,4.196,996,2.05,997,2.05,998,3.325,999,2.05,1000,2.05,1001,2.05,1002,3.325,1003,2.05]],["title/injectables/PoiTransformationPipe.html",[213,0.62,868,2.946]],["body/injectables/PoiTransformationPipe.html",[0,0.059,3,0.127,4,0.127,5,0.111,12,1.398,15,2.177,17,0.371,22,0.632,26,1.264,27,0.013,28,0.875,29,1.107,30,3.845,32,0.314,36,0.38,39,0.127,45,0.007,46,0.009,47,0.007,67,1.657,68,1.976,79,1.264,87,1.895,91,0.608,109,1.73,186,2.005,187,1.604,213,0.927,214,1.497,271,1.787,322,0.969,415,3.117,512,2.273,536,3.127,537,2.934,796,5.294,797,5.336,798,6.267,800,5.294,801,5.294,850,3.845,868,4.403,1004,4.039,1005,4.631,1006,4.631,1007,6.069,1008,4.631,1009,4.631,1010,6.069,1011,4.631,1012,4.631,1013,4.631,1014,4.631,1015,4.631,1016,4.631,1017,4.631,1018,4.631,1019,4.631,1020,4.631]],["title/classes/Role.html",[0,0.051,162,1.831]],["body/classes/Role.html",[0,0.07,2,1.971,3,0.15,4,0.15,5,0.132,17,0.44,18,1.786,22,0.923,27,0.013,32,0.459,33,1.564,36,0.308,39,0.15,45,0.008,46,0.01,47,0.008,72,1.909,162,3.542,282,3.32,289,2.631,294,3.983,322,1.415,323,3.948,336,3.282,347,3.831,356,1.902,1021,4.79,1022,5.491,1023,6.763,1024,5.491]],["title/guards/RoleGuard.html",[97,1.909,1025,3.201]],["body/guards/RoleGuard.html",[0,0.059,3,0.128,4,0.128,5,0.112,15,2.195,17,0.374,20,1.802,22,0.833,26,1.666,27,0.013,28,1.153,29,1.459,32,0.414,36,0.382,39,0.128,45,0.007,46,0.009,47,0.007,56,3.387,67,1.666,79,1.275,87,1.906,91,0.613,97,2.868,99,2.642,109,1.559,164,2.642,212,1.944,213,0.932,269,0.945,271,2.782,408,2.958,523,6.287,526,4.073,527,5.929,529,3.68,1026,4.669,1027,4.073,1028,7.208,1029,4.669,1030,7.671,1031,4.669,1032,6.102,1033,4.669,1034,6.102,1035,4.073,1036,4.669,1037,4.669,1038,4.669,1039,4.669,1040,6.102,1041,4.669,1042,4.669,1043,4.669]],["title/modules/RoleModule.html",[122,1.037,140,2.427]],["body/modules/RoleModule.html",[0,0.065,3,0.141,4,0.141,5,0.124,27,0.013,36,0.42,39,0.141,45,0.008,46,0.01,47,0.008,91,0.677,122,1.82,124,1.99,125,1.99,126,2.146,127,2.146,128,1.99,129,2.965,130,2.965,140,4.779,148,2.707,149,2.146,150,2.146,152,2.423,160,2.648,161,1.786,162,2.324,642,4.969,1044,4.497,1045,4.497,1046,4.497,1047,5.155,1048,5.155,1049,4.497,1050,5.155]],["title/injectables/RoleService.html",[213,0.62,642,2.427]],["body/injectables/RoleService.html",[0,0.047,3,0.102,4,0.102,5,0.089,8,1.086,12,1.123,17,0.298,20,2.019,22,0.895,26,1.792,27,0.013,28,1.24,29,1.569,32,0.41,33,1.399,36,0.368,39,0.102,43,2.049,45,0.006,46,0.008,47,0.006,67,1.428,68,2.231,79,1.652,87,2.049,91,0.488,99,2.265,109,1.677,115,1.69,161,1.289,162,2.958,213,0.799,214,1.202,217,4.123,268,1.677,269,0.753,289,1.877,322,1.373,356,1.289,488,3.724,502,2.108,504,2.108,505,2.004,511,2.108,512,1.827,637,3.245,642,3.126,1049,3.245,1051,3.245,1052,5.23,1053,5.23,1054,5.23,1055,3.72,1056,3.72,1057,6.049,1058,5.23,1059,3.72,1060,6.562,1061,5.23,1062,3.72,1063,6.562,1064,5.23,1065,3.72,1066,3.72,1067,3.72,1068,3.72,1069,3.72,1070,3.72,1071,3.72,1072,3.72,1073,5.23,1074,3.72,1075,3.72]],["title/controllers/StatsController.html",[9,1.226,1076,2.946]],["body/controllers/StatsController.html",[0,0.067,3,0.144,4,0.144,5,0.126,9,1.585,17,0.421,22,0.717,27,0.013,36,0.423,39,0.144,45,0.008,46,0.01,47,0.008,60,1.697,67,1.796,68,2.097,72,1.483,79,1.434,89,2.698,91,0.689,94,2.829,95,2.368,102,3.932,104,2.829,106,1.697,109,1.342,115,1.697,117,2.829,269,1.062,359,2.698,408,3.327,1076,4.772,1077,4.581,1078,5.251,1079,6.568,1080,5.251,1081,4.551,1082,4.581,1083,5.251,1084,5.251,1085,5.251]],["title/modules/StatsModule.html",[122,1.037,141,2.742]],["body/modules/StatsModule.html",[0,0.053,3,0.114,4,0.114,5,0.1,27,0.013,32,0.384,36,0.44,39,0.114,45,0.006,46,0.009,47,0.006,60,1.83,91,0.548,122,1.642,124,1.61,125,1.61,126,1.737,127,1.737,128,1.61,129,2.675,130,1.737,135,4.706,137,4.441,138,4.441,139,4.441,141,5.599,142,4.441,144,4.441,148,2.357,149,1.737,150,1.737,152,2.661,158,3.288,159,3.639,168,3.288,169,3.288,171,2.032,175,2.363,176,2.247,177,4.462,182,1.709,186,1.806,187,1.961,188,2.143,1076,4.661,1081,4.706,1082,3.639,1086,3.639,1087,4.172,1088,3.639,1089,4.172,1090,4.172]],["title/injectables/StatsService.html",[213,0.62,1081,2.573]],["body/injectables/StatsService.html",[0,0.042,3,0.09,4,0.09,5,0.079,17,0.265,20,1.855,22,0.773,26,0.902,27,0.013,28,0.624,29,0.79,32,0.448,36,0.399,39,0.09,40,2.397,41,2.231,45,0.005,46,0.007,47,0.005,67,1.312,68,2.012,79,1.312,87,1.501,91,0.434,109,1.588,113,2.605,115,2.439,166,1.622,171,1.725,173,1.376,175,1.872,176,1.78,182,1.451,186,1.431,187,1.665,188,1.697,213,0.734,214,1.068,268,3.35,269,1.394,271,2.745,295,2.397,303,3.788,322,0.691,329,4.9,337,2.397,397,4.251,594,3.904,596,2.872,703,3.831,760,4.029,761,2.883,810,2.397,937,4.029,938,4.029,956,2.883,957,2.883,1079,5.423,1081,3.044,1091,2.883,1092,6.217,1093,3.304,1094,3.304,1095,3.304,1096,3.304,1097,3.304,1098,4.805,1099,3.304,1100,2.883,1101,3.304,1102,3.304,1103,4.805,1104,3.304,1105,4.805,1106,3.304,1107,4.192,1108,2.883,1109,4.805,1110,3.304,1111,3.304,1112,4.805,1113,4.805,1114,3.304,1115,3.304,1116,3.304,1117,3.304,1118,3.304,1119,4.805,1120,3.304,1121,3.304,1122,3.304,1123,3.304]],["title/classes/Tag.html",[0,0.051,171,1.458]],["body/classes/Tag.html",[0,0.065,2,1.828,3,0.139,4,0.139,5,0.122,17,0.408,18,1.704,22,0.966,27,0.013,32,0.481,33,1.722,36,0.362,39,0.139,45,0.008,46,0.01,47,0.008,72,2,106,1.646,171,2.758,282,3.168,289,2.542,301,3.439,322,1.35,323,3.476,336,3.044,339,4.443,347,4.012,356,1.764,472,3.33,688,3.694,1124,4.443,1125,7.083,1126,6.452,1127,5.093,1128,5.093,1129,4.014,1130,5.629,1131,5.093]],["title/controllers/TagsController.html",[9,1.226,1132,2.946]],["body/controllers/TagsController.html",[0,0.046,3,0.098,4,0.098,5,0.086,9,1.087,12,1.543,17,0.289,22,0.882,26,1.622,27,0.013,28,1.123,29,1.421,32,0.403,36,0.419,39,0.098,43,1.125,45,0.006,46,0.008,47,0.006,60,1.164,67,1.396,68,2.294,72,1.826,79,1.766,87,2.02,88,2.753,89,1.85,90,1.94,91,0.473,94,1.94,95,1.624,97,1.693,98,1.94,99,1.559,100,1.94,102,3.055,104,1.94,106,1.164,109,1.652,115,2.207,117,1.94,118,3.201,171,1.293,212,2.128,269,0.728,322,1.484,359,1.85,372,4.019,379,2.04,393,3.366,396,2.04,408,2.281,409,3.366,410,3.366,411,2.839,414,2.432,415,1.85,422,2.153,622,2.281,633,5.098,937,3.366,1132,3.708,1133,3.141,1134,4.459,1135,4.459,1136,5.642,1137,4.459,1138,3.141,1139,4.955,1140,3.601,1141,3.601,1142,4.459,1143,3.141,1144,3.141,1145,3.601,1146,2.612,1147,3.601,1148,3.141,1149,3.141,1150,3.601,1151,3.141,1152,2.839,1153,3.601,1154,3.601,1155,3.601,1156,3.601,1157,3.601,1158,5.111,1159,3.601,1160,3.601,1161,3.601]],["title/classes/TagsDto.html",[0,0.051,1139,2.946]],["body/classes/TagsDto.html",[0,0.084,2,1.891,3,0.144,4,0.144,5,0.126,8,1.538,15,3.099,17,0.422,18,1.741,22,0.719,27,0.013,28,1.245,32,0.358,33,1.525,36,0.404,39,0.144,45,0.008,46,0.01,47,0.008,72,1.487,106,1.703,171,2.786,269,1.455,318,4.451,355,3.821,434,3.557,468,3.94,469,2.838,472,3.099,1139,4.782,1162,4.595,1163,5.219,1164,6.591,1165,6.591,1166,4.595,1167,5.268,1168,5.268]],["title/interfaces/TagsInterface.html",[35,1.511,1163,2.946]],["body/interfaces/TagsInterface.html",[3,0.165,4,0.165,5,0.145,17,0.484,18,1.893,27,0.012,32,0.41,33,1.767,35,2.249,39,0.165,45,0.009,46,0.011,47,0.009,48,3.255,171,2.836,269,1.222,1163,5.199,1169,5.271]],["title/modules/TagsModule.html",[122,1.037,142,2.427]],["body/modules/TagsModule.html",[0,0.064,3,0.137,4,0.137,5,0.12,27,0.013,36,0.429,39,0.137,45,0.008,46,0.01,47,0.008,60,2.066,91,0.658,122,1.797,124,1.937,125,1.937,126,2.089,127,2.089,128,1.937,129,2.928,130,2.928,142,4.75,148,2.661,149,2.089,150,2.089,152,2.358,160,2.577,161,1.738,171,1.801,937,4.692,1132,5.102,1151,4.376,1152,3.954,1170,4.376,1171,4.376,1172,4.376,1173,5.017,1174,5.017,1175,5.017]],["title/injectables/TagsService.html",[213,0.62,937,2.3]],["body/injectables/TagsService.html",[0,0.044,3,0.095,4,0.095,5,0.083,12,1.049,17,0.279,20,1.923,22,0.985,26,1.839,27,0.013,28,1.273,29,1.611,32,0.432,36,0.378,39,0.095,45,0.005,46,0.008,47,0.005,67,1.361,68,2.368,79,1.914,87,1.988,91,0.456,109,1.845,115,2.266,161,1.204,171,1.789,213,0.761,214,1.123,268,1.567,269,0.703,271,1.923,289,1.247,322,1.574,356,1.204,488,3.428,502,1.968,504,1.968,505,1.872,511,1.968,512,1.706,535,2.346,537,2.201,560,2.739,622,3.691,628,3.031,629,3.031,633,4.592,937,2.823,1134,4.347,1135,4.347,1136,5.551,1137,4.347,1138,4.347,1142,3.031,1143,4.347,1148,4.347,1152,2.739,1176,3.031,1177,4.983,1178,6.363,1179,3.475,1180,3.475,1181,4.983,1182,3.475,1183,3.475,1184,3.475,1185,3.475,1186,4.983,1187,3.475,1188,3.475,1189,3.475,1190,3.928,1191,3.475,1192,3.475,1193,3.475,1194,3.475,1195,3.475,1196,3.475,1197,3.475,1198,3.475,1199,3.475,1200,3.475]],["title/classes/Type.html",[0,0.051,32,0.276]],["body/classes/Type.html",[0,0.068,2,1.927,3,0.147,4,0.147,5,0.129,17,0.43,18,1.762,22,0.91,27,0.013,32,0.547,33,1.543,36,0.374,39,0.147,45,0.008,46,0.01,47,0.008,72,1.883,106,1.735,282,3.274,289,2.605,322,1.395,323,3.593,336,3.209,347,3.778,356,1.86,472,3.411,688,3.895,1129,4.232,1130,5.818,1201,4.683,1202,5.369,1203,5.369]],["title/controllers/TypeController.html",[9,1.226,1204,2.946]],["body/controllers/TypeController.html",[0,0.041,3,0.089,4,0.089,5,0.078,8,0.955,9,1.7,12,1.44,17,0.262,22,0.844,26,1.537,27,0.013,28,1.064,29,1.346,32,0.493,36,0.423,39,0.089,43,2.055,45,0.005,46,0.007,47,0.005,60,1.058,67,1.303,68,2.252,72,1.747,79,1.69,87,1.49,88,2.57,89,1.681,90,1.763,91,0.429,94,1.763,95,1.475,97,1.538,98,1.763,99,1.417,100,1.763,102,2.852,104,1.763,106,1.058,109,1.581,115,2.126,117,1.763,118,3.333,212,1.986,269,0.662,322,1.437,359,1.681,372,3.891,379,1.854,393,3.19,396,1.854,408,2.073,409,3.506,410,3.19,411,2.579,414,2.21,415,1.681,422,1.956,470,2.374,683,4.982,938,3.506,1108,2.855,1144,2.855,1146,2.374,1149,2.855,1204,3.461,1205,2.855,1206,4.162,1207,4.771,1208,4.162,1209,5.398,1210,2.855,1211,4.908,1212,2.374,1213,3.272,1214,3.272,1215,3.272,1216,2.855,1217,3.272,1218,3.272,1219,2.855,1220,2.579,1221,2.855,1222,3.272,1223,2.579,1224,2.579,1225,3.272,1226,3.272,1227,3.272,1228,4.771,1229,3.272,1230,3.272]],["title/classes/TypeDto.html",[0,0.051,1211,2.742]],["body/classes/TypeDto.html",[0,0.083,2,1.879,3,0.143,4,0.143,5,0.125,8,1.528,15,3.086,17,0.42,18,1.734,22,0.714,27,0.013,32,0.536,33,1.519,36,0.403,39,0.143,45,0.008,46,0.01,47,0.008,72,1.478,106,1.692,166,3.223,269,1.451,318,4.434,352,4.763,353,4.763,355,3.798,434,3.535,468,3.925,469,2.82,472,3.086,1166,4.567,1211,4.434,1231,4.567,1232,5.204,1233,5.727,1234,5.235,1235,5.235]],["title/classes/TypeGreenScore.html",[0,0.051,189,1.627]],["body/classes/TypeGreenScore.html",[0,0.066,2,1.856,3,0.141,4,0.141,5,0.124,17,0.414,18,1.721,22,0.889,27,0.013,32,0.442,33,1.507,36,0.366,39,0.141,45,0.008,46,0.01,47,0.008,72,1.839,106,1.671,182,2.154,189,3.093,269,1.594,282,3.198,289,2.56,322,1.363,323,3.509,336,3.091,347,3.691,356,1.792,472,3.353,688,3.751,1129,4.076,1236,4.041,1237,4.511,1238,5.171,1239,6.515,1240,5.171]],["title/controllers/TypeGreenScoreController.html",[9,1.226,1241,2.573]],["body/controllers/TypeGreenScoreController.html",[0,0.039,3,0.085,4,0.085,5,0.075,8,0.909,9,1.825,12,1.389,17,0.25,22,0.825,26,1.494,27,0.013,28,1.034,29,1.308,32,0.474,36,0.411,39,0.085,43,2.014,45,0.005,46,0.007,47,0.005,60,1.007,67,1.256,68,2.23,72,1.706,79,1.65,87,1.888,88,2.479,89,1.6,90,1.678,91,0.409,94,1.678,95,1.404,97,1.464,98,1.678,99,1.349,100,1.678,104,1.678,106,1.007,108,2.103,109,1.544,115,1.953,117,1.678,118,3.256,162,1.404,163,1.973,182,2.4,185,3.312,187,2.338,189,1.248,212,1.916,322,1.412,359,1.6,372,3.424,379,1.765,393,3.1,396,1.765,409,3.424,410,2.607,415,2.364,422,1.862,564,2.26,570,1.862,695,4.276,762,3.105,1146,2.26,1212,2.26,1223,2.455,1224,3.627,1236,3.653,1241,2.915,1242,4.014,1243,3.627,1244,5.272,1245,4.014,1246,2.717,1247,4.085,1248,2.717,1249,4.774,1250,2.455,1251,2.717,1252,2.717,1253,2.717,1254,2.717,1255,2.717,1256,2.717,1257,2.717,1258,2.26,1259,2.717,1260,2.717,1261,2.717,1262,2.717,1263,2.717,1264,2.717,1265,2.717,1266,2.717]],["title/controllers/TypeGreenScoreController-1.html",[9,1.021,340,2.454,1241,2.143]],["body/controllers/TypeGreenScoreController-1.html",[0,0.039,3,0.085,4,0.085,5,0.075,8,0.908,9,1.945,12,1.387,17,0.249,22,0.824,26,1.493,27,0.013,28,1.033,29,1.307,32,0.474,36,0.411,39,0.085,43,2.012,45,0.005,46,0.007,47,0.005,60,1.005,67,1.255,68,2.229,72,1.705,79,1.649,87,1.886,88,2.475,89,1.597,90,1.675,91,0.408,94,1.675,95,1.402,97,1.462,98,1.675,99,1.346,100,1.675,104,1.675,106,1.005,108,2.1,109,1.543,115,1.952,117,1.675,118,3.253,162,1.402,163,1.97,182,2.399,185,3.31,187,2.337,189,1.246,212,1.913,322,1.411,359,1.597,372,3.421,379,1.761,393,3.097,396,1.761,409,3.421,410,2.603,415,2.361,422,1.859,564,2.256,570,1.859,695,4.273,762,3.102,1146,2.256,1212,2.256,1223,2.451,1224,3.622,1236,3.65,1241,2.911,1242,4.009,1243,3.622,1244,5.268,1245,4.009,1246,2.712,1247,4.082,1248,2.712,1249,4.768,1250,2.451,1251,2.712,1252,2.712,1253,2.712,1254,2.712,1255,2.712,1256,2.712,1257,2.712,1258,2.256,1259,2.712,1260,2.712,1261,2.712,1262,2.712,1263,2.712,1264,2.712,1265,2.712,1266,2.712]],["title/classes/TypeGreenScoreDto.html",[0,0.051,1247,2.573]],["body/classes/TypeGreenScoreDto.html",[0,0.085,2,1.946,3,0.148,4,0.148,5,0.13,15,3.154,17,0.435,18,1.772,22,0.74,27,0.013,32,0.368,33,1.552,36,0.409,39,0.148,45,0.008,46,0.01,47,0.008,72,1.53,106,1.752,182,2.2,189,2.92,269,1.474,468,4.011,469,2.92,472,3.154,676,4.728,1236,3.801,1247,4.251,1267,4.728,1268,5.286,1269,5.42,1270,5.42,1271,5.42]],["title/interfaces/TypeGreenScoreInterface.html",[35,1.511,1268,2.946]],["body/interfaces/TypeGreenScoreInterface.html",[3,0.163,4,0.163,5,0.143,17,0.478,18,1.877,27,0.012,32,0.404,33,1.756,35,2.217,39,0.163,45,0.009,46,0.011,47,0.009,48,3.209,182,2.145,189,3.151,269,1.205,1236,3.375,1268,5.155,1272,5.197,1273,5.197]],["title/modules/TypeGreenScoreModule.html",[122,1.037,143,2.427]],["body/modules/TypeGreenScoreModule.html",[0,0.062,3,0.134,4,0.134,5,0.117,27,0.013,32,0.427,36,0.426,39,0.134,45,0.007,46,0.01,47,0.007,60,2.035,91,0.643,122,1.777,124,1.891,125,1.891,126,2.04,127,2.04,128,1.891,129,2.896,130,2.896,143,4.724,148,2.621,149,2.04,150,2.04,152,2.304,160,2.517,161,1.698,182,2.216,185,2.517,189,1.964,569,4.275,570,2.929,571,4.275,762,4.24,1236,2.776,1241,4.407,1258,3.555,1274,4.275,1275,4.275,1276,4.275,1277,4.9]],["title/injectables/TypeGreenScoreService.html",[213,0.62,762,2.086]],["body/injectables/TypeGreenScoreService.html",[0,0.042,3,0.09,4,0.09,5,0.079,12,0.998,17,0.265,20,1.855,22,0.94,26,1.803,27,0.013,28,1.248,29,1.579,32,0.384,36,0.371,39,0.09,43,2.063,45,0.005,46,0.007,47,0.005,67,1.312,68,2.313,79,1.803,87,1.942,91,0.434,109,1.688,115,2.227,161,1.145,182,2.392,185,3.653,187,1.145,189,1.925,213,0.734,214,1.068,268,1.49,269,0.668,271,1.276,289,1.186,322,1.442,356,1.145,488,3.349,502,1.872,504,1.872,505,1.78,511,1.872,512,1.622,572,2.605,681,1.975,683,4.108,695,3.044,762,2.468,1236,4.029,1243,3.788,1247,3.044,1250,3.788,1258,2.397,1278,4.805,1279,5.423,1280,4.805,1281,4.192,1282,3.304,1283,3.304,1284,5.662,1285,4.805,1286,3.304,1287,3.304,1288,3.304,1289,4.805,1290,3.304,1291,4.805,1292,4.805,1293,3.304,1294,3.304,1295,3.304,1296,3.304,1297,3.304,1298,3.304,1299,2.883,1300,3.304,1301,3.304,1302,3.304]],["title/interfaces/TypeInterface.html",[35,1.511,1232,2.946]],["body/interfaces/TypeInterface.html",[3,0.165,4,0.165,5,0.145,17,0.484,18,1.893,27,0.012,32,0.547,33,1.767,35,2.249,39,0.165,45,0.009,46,0.011,47,0.009,48,3.255,269,1.222,1232,5.199,1303,5.271]],["title/modules/TypeModule.html",[122,1.037,144,2.427]],["body/modules/TypeModule.html",[0,0.064,3,0.137,4,0.137,5,0.12,27,0.013,32,0.34,36,0.429,39,0.137,45,0.008,46,0.01,47,0.008,60,2.066,91,0.658,122,1.797,124,1.937,125,1.937,126,2.089,127,2.089,128,1.937,129,2.928,130,2.928,144,4.75,148,2.661,149,2.089,150,2.089,152,2.358,160,2.577,161,1.738,938,4.692,1204,5.102,1219,4.376,1220,3.954,1304,4.376,1305,4.376,1306,4.376,1307,5.017,1308,5.017,1309,5.017]],["title/injectables/TypeService.html",[213,0.62,938,2.3]],["body/injectables/TypeService.html",[0,0.04,3,0.087,4,0.087,5,0.076,12,0.956,17,0.254,20,1.798,22,0.958,26,1.773,27,0.013,28,1.227,29,1.552,32,0.441,33,1.078,36,0.381,39,0.087,43,2.028,45,0.005,46,0.007,47,0.005,67,1.272,68,2.339,79,1.854,87,2.121,91,0.416,109,1.793,115,2.194,161,1.098,213,0.712,214,1.024,268,1.428,269,0.641,271,2.133,289,1.137,322,1.538,356,1.098,470,3.38,488,3.282,502,1.794,504,1.794,505,1.706,511,1.794,512,1.555,537,2.007,541,2.497,683,4.71,938,2.639,958,2.298,1107,4.064,1206,4.064,1208,4.064,1209,4.064,1210,4.064,1211,3.146,1216,4.064,1220,2.497,1221,2.763,1279,5.315,1281,5.315,1299,2.763,1310,2.763,1311,4.659,1312,3.168,1313,3.168,1314,5.526,1315,3.168,1316,4.659,1317,3.168,1318,3.168,1319,3.168,1320,3.168,1321,4.659,1322,3.168,1323,4.659,1324,3.168,1325,3.168,1326,3.168,1327,3.168,1328,3.168,1329,3.168,1330,3.168,1331,4.659,1332,2.763,1333,3.168,1334,3.168]],["title/classes/User.html",[0,0.051,164,1.758]],["body/classes/User.html",[0,0.053,2,1.501,3,0.114,4,0.114,5,0.1,17,0.335,18,1.498,22,1.014,27,0.013,28,0.79,32,0.505,33,1.789,36,0.318,39,0.114,45,0.006,46,0.009,47,0.006,72,2.099,162,3.487,163,2.65,164,2.455,204,3.466,212,2.361,265,3.645,282,2.784,289,2.309,294,5.004,309,2.5,322,1.186,323,3.466,325,4.47,336,4.123,337,5.004,347,4.084,356,1.449,576,3.297,577,4.947,578,5.612,579,4.947,580,3.648,586,4.47,587,3.297,588,3.297,1335,3.648,1336,5.071,1337,5.071,1338,4.182,1339,4.182,1340,4.182,1341,5.67,1342,4.182,1343,5.67,1344,4.182,1345,5.67,1346,4.182,1347,4.182]],["title/modules/UserAppModule.html",[122,1.037,145,2.742]],["body/modules/UserAppModule.html",[0,0.07,3,0.151,4,0.151,5,0.132,27,0.013,36,0.381,39,0.151,45,0.008,46,0.01,47,0.008,91,0.725,122,1.878,124,2.134,125,2.134,126,2.301,127,2.301,128,2.134,129,3.06,130,2.301,145,5.41,148,2.827,149,2.301,150,2.301,154,4.822,164,2.393,178,4.01,1348,4.822,1349,4.822,1350,5.41,1351,4.357,1352,5.527]],["title/injectables/UserAppService.html",[213,0.62,1350,2.742]],["body/injectables/UserAppService.html",[0,0.078,3,0.169,4,0.169,5,0.148,27,0.012,36,0.347,39,0.169,45,0.009,46,0.011,47,0.009,91,0.811,178,4.48,213,1.109,214,1.996,1350,4.902,1351,4.868,1353,5.387]],["title/controllers/UserController.html",[9,1.226,1354,2.946]],["body/controllers/UserController.html",[0,0.05,3,0.107,4,0.107,5,0.094,8,1.142,9,1.876,12,1.876,17,0.313,22,0.739,26,1.479,27,0.013,28,1.023,29,1.295,32,0.368,36,0.409,39,0.107,43,1.94,45,0.006,46,0.008,47,0.006,60,1.264,67,1.479,68,2.126,72,1.529,75,4.008,79,1.479,85,3.928,88,2.917,89,2.009,90,2.107,91,0.513,97,1.838,98,2.107,99,1.693,100,2.107,102,3.237,104,2.107,106,1.264,108,2.641,109,1.384,118,2.917,164,3.234,212,2.255,253,3.519,322,1.3,359,2.009,372,3.989,374,3.657,379,3.519,393,3.068,396,2.215,409,3.068,410,3.068,415,2.782,422,2.338,1212,2.837,1354,3.928,1355,3.411,1356,4.724,1357,5.415,1358,3.411,1359,5.14,1360,3.91,1361,3.91,1362,3.91,1363,3.91,1364,6.212,1365,3.411,1366,3.91,1367,3.91,1368,3.91,1369,3.91,1370,3.91,1371,3.91]],["title/classes/UserDto.html",[0,0.051,1359,2.742]],["body/classes/UserDto.html",[0,0.07,2,1.437,3,0.109,4,0.109,5,0.096,8,2.073,15,2.587,17,0.321,18,1.454,22,0.969,27,0.013,28,1.28,32,0.482,33,1.818,36,0.38,39,0.109,45,0.006,46,0.008,47,0.006,72,2.004,106,1.294,162,3.201,164,3.177,204,3.825,265,3.563,269,1.649,434,4.795,457,4.338,464,3.156,468,4.049,469,2.157,472,3.449,680,4.801,1336,4.958,1337,4.958,1359,3.717,1372,3.492,1373,4.563,1374,5.504,1375,6.289,1376,4.003,1377,5.504,1378,4.003,1379,4.801,1380,4.003,1381,4.003,1382,4.003,1383,5.504,1384,4.003,1385,4.003,1386,4.003,1387,4.801,1388,4.003,1389,4.003]],["title/interfaces/UserInterface.html",[35,1.511,1373,2.946]],["body/interfaces/UserInterface.html",[3,0.145,4,0.145,5,0.127,17,0.424,18,1.744,27,0.013,32,0.527,33,1.95,35,1.966,39,0.145,45,0.008,46,0.01,47,0.008,48,2.847,162,3.403,204,4.065,265,4.275,269,1.571,1336,5.949,1337,5.949,1373,4.791,1390,4.61]],["title/modules/UserModule.html",[122,1.037,146,2.573]],["body/modules/UserModule.html",[0,0.061,3,0.131,4,0.131,5,0.115,27,0.013,36,0.434,39,0.131,45,0.007,46,0.009,47,0.007,60,2.008,91,0.63,122,1.76,124,1.854,125,1.854,126,1.999,127,1.999,128,1.854,129,2.868,130,2.868,140,4.62,146,5.104,148,2.587,149,1.999,150,1.999,152,2.921,157,3.785,160,2.467,161,1.664,164,2.079,253,4.663,1354,4.998,1365,4.189,1391,4.189,1392,4.802,1393,4.189,1394,4.189,1395,4.802,1396,4.802,1397,4.189,1398,4.802]],["title/injectables/UserService.html",[213,0.62,253,2.3]],["body/injectables/UserService.html",[0,0.042,3,0.091,4,0.091,5,0.08,12,1.455,17,0.266,20,1.86,22,0.903,26,1.806,27,0.013,28,1.25,29,1.582,32,0.423,33,1.596,36,0.4,39,0.091,43,2.155,45,0.005,46,0.007,47,0.005,67,1.316,68,2.258,79,1.701,87,1.505,91,0.435,109,1.591,115,2.013,161,1.149,162,2.173,163,2.102,164,2.087,204,2.596,213,0.736,214,1.072,253,2.73,265,1.879,267,3.798,268,2.173,269,0.975,271,1.86,274,2.894,276,4.95,303,2.615,322,1.187,356,1.149,488,3.355,502,2.73,504,1.879,505,1.787,511,2.73,512,2.366,627,2.615,642,4.361,654,2.894,1356,4.204,1358,4.204,1359,3.832,1379,5.433,1397,2.894,1399,2.894,1400,4.819,1401,4.819,1402,4.819,1403,3.317,1404,3.317,1405,5.675,1406,3.317,1407,4.819,1408,3.317,1409,4.819,1410,3.317,1411,4.819,1412,3.317,1413,3.317,1414,4.819,1415,3.317,1416,3.317,1417,3.317,1418,3.317,1419,3.317,1420,3.317,1421,4.819,1422,3.317]],["title/coverage.html",[1423,4.848]],["body/coverage.html",[0,0.097,1,1.561,5,0.055,6,2.016,7,2.016,9,2.117,12,0.698,16,1.677,27,0.013,32,0.484,35,2.425,45,0.004,46,0.006,47,0.004,49,2.016,50,2.016,59,1.677,61,2.016,82,1.677,92,1.382,97,1.087,99,1.001,128,0.892,147,1.561,162,1.042,164,1.001,166,1.135,171,1.856,173,0.962,176,1.245,178,1.677,180,1.382,182,2.33,183,2.472,185,2.335,187,2.381,188,1.881,189,0.926,191,1.309,213,1.186,215,2.016,227,1.561,228,1.561,245,2.016,253,1.309,281,2.016,295,5.087,357,1.677,358,2.016,369,1.561,397,1.382,400,1.561,429,2.016,460,1.677,475,2.016,482,2.016,519,2.016,520,2.016,535,1.561,536,1.561,543,6.522,562,1.677,563,2.656,564,3.298,568,1.561,572,2.886,573,2.656,574,2.016,594,1.309,598,2.886,639,2.016,642,1.382,666,2.016,675,2.016,681,1.382,682,2.016,686,3.397,687,2.016,699,1.677,700,2.016,703,1.245,704,1.464,706,1.677,726,2.016,727,1.677,734,2.016,735,2.016,760,1.309,762,1.187,794,2.016,795,2.016,808,2.016,831,1.822,832,2.016,839,1.677,840,2.016,850,1.464,868,1.677,884,2.016,908,1.677,920,2.016,927,2.016,937,1.309,938,1.309,958,1.677,1004,2.016,1021,2.016,1025,1.822,1027,2.016,1051,2.016,1076,1.677,1077,2.016,1081,1.464,1091,2.016,1100,4.917,1124,2.016,1132,1.677,1133,2.016,1139,1.677,1162,2.016,1163,1.677,1169,2.016,1176,2.016,1190,1.822,1201,2.016,1204,1.677,1205,2.016,1211,1.561,1231,2.016,1232,1.677,1236,3.397,1237,2.016,1241,2.32,1247,1.464,1267,2.016,1268,1.677,1272,2.016,1273,2.016,1303,2.016,1310,2.016,1335,2.016,1350,1.561,1351,1.822,1353,2.016,1354,1.677,1355,2.016,1359,1.561,1372,2.016,1373,1.677,1390,2.016,1399,2.016,1423,2.016,1424,2.016,1425,2.311,1426,2.311,1427,5.637,1428,3.661,1429,2.311,1430,2.311,1431,2.311,1432,2.311,1433,2.311,1434,2.311,1435,2.311,1436,2.311,1437,2.311,1438,2.311,1439,2.016,1440,4.547,1441,6.282,1442,5.996,1443,6.873,1444,4.547,1445,5.996,1446,2.016,1447,1.822,1448,5.172,1449,3.661,1450,2.311,1451,2.311,1452,2.311,1453,2.311,1454,2.311,1455,2.311,1456,2.311,1457,5.172,1458,5.172,1459,3.661,1460,4.511,1461,2.311,1462,2.311]],["title/dependencies.html",[125,1.887,1463,3.383]],["body/dependencies.html",[0,0.079,13,3.051,27,0.013,45,0.007,46,0.01,47,0.007,91,0.632,95,2.171,106,1.557,125,1.859,161,1.669,195,3.796,233,3.796,237,3.796,267,3.796,356,1.669,469,2.594,529,3.796,534,4.201,653,5.438,797,3.796,1035,4.201,1464,6.899,1465,6.226,1466,4.816,1467,6.018,1468,4.816,1469,4.816,1470,4.816,1471,6.226,1472,4.816,1473,4.816,1474,4.816,1475,6.226,1476,4.816,1477,4.816,1478,4.816,1479,4.816,1480,4.816,1481,4.816,1482,4.816,1483,4.816,1484,4.816,1485,4.816,1486,4.201,1487,4.816,1488,4.201,1489,4.816,1490,4.816,1491,4.816,1492,4.816,1493,4.816,1494,4.816,1495,4.816,1496,4.816,1497,4.816,1498,4.816,1499,4.816,1500,4.201,1501,4.816,1502,4.816,1503,4.816]],["title/miscellaneous/enumerations.html",[1504,2.143,1505,4.264]],["body/miscellaneous/enumerations.html",[17,0.455,27,0.011,45,0.009,46,0.011,47,0.009,164,2.458,166,2.787,203,4.951,352,4.118,353,4.118,437,4.951,470,5.007,912,6.021,915,5.44,1233,4.951,1387,6.021,1504,3.596,1505,4.951,1506,5.676,1507,5.676,1508,5.676,1509,5.676,1510,5.676,1511,5.676,1512,5.676,1513,5.676,1514,5.676,1515,5.676,1516,5.676,1517,5.676,1518,5.676,1519,5.676,1520,5.676,1521,5.676,1522,5.676,1523,5.676,1524,5.676,1525,5.676,1526,5.676,1527,5.676,1528,5.676,1529,5.676]],["title/miscellaneous/functions.html",[1504,2.143,1530,4.264]],["body/miscellaneous/functions.html",[17,0.473,27,0.011,45,0.009,46,0.011,47,0.009,85,4.276,128,2.918,343,4.646,492,4.276,1446,5.142,1447,4.646,1467,5.142,1486,5.142,1488,5.142,1504,3.734,1530,5.142,1531,5.895,1532,5.895,1533,5.895,1534,5.895,1535,5.895,1536,5.895,1537,5.895,1538,5.895,1539,5.895,1540,5.895,1541,5.895,1542,5.895,1543,5.895,1544,5.895,1545,5.895,1546,5.895,1547,5.895]],["title/index.html",[17,0.271,1548,3.383,1549,3.383]],["body/index.html",[8,1.733,27,0.011,45,0.009,46,0.011,47,0.009,195,4.679,209,5.178,356,2.057,1424,5.178,1500,5.178,1550,7.582,1551,7.091,1552,5.936,1553,5.936,1554,5.936,1555,7.091,1556,5.936,1557,5.936,1558,5.936,1559,5.936,1560,5.936,1561,5.936,1562,5.936,1563,5.936,1564,5.936,1565,5.936,1566,5.936,1567,5.936,1568,5.936]],["title/modules.html",[124,2.145]],["body/modules.html",[27,0.01,45,0.008,46,0.01,47,0.008,123,3.751,124,1.996,134,3.492,135,3.276,136,3.492,137,3.091,138,3.091,139,3.091,140,3.091,141,3.492,142,3.091,143,3.091,144,3.091,145,3.492,146,3.276,1569,8.382,1570,8.382,1571,8.382,1572,8.382]],["title/overview.html",[1573,4.848]],["body/overview.html",[2,0.992,27,0.013,45,0.004,46,0.006,47,0.004,48,1.488,60,0.893,92,4.01,122,0.706,123,5.952,124,1.066,125,1.066,126,1.15,127,1.15,128,1.066,129,1.15,130,1.15,131,2.41,132,2.41,133,2.41,134,5.141,135,4.249,136,4.136,137,4.133,138,4.133,139,4.662,140,4.133,141,5.267,142,4.133,143,4.01,144,4.133,145,4.136,146,4.487,147,3.438,148,1.751,149,1.15,150,1.15,214,0.893,223,2.41,225,2.41,226,2.41,227,3.438,228,3.438,253,3.8,340,2.004,397,4.01,476,2.41,477,2.41,478,2.41,566,2.41,567,2.41,568,3.438,591,2.41,592,2.41,593,2.41,594,3.8,642,4.01,703,3.613,736,2.41,737,2.41,738,2.41,760,3.8,762,3.446,921,2.41,923,2.41,924,2.41,937,3.8,938,3.8,1025,2.178,1044,2.41,1045,2.41,1046,2.41,1081,3.226,1086,2.41,1088,2.41,1170,2.41,1171,2.41,1172,2.41,1274,2.41,1275,2.41,1276,2.41,1304,2.41,1305,2.41,1306,2.41,1348,2.41,1349,2.41,1350,3.438,1391,2.41,1393,2.41,1394,2.41,1573,2.41,1574,2.763,1575,2.763,1576,2.763,1577,2.763,1578,2.763]],["title/miscellaneous/variables.html",[1504,2.143,1579,4.264]],["body/miscellaneous/variables.html",[0,0.056,17,0.354,24,2.638,25,3.201,27,0.013,30,4.784,33,1.63,45,0.007,46,0.009,47,0.007,68,1.288,75,2.638,99,3.179,109,1.801,271,2.721,301,4.958,322,0.923,535,3.969,536,3.969,541,4.633,546,3.849,548,3.849,549,3.849,550,3.849,552,3.849,554,3.849,556,3.849,558,3.849,559,3.849,958,4.264,1190,4.633,1332,3.849,1439,3.849,1447,3.478,1460,3.849,1504,2.795,1579,3.849,1580,7.049,1581,4.412,1582,4.412,1583,4.412,1584,4.412,1585,4.412,1586,4.412,1587,4.412,1588,4.412,1589,4.412,1590,4.412,1591,4.412,1592,4.412,1593,4.412,1594,4.412,1595,5.878,1596,5.878,1597,4.412,1598,4.412,1599,4.412,1600,4.412]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":543,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1456,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":340,"title":{"controllers/TypeGreenScoreController-1.html":{}},"body":{"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"overview.html":{}}}],["1.0.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":303,"title":{},"body":{"classes/Company.html":{},"injectables/StatsService.html":{},"injectables/UserService.html":{}}}],["100",{"_index":295,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["11",{"_index":1575,"title":{},"body":{"overview.html":{}}}],["11/13",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1574,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1023,"title":{},"body":{"classes/Role.html":{}}}],["150",{"_index":813,"title":{},"body":{"classes/Poi.html":{}}}],["16777215",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1577,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1343,"title":{},"body":{"classes/User.html":{}}}],["2020",{"_index":302,"title":{},"body":{"classes/Company.html":{}}}],["21",{"_index":1576,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1130,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{}}}],["255",{"_index":1341,"title":{},"body":{"classes/User.html":{}}}],["28",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":825,"title":{},"body":{"classes/Poi.html":{}}}],["3306",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["3600s",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["38",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":307,"title":{},"body":{"classes/Company.html":{}}}],["5.0.0",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["5/13",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":337,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"classes/User.html":{}}}],["5ea565",{"_index":1126,"title":{},"body":{"classes/Tag.html":{}}}],["6",{"_index":827,"title":{},"body":{"classes/Poi.html":{}}}],["6.1.1",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1239,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["75",{"_index":313,"title":{},"body":{"classes/Company.html":{}}}],["8",{"_index":1578,"title":{},"body":{"overview.html":{}}}],["84",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken(token",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokeninterfaces",{"_index":16,"title":{"interfaces/AccessTokenInterfaces.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["account",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["activity",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":374,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/PoiDto.html":{},"controllers/UserController.html":{}}}],["addcompany",{"_index":362,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["addcompany(@body",{"_index":412,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addcompany(companydto",{"_index":368,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["added",{"_index":375,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addgreenscore",{"_index":1278,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addgreenscore(typegreenscoredto",{"_index":1285,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addjointagpoi",{"_index":599,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjointagpoi(poitoadd",{"_index":608,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addmanypercenttypedcandnewtype(@body",{"_index":714,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addnewpercenttypegcandpoi(@body",{"_index":711,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addpercenttypegcandpoi",{"_index":742,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegcandpoi(percenttypegcandpoi",{"_index":749,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegreenscoreandpoiservice",{"_index":765,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpoi",{"_index":843,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["addpoi(@body",{"_index":875,"title":{},"body":{"controllers/PoiController.html":{}}}],["addpoi(poidto",{"_index":849,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["address",{"_index":283,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["addtag",{"_index":1134,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtag(@body",{"_index":1155,"title":{},"body":{"controllers/TagsController.html":{}}}],["addtag(tagdto",{"_index":1138,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtype",{"_index":1206,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtype(@body",{"_index":1225,"title":{},"body":{"controllers/TypeController.html":{}}}],["addtype(typedto",{"_index":1210,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtypegreenscore",{"_index":1242,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(@body",{"_index":1259,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(typegreenscoreandpoidto",{"_index":1246,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["adduser",{"_index":1356,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduser(@body",{"_index":1368,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(userdto",{"_index":1358,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["agence",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allows",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{}}}],["allpercent",{"_index":784,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.foreach((percent",{"_index":787,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.length",{"_index":785,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpoi",{"_index":994,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoi.map(async",{"_index":997,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoiwithtagsandtypespromise",{"_index":996,"title":{},"body":{"injectables/PoiService.html":{}}}],["api",{"_index":1551,"title":{},"body":{"index.html":{}}}],["apibasicauth",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apiunauthorizedresponse()@apiokresponse()@useguards(undefined)@useguards(roleguard)@get('profile",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["apibody",{"_index":403,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apicreatedresponse",{"_index":404,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiforbiddenresponse()@post()@usepipes(new",{"_index":851,"title":{},"body":{"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiunauthorizedresponse()@apibody({type",{"_index":370,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiforbiddenresponse",{"_index":870,"title":{},"body":{"controllers/PoiController.html":{}}}],["apigoneresponse",{"_index":871,"title":{},"body":{"controllers/PoiController.html":{}}}],["apinotfoundresponse",{"_index":405,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get('one/:id')@usepipes(new",{"_index":857,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('admin",{"_index":854,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@put(':id')@useguards(roleguard)@usepipes(new",{"_index":865,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":862,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/name",{"_index":860,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":377,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":386,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@put(':id')@usepipes(new",{"_index":390,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":383,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(undefined)@post('auth/login",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":472,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@column",{"_index":690,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@column({length",{"_index":1129,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty()@isemail",{"_index":678,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnumber",{"_index":728,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["apiproperty()@isstring",{"_index":676,"title":{},"body":{"classes/LoginDto.html":{},"classes/TypeGreenScoreDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":694,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":688,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty({description",{"_index":434,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":473,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isnumber()@isoptional",{"_index":891,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isoptional",{"_index":444,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["apipropertyoptional({description",{"_index":452,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional({type",{"_index":900,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apis",{"_index":1547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apitags",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["apitags('company",{"_index":406,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apitags('login",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('poi",{"_index":872,"title":{},"body":{"controllers/PoiController.html":{}}}],["apitags('stats",{"_index":1083,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('tags",{"_index":1153,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags('type",{"_index":1223,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["apitags('user",{"_index":1366,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["app",{"_index":1536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":1352,"title":{},"body":{"modules/UserAppModule.html":{}}}],["app.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{}}}],["app.service.ts",{"_index":1353,"title":{},"body":{"injectables/UserAppService.html":{},"coverage.html":{}}}],["app/user",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["appcontroller",{"_index":59,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":123,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":1540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":147,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":798,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["around",{"_index":330,"title":{},"body":{"classes/Company.html":{}}}],["array",{"_index":901,"title":{},"body":{"injectables/PoiDto.html":{}}}],["array.isarray(newvalue.typegreenscore",{"_index":1011,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["asc",{"_index":518,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":52,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/PoiDto.html":{}}}],["auth.service",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/access",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/auth.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["authentication",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["authmodule",{"_index":134,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorize",{"_index":57,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["authservice",{"_index":92,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autre",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["await",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["back",{"_index":1550,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1006,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["badrequestexception('idgreen",{"_index":1019,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["base",{"_index":1567,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1415,"title":{},"body":{"injectables/UserService.html":{}}}],["begin",{"_index":306,"title":{},"body":{"classes/Company.html":{}}}],["begindeal",{"_index":284,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["bio",{"_index":1164,"title":{},"body":{"classes/TagsDto.html":{}}}],["body",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":1034,"title":{},"body":{"guards/RoleGuard.html":{}}}],["bootstrap",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1572,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1569,"title":{},"body":{"modules.html":{}}}],["call",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["callhandler",{"_index":524,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["canactivate",{"_index":1028,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":1032,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cascade",{"_index":578,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":580,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/User.html":{}}}],["catch",{"_index":511,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["cf",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{}}}],["check",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["city",{"_index":285,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["client",{"_index":316,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["client'})@isnumberstring",{"_index":455,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["client'})@isstring",{"_index":435,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["cluster_appmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":476,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_exports",{"_index":477,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":478,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule",{"_index":566,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule_providers",{"_index":567,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule",{"_index":591,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_exports",{"_index":592,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_providers",{"_index":593,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule",{"_index":736,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_exports",{"_index":737,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_providers",{"_index":738,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_poimodule",{"_index":921,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_exports",{"_index":923,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_imports",{"_index":922,"title":{},"body":{"modules/PoiModule.html":{}}}],["cluster_poimodule_providers",{"_index":924,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1044,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1045,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1046,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":1086,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_imports",{"_index":1087,"title":{},"body":{"modules/StatsModule.html":{}}}],["cluster_statsmodule_providers",{"_index":1088,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1170,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1171,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1172,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule",{"_index":1274,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_exports",{"_index":1275,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_providers",{"_index":1276,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typemodule",{"_index":1304,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_exports",{"_index":1305,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_providers",{"_index":1306,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_userappmodule",{"_index":1348,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_userappmodule_providers",{"_index":1349,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1391,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1393,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1392,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1394,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["clément",{"_index":1557,"title":{},"body":{"index.html":{}}}],["co",{"_index":352,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":350,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["colortag",{"_index":1125,"title":{},"body":{"classes/Tag.html":{}}}],["column",{"_index":347,"title":{},"body":{"classes/Company.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["column({default",{"_index":339,"title":{},"body":{"classes/Company.html":{},"classes/Tag.html":{}}}],["column({length",{"_index":294,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":819,"title":{},"body":{"classes/Poi.html":{}}}],["column({type",{"_index":299,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{}}}],["column({unique",{"_index":335,"title":{},"body":{"classes/Company.html":{}}}],["company",{"_index":166,"title":{"classes/Company.html":{}},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/StatsService.html":{},"classes/TypeDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["company'})@isstring",{"_index":448,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["company.controller",{"_index":480,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.service",{"_index":398,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{}}}],["company/company.service",{"_index":1097,"title":{},"body":{"injectables/StatsService.html":{}}}],["company/companyentity",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["company/enum/type.enum",{"_index":1221,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["companycontroller",{"_index":357,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companydata",{"_index":507,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydata.id",{"_index":508,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydto",{"_index":369,"title":{"injectables/CompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyentity",{"_index":399,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["companyinterface",{"_index":460,"title":{"interfaces/CompanyInterface.html":{}},"body":{"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["companymodule",{"_index":135,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["companyrepository",{"_index":490,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companys",{"_index":361,"title":{},"body":{"controllers/CompanyController.html":{}}}],["companyservice",{"_index":397,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["companytype",{"_index":1112,"title":{},"body":{"injectables/StatsService.html":{}}}],["companytypepromise",{"_index":1110,"title":{},"body":{"injectables/StatsService.html":{}}}],["compodoc",{"_index":1565,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["compte",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connect",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["connection",{"_index":936,"title":{},"body":{"injectables/PoiService.html":{}}}],["console",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["console.log(rangemax",{"_index":789,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["const",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["constructor(accesstoken",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(authservice",{"_index":668,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companyrepository",{"_index":487,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(jointagpoirepository",{"_index":605,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["constructor(jointagpoiservice",{"_index":1093,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(percenttypegreenscoreandpoirepository",{"_index":746,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["constructor(poi",{"_index":833,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["constructor(poirepository",{"_index":935,"title":{},"body":{"injectables/PoiService.html":{}}}],["constructor(private",{"_index":408,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["constructor(readonly",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":1029,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(rolerolerepository",{"_index":1055,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(tagrepository",{"_index":1179,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(typegreenscorerepository",{"_index":1282,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["constructor(typerepository",{"_index":1312,"title":{},"body":{"injectables/TypeService.html":{}}}],["constructor(userrepository",{"_index":1403,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["contains",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":526,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":1037,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1038,"title":{},"body":{"guards/RoleGuard.html":{}}}],["contract",{"_index":305,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["controller",{"_index":9,"title":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('company",{"_index":407,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('green",{"_index":565,"title":{},"body":{"controllers/GreenScoreController.html":{}}}],["controller('percent",{"_index":709,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["controller('poi",{"_index":873,"title":{},"body":{"controllers/PoiController.html":{}}}],["controller('stats",{"_index":1084,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('tags",{"_index":1154,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller('type",{"_index":1224,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["controller('user",{"_index":1367,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["cornet",{"_index":1561,"title":{},"body":{"index.html":{}}}],["correct",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosmetic",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countcompany",{"_index":483,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype",{"_index":484,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype(type",{"_index":494,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countpoi",{"_index":928,"title":{},"body":{"injectables/PoiService.html":{}}}],["countranggreenscore",{"_index":743,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["countranggreenscore(rangemax",{"_index":752,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["counttags",{"_index":600,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttags(tag",{"_index":612,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttype",{"_index":929,"title":{},"body":{"injectables/PoiService.html":{}}}],["counttype(type",{"_index":943,"title":{},"body":{"injectables/PoiService.html":{}}}],["coverage",{"_index":1423,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"classes/Company.html":{}}}],["createdate",{"_index":286,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{}}}],["createdatecolumn",{"_index":311,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{}}}],["d",{"_index":561,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d+|infinity)$/.test(value",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.domainmail",{"_index":542,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.ispoi",{"_index":540,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags",{"_index":544,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags.map((tag",{"_index":545,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/PoiDto.html":{}}}],["data.map((d",{"_index":539,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["database",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/PoiController.html":{}}}],["datapercentandtypegc",{"_index":715,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["date",{"_index":300,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["date'})@isstring",{"_index":438,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["datecreate",{"_index":809,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiService.html":{}}}],["db",{"_index":298,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["de",{"_index":1555,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/role.decorator",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"classes/Role.html":{},"controllers/StatsController.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{}}}],["default",{"_index":301,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Poi.html":{},"classes/Tag.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":51,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":430,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["delete",{"_index":379,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":422,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id')@useguards(roleguard)@roles('admin')@usepipes(new",{"_index":1362,"title":{},"body":{"controllers/UserController.html":{}}}],["deletecompany",{"_index":363,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletecompany(@param('id",{"_index":423,"title":{},"body":{"controllers/CompanyController.html":{}}}],["deletecompany(idcompany",{"_index":376,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletepercentgcandpoi(@param('id",{"_index":724,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["deletepercenttypegreenscore(idpercentgcandpoi",{"_index":780,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["deletetag",{"_index":1135,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetag(@param('id",{"_index":1157,"title":{},"body":{"controllers/TagsController.html":{}}}],["deletetag(idtag",{"_index":1143,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetype",{"_index":1311,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetype(idtype",{"_index":1316,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetypegreenscore",{"_index":1243,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deletetypegreenscore(@param('id",{"_index":1265,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["deletetypegreenscore(idtypegreenscore",{"_index":1250,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deleteuer",{"_index":1357,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(@param('id",{"_index":1370,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(iduser",{"_index":1361,"title":{},"body":{"controllers/UserController.html":{}}}],["deletuser",{"_index":1371,"title":{},"body":{"controllers/UserController.html":{}}}],["deltetype",{"_index":1207,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(@param('id",{"_index":1229,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(idtype",{"_index":1214,"title":{},"body":{"controllers/TypeController.html":{}}}],["demo",{"_index":216,"title":{},"body":{"injectables/AppService.html":{}}}],["dependencies",{"_index":125,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/RoleService.html":{},"classes/TagsDto.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["dev",{"_index":1559,"title":{},"body":{"index.html":{}}}],["different",{"_index":1533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doc",{"_index":702,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["documentation",{"_index":1424,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":315,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["domainmail",{"_index":287,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["donnée",{"_index":1568,"title":{},"body":{"index.html":{}}}],["drink",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["du",{"_index":1553,"title":{},"body":{"index.html":{}}}],["ecole",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["email",{"_index":1379,"title":{},"body":{"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["employees",{"_index":317,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["en",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":321,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["enddeal",{"_index":288,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["entities",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":282,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["entitytypeinterceptor",{"_index":400,"title":{"injectables/EntityTypeInterceptor.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["enum",{"_index":457,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["enum/price.enum",{"_index":913,"title":{},"body":{"injectables/PoiDto.html":{}}}],["enum/type.enum",{"_index":471,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["enum/typepoienum",{"_index":916,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{}}}],["enumeration",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumeration[n",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1505,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["etc",{"_index":355,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["etc...)'})@isstring",{"_index":1166,"title":{},"body":{"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["ex",{"_index":318,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["exadecimalcode",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example.com",{"_index":319,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["example.com)'})@isoptional()@isstring",{"_index":441,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["exatorgbaobject",{"_index":535,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exatorgbaobject(tag.colortag",{"_index":560,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"injectables/TagsService.html":{}}}],["exception",{"_index":500,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["executioncontext",{"_index":523,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["exist",{"_index":672,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["expect",{"_index":346,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["expect'})@isoptional()@isnumber",{"_index":453,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["expiresin",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1467,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":655,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":651,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":659,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":698,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["false})@joincolumn({name",{"_index":692,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["fashion",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filterint",{"_index":536,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterint(elem",{"_index":550,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[0].trim",{"_index":552,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[1].trim",{"_index":554,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[2].trim",{"_index":556,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[3].replace",{"_index":558,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["filterint(idtags",{"_index":1009,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.idtype",{"_index":1014,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.percent",{"_index":1016,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(value.idpoi",{"_index":803,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.idtypegreenscore",{"_index":805,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.percent",{"_index":807,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["findbypoi(idpoi",{"_index":775,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["first",{"_index":1374,"title":{},"body":{"classes/UserDto.html":{}}}],["firstname",{"_index":1336,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["food",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formattopercenttgcandpoi",{"_index":930,"title":{},"body":{"injectables/PoiService.html":{}}}],["formattopercenttgcandpoi(poi",{"_index":945,"title":{},"body":{"injectables/PoiService.html":{}}}],["forwardref",{"_index":739,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["found",{"_index":502,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1530,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generaterandexadecimalcolor",{"_index":1190,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/one/:id",{"_index":1261,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["get('one/:id",{"_index":414,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["get('order/date",{"_index":427,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["get('order/name",{"_index":881,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('percent/:id",{"_index":721,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["get('profile",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('admin",{"_index":381,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getallcompany",{"_index":364,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["getallcompanytag",{"_index":601,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallcompanytag(poitofind",{"_index":614,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallpercenttypeandpoi",{"_index":716,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getallpercenttypegreenscoreandpoi",{"_index":773,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getallpoi",{"_index":844,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["getallpoiandtag",{"_index":602,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getalltag",{"_index":1136,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getalltype",{"_index":1279,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["getalltypegreenscore",{"_index":1244,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getbyids",{"_index":1280,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyids(idtypes",{"_index":1289,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyidtypgcandpoi",{"_index":744,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getbyidtypgcandpoi(poi",{"_index":756,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getcompanyandtags",{"_index":845,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(@param('id",{"_index":877,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(idpoi",{"_index":856,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyorderbydate",{"_index":365,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getcount",{"_index":793,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getenumkey",{"_index":958,"title":{},"body":{"injectables/PoiService.html":{},"injectables/TypeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenumkey(typeenum",{"_index":1330,"title":{},"body":{"injectables/TypeService.html":{}}}],["getenumkey(typepoienum",{"_index":1003,"title":{},"body":{"injectables/PoiService.html":{}}}],["getgreenscore",{"_index":1092,"title":{},"body":{"injectables/StatsService.html":{}}}],["getgreenscorepassmark",{"_index":745,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getgreenscorepassmark(poi",{"_index":758,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["gethello",{"_index":219,"title":{},"body":{"injectables/AppService.html":{}}}],["getinfrole",{"_index":1052,"title":{},"body":{"injectables/RoleService.html":{}}}],["getinfrole(idrole",{"_index":1058,"title":{},"body":{"injectables/RoleService.html":{}}}],["getone",{"_index":485,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getone(idcompany",{"_index":498,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getonecompany",{"_index":366,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(@param('id",{"_index":416,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(id",{"_index":385,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getoneorfailbyrole",{"_index":1053,"title":{},"body":{"injectables/RoleService.html":{}}}],["getoneorfailbyrole(roletype",{"_index":1061,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonepercenttypeandpoi(@param('id",{"_index":718,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getonepercenttypegreenscoreandpoi(idpercent",{"_index":777,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getonetag",{"_index":1137,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetag(@param('id",{"_index":1160,"title":{},"body":{"controllers/TagsController.html":{}}}],["getonetag(idtag",{"_index":1148,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetype",{"_index":1208,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetype(@param('id",{"_index":1227,"title":{},"body":{"controllers/TypeController.html":{}}}],["getonetype(idtype",{"_index":1216,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetypegreenscore",{"_index":1245,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(@param('id",{"_index":1262,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(idtypegreenscore",{"_index":1255,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonlyrole",{"_index":1054,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonlyrole(roles",{"_index":1064,"title":{},"body":{"injectables/RoleService.html":{}}}],["getpercentofpoi(@param('id",{"_index":722,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getpoi",{"_index":931,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoi(idpoi",{"_index":949,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags",{"_index":932,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags(idpoi",{"_index":951,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoibyname",{"_index":846,"title":{},"body":{"controllers/PoiController.html":{}}}],["getpoiorderbydate",{"_index":847,"title":{},"body":{"controllers/PoiController.html":{}}}],["getprofile",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["getrawmany",{"_index":637,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/RoleService.html":{}}}],["getschemapath",{"_index":914,"title":{},"body":{"injectables/PoiDto.html":{}}}],["getstat",{"_index":1079,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["gettags",{"_index":1177,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettags(idstags",{"_index":1186,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagscompany",{"_index":603,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagscompany(poitofind",{"_index":618,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagsname",{"_index":1178,"title":{},"body":{"injectables/TagsService.html":{}}}],["getting",{"_index":1548,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":1281,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["gettype(idtype",{"_index":1292,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["gettypepoi",{"_index":933,"title":{},"body":{"injectables/PoiService.html":{}}}],["gettypepoipromise",{"_index":1117,"title":{},"body":{"injectables/StatsService.html":{}}}],["gettypes",{"_index":1209,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["gettypes(idstypes",{"_index":1321,"title":{},"body":{"injectables/TypeService.html":{}}}],["getuser",{"_index":1400,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1407,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail",{"_index":1401,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail(email",{"_index":1409,"title":{},"body":{"injectables/UserService.html":{}}}],["getvaluerba",{"_index":548,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["grand",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["green",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["greenscore",{"_index":810,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/StatsService.html":{}}}],["greenscorecontroller",{"_index":562,"title":{"controllers/GreenScoreController.html":{}},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"coverage.html":{}}}],["greenscoremodule",{"_index":136,"title":{"modules/GreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["greenscoreservice",{"_index":568,"title":{"injectables/GreenScoreService.html":{}},"body":{"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":1025,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/role.guard",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["guards",{"_index":1026,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guess",{"_index":447,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["guillaume",{"_index":1560,"title":{},"body":{"index.html":{}}}],["haller",{"_index":1558,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":1402,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":1411,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":1040,"title":{},"body":{"guards/RoleGuard.html":{}}}],["header",{"_index":640,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["headers",{"_index":1544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hello",{"_index":221,"title":{},"body":{"injectables/AppService.html":{}}}],["helloo",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["helmet",{"_index":1488,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["helps",{"_index":1538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":328,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["hex",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["hexatorgba",{"_index":546,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hexatorgba.split('(')[1].split(',').filter((elem",{"_index":549,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["hextorgba",{"_index":532,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["hextorgba(exadecimalcode",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hextorgba(tag.colortag",{"_index":547,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["high",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":1543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/techniques/authentication",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":289,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{}}}],["idcompany",{"_index":380,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["identifier",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["idpercent",{"_index":719,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["idpoi",{"_index":635,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["idrole",{"_index":1060,"title":{},"body":{"injectables/RoleService.html":{}}}],["idstags",{"_index":1188,"title":{},"body":{"injectables/TagsService.html":{}}}],["idstypes",{"_index":1323,"title":{},"body":{"injectables/TypeService.html":{}}}],["idsup",{"_index":1073,"title":{},"body":{"injectables/RoleService.html":{}}}],["idtag",{"_index":633,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["idtype",{"_index":683,"title":{},"body":{"classes/PercentAndIdTag.html":{},"controllers/TypeController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["idtypegreenscore",{"_index":695,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["idtypes",{"_index":1291,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["iduser",{"_index":1364,"title":{},"body":{"controllers/UserController.html":{}}}],["ignoreexpiration",{"_index":660,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imateapotexception",{"_index":673,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"injectables/CompanyDto.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["incubateur",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["informations",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["infra/server",{"_index":1562,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":213,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":214,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":505,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["injectrepository(company",{"_index":506,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(jointagpoientity",{"_index":623,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["injectrepository(percenttypegreenscoreandpoi",{"_index":763,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["injectrepository(poi",{"_index":959,"title":{},"body":{"injectables/PoiService.html":{}}}],["injectrepository(role",{"_index":1066,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(tag",{"_index":1191,"title":{},"body":{"injectables/TagsService.html":{}}}],["injectrepository(type",{"_index":1324,"title":{},"body":{"injectables/TypeService.html":{}}}],["injectrepository(typegreenscore",{"_index":1295,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["injectrepository(user",{"_index":1413,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect('tag",{"_index":632,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["inserttoobject",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.a",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.b",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.g",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.r",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":521,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["intercept(context",{"_index":522,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["interceptor/entity",{"_index":401,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["interest",{"_index":842,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["interface",{"_index":35,"title":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/company.interface",{"_index":461,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["interface/type.interface",{"_index":1235,"title":{},"body":{"classes/TypeDto.html":{}}}],["interfaces",{"_index":48,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":37,"title":{},"body":{"classes/AccessToken.html":{}}}],["interfaces/percent",{"_index":732,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["interfaces/poi.interface",{"_index":909,"title":{},"body":{"injectables/PoiDto.html":{}}}],["interfaces/tags.interface",{"_index":1168,"title":{},"body":{"classes/TagsDto.html":{}}}],["interfaces/type",{"_index":1270,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["interfaces/user.interface",{"_index":1386,"title":{},"body":{"classes/UserDto.html":{}}}],["isarray",{"_index":910,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isdate",{"_index":462,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isdatestring",{"_index":463,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isemail",{"_index":680,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserDto.html":{}}}],["isenum",{"_index":464,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["isenum(priceenum",{"_index":919,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isenum(roleenum",{"_index":1389,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(typeenum",{"_index":474,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isenum(typepoienum",{"_index":918,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isnan(percentandtypegc.idtype",{"_index":1017,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnan(percentandtypegc.percent",{"_index":1018,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnumber",{"_index":465,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{}}}],["isnumberstring",{"_index":466,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isoptional",{"_index":467,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isstring",{"_index":468,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["join",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["joincolumn",{"_index":586,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["jointagpoi",{"_index":624,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoientity",{"_index":180,"title":{"classes/JoinTagPoiEntity.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"coverage.html":{}}}],["jointagpoimodule",{"_index":137,"title":{"modules/JoinTagPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["jointagpoirepository",{"_index":607,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoiservice",{"_index":594,"title":{"injectables/JoinTagPoiService.html":{}},"body":{"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["jwt",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":658,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":227,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":645,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["keysenum",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keysenum.push(enumeration[n",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":54,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["last",{"_index":1377,"title":{},"body":{"classes/UserDto.html":{}}}],["lastname",{"_index":1337,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["lat",{"_index":290,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["latitude",{"_index":327,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["legend",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":336,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["limit",{"_index":1486,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["line:no",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["line:variable",{"_index":42,"title":{},"body":{"classes/AccessToken.html":{}}}],["local",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":228,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":82,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logo",{"_index":811,"title":{},"body":{"classes/Poi.html":{},"interfaces/PoiInterface.html":{}}}],["long",{"_index":291,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["longitude",{"_index":334,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["longtext",{"_index":817,"title":{},"body":{"classes/Poi.html":{}}}],["low",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["madu",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["maduequipe",{"_index":1556,"title":{},"body":{"index.html":{}}}],["mail",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["main",{"_index":1532,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":360,"title":{},"body":{"controllers/CompanyController.html":{}}}],["many",{"_index":344,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["manytoone",{"_index":587,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(type",{"_index":588,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":576,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["map",{"_index":530,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":797,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"dependencies.html":{}}}],["method",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":1535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":1504,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":122,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":124,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["mysql",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["n",{"_index":1332,"title":{},"body":{"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["nan",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nbcompany",{"_index":1105,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore",{"_index":1098,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore.push(await",{"_index":1101,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbpoi",{"_index":1103,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbtype",{"_index":1113,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbworker",{"_index":292,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["nest",{"_index":218,"title":{},"body":{"injectables/AppService.html":{}}}],["nestinterceptor",{"_index":528,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["nestjs",{"_index":1564,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1035,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"controllers/StatsController.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["network",{"_index":433,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["new",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newvalue",{"_index":801,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["newvalue.idpoi",{"_index":802,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.idtypegreenscore",{"_index":804,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.percent",{"_index":806,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.tags",{"_index":1007,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.typegreenscore",{"_index":1010,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["next",{"_index":41,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["next.handle().pipe(map(data",{"_index":538,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["notfoundexception",{"_index":504,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`company",{"_index":513,"title":{},"body":{"injectables/CompanyService.html":{}}}],["notfoundexception(`percenttypegreenscoreandpoi",{"_index":779,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["notfoundexception(`poi",{"_index":985,"title":{},"body":{"injectables/PoiService.html":{}}}],["notfoundexception(`role",{"_index":1068,"title":{},"body":{"injectables/RoleService.html":{}}}],["notfoundexception(`tag",{"_index":1198,"title":{},"body":{"injectables/TagsService.html":{}}}],["notfoundexception(`type",{"_index":1299,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["notfoundexception(`user",{"_index":1421,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":501,"title":{},"body":{"injectables/CompanyService.html":{}}}],["null",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/Poi.html":{}}}],["nullable",{"_index":308,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{}}}],["number",{"_index":322,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["number(value",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyDto.html":{}}}],["observable",{"_index":527,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["office",{"_index":1554,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":577,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/User.html":{}}}],["one",{"_index":388,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["onupdate",{"_index":579,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/User.html":{}}}],["option",{"_index":644,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":517,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbydate",{"_index":486,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbyname",{"_index":934,"title":{},"body":{"injectables/PoiService.html":{}}}],["orwhere('id",{"_index":1072,"title":{},"body":{"injectables/RoleService.html":{}}}],["os",{"_index":1222,"title":{},"body":{"controllers/TypeController.html":{}}}],["out",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":432,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["overview",{"_index":1573,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1463,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parseintpipe",{"_index":393,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":653,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":650,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":656,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":662,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["percent",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["percent.percent",{"_index":788,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentandidtag",{"_index":681,"title":{"classes/PercentAndIdTag.html":{}},"body":{"classes/PercentAndIdTag.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["percentandtypegc",{"_index":1020,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.idtype",{"_index":1013,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.percent",{"_index":1015,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentgc",{"_index":781,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentgcanddto",{"_index":979,"title":{},"body":{"injectables/PoiService.html":{}}}],["percentpoiantypegcpromise",{"_index":960,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegcandpoi",{"_index":751,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegcandpoiaddedpromise",{"_index":977,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoi",{"_index":191,"title":{"classes/PercentTypeGreenScoreAndPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoicontroller",{"_index":699,"title":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoidto",{"_index":704,"title":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoientity",{"_index":705,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiinterface",{"_index":727,"title":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{}},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoimodule",{"_index":138,"title":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoirepository",{"_index":748,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservice",{"_index":703,"title":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoiservicedto",{"_index":766,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservicedto.percent",{"_index":771,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoitoadd",{"_index":975,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitoadd.map(async",{"_index":978,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitransformationpipe",{"_index":706,"title":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["pipe/percent",{"_index":707,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["pipe/poi.transformation.pipe",{"_index":869,"title":{},"body":{"controllers/PoiController.html":{}}}],["pipetransform",{"_index":800,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["pme",{"_index":1233,"title":{},"body":{"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["poi",{"_index":173,"title":{"classes/Poi.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi'})@isnumberstring",{"_index":896,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring",{"_index":885,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring()@isoptional",{"_index":889,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi.controller",{"_index":740,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["poi.controller.ts",{"_index":700,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"coverage.html":{}}}],["poi.greenscore",{"_index":988,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.id",{"_index":590,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi.interface",{"_index":733,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi.interface.ts",{"_index":735,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["poi.module.ts",{"_index":595,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["poi.service",{"_index":596,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["poi.service.ts",{"_index":598,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["poi.service.ts:107",{"_index":754,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:15",{"_index":747,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:24",{"_index":610,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:29",{"_index":750,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:35",{"_index":617,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:45",{"_index":621,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:55",{"_index":619,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:67",{"_index":615,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:77",{"_index":759,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:80",{"_index":613,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:9",{"_index":606,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:98",{"_index":757,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.transformation.pipe",{"_index":708,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["poi.transformation.pipe.ts",{"_index":795,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi.transformation.pipe.ts:12",{"_index":799,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["poi/interfaces/percent",{"_index":734,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi/join",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/jointagpoientity",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"classes/PoiAndTags.html":{}}}],["poi/jointagpoientity.ts",{"_index":574,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"coverage.html":{}}}],["poi/jointagpoientity.ts:18",{"_index":585,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:27",{"_index":582,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:8",{"_index":575,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/percent",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/percentandidtag",{"_index":1294,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts",{"_index":726,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:12",{"_index":730,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:16",{"_index":731,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:8",{"_index":729,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoientity",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"injectables/PoiService.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts",{"_index":687,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:10",{"_index":689,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:14",{"_index":691,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:23",{"_index":696,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:31",{"_index":693,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/pipe/percent",{"_index":794,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi/poi.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/StatsModule.html":{}}}],["poi/poi.service",{"_index":761,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/StatsService.html":{}}}],["poi/poientity",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiadded",{"_index":983,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiandtags",{"_index":831,"title":{"classes/PoiAndTags.html":{}},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["poicontroller",{"_index":839,"title":{"controllers/PoiController.html":{}},"body":{"controllers/PoiController.html":{},"modules/PoiModule.html":{},"coverage.html":{}}}],["poidto",{"_index":850,"title":{"injectables/PoiDto.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poidto.typegreenscore",{"_index":968,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.typegreenscore.map((type",{"_index":971,"title":{},"body":{"injectables/PoiService.html":{}}}],["poientity",{"_index":836,"title":{},"body":{"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poifind",{"_index":769,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiid",{"_index":581,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poiinterface",{"_index":908,"title":{"interfaces/PoiInterface.html":{}},"body":{"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["poimodule",{"_index":139,"title":{"modules/PoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["point",{"_index":841,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["poirepository",{"_index":940,"title":{},"body":{"injectables/PoiService.html":{}}}],["pois",{"_index":332,"title":{},"body":{"classes/Company.html":{}}}],["poiservice",{"_index":760,"title":{"injectables/PoiService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["poitoadd",{"_index":611,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind",{"_index":616,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind.id",{"_index":636,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitransformationpipe",{"_index":868,"title":{"injectables/PoiTransformationPipe.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poiwithtype",{"_index":998,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.greenscore",{"_index":1000,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.tags",{"_index":999,"title":{},"body":{"injectables/PoiService.html":{}}}],["port",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["post('and",{"_index":713,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["post('auth/login",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["post()@usepipes(new",{"_index":1140,"title":{},"body":{"controllers/TagsController.html":{}}}],["postal",{"_index":349,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["postalcode",{"_index":293,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["prefix",{"_index":359,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["preset",{"_index":1383,"title":{},"body":{"classes/UserDto.html":{}}}],["price",{"_index":812,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["priceenum",{"_index":912,"title":{},"body":{"injectables/PoiDto.html":{},"miscellaneous/enumerations.html":{}}}],["priceenum})@isenum(priceenum",{"_index":898,"title":{},"body":{"injectables/PoiDto.html":{}}}],["primarygeneratedcolumn",{"_index":323,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["private",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["process.env.db_host",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_token",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["profile",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["promise",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["promise.all(allpoiwithtagsandtypespromise",{"_index":1001,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(companytypepromise",{"_index":1123,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(gettypepoipromise",{"_index":1122,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(percentpoiantypegcpromise",{"_index":965,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(percenttypegcandpoiaddedpromise",{"_index":981,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(tagaddedpromise",{"_index":982,"title":{},"body":{"injectables/PoiService.html":{}}}],["properly",{"_index":1537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["property",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{}}}],["providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":394,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["put(':id",{"_index":420,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["range",{"_index":329,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{},"injectables/StatsService.html":{}}}],["rangem",{"_index":792,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemax",{"_index":755,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemin",{"_index":753,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rate",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["recover",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["refacto",{"_index":966,"title":{},"body":{"injectables/PoiService.html":{}}}],["reflect",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1030,"title":{},"body":{"guards/RoleGuard.html":{}}}],["relations",{"_index":627,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/UserService.html":{}}}],["repeated",{"_index":1545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":488,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["request",{"_index":56,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{}}}],["request.user",{"_index":1039,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requests",{"_index":1546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require('hex",{"_index":533,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["reset",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["rest",{"_index":1552,"title":{},"body":{"index.html":{}}}],["restaurant",{"_index":917,"title":{},"body":{"injectables/PoiDto.html":{}}}],["restaurant)'})@isenum(typepoienum",{"_index":904,"title":{},"body":{"injectables/PoiDto.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rgba",{"_index":534,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"dependencies.html":{}}}],["right",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":162,"title":{"classes/Role.html":{}},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.id",{"_index":1347,"title":{},"body":{"classes/User.html":{}}}],["role.role",{"_index":1075,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.service",{"_index":1048,"title":{},"body":{"modules/RoleModule.html":{}}}],["role/enum/role.enum",{"_index":1388,"title":{},"body":{"classes/UserDto.html":{}}}],["role/role.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":654,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["role/roleentity",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["roleentity",{"_index":1049,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["roleenum",{"_index":1387,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum})@isenum(roleenum",{"_index":1384,"title":{},"body":{"classes/UserDto.html":{}}}],["roleguard",{"_index":97,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["roleid",{"_index":1345,"title":{},"body":{"classes/User.html":{}}}],["rolemodule",{"_index":140,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerolerepository",{"_index":1057,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":409,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["roles.includes(role",{"_index":1042,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roles.map((role",{"_index":1074,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleservice",{"_index":642,"title":{"injectables/RoleService.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":1063,"title":{},"body":{"injectables/RoleService.html":{}}}],["root",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":58,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["router",{"_index":1534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routes",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":529,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":531,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["saltrounds",{"_index":1414,"title":{},"body":{"injectables/UserService.html":{}}}],["school",{"_index":354,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["score",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score'})@validatenested()@isoptional",{"_index":906,"title":{},"body":{"injectables/PoiDto.html":{}}}],["score.controller",{"_index":571,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.controller.ts",{"_index":564,"title":{},"body":{"controllers/GreenScoreController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"coverage.html":{}}}],["score.controller.ts:34",{"_index":1248,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:45",{"_index":1257,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:55",{"_index":1254,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:67",{"_index":1253,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.interface",{"_index":1271,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score.interface.ts",{"_index":1273,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score.module",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["score.module.ts",{"_index":569,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service",{"_index":570,"title":{},"body":{"modules/GreenScoreModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service.ts",{"_index":572,"title":{},"body":{"injectables/GreenScoreService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score.service.ts:23",{"_index":1286,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:30",{"_index":1288,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:38",{"_index":1293,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:49",{"_index":1287,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:58",{"_index":1290,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:8",{"_index":1283,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score/green",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["score/interfaces/type",{"_index":1272,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score/type",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts",{"_index":1267,"title":{},"body":{"classes/TypeGreenScoreDto.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts:8",{"_index":1269,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score/typegreenscoreentity",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["score/typegreenscoreentity.ts",{"_index":1237,"title":{},"body":{"classes/TypeGreenScore.html":{},"coverage.html":{}}}],["score/typegreenscoreentity.ts:14",{"_index":1240,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["score/typegreenscoreentity.ts:8",{"_index":1238,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["secret",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":661,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select",{"_index":631,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["select('role",{"_index":1070,"title":{},"body":{"injectables/RoleService.html":{}}}],["send",{"_index":55,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["sent",{"_index":431,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["serializetags",{"_index":990,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetags.foreach((tag",{"_index":992,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetagsdata",{"_index":604,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagsdata(tags",{"_index":620,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagswithrgb",{"_index":993,"title":{},"body":{"injectables/PoiService.html":{}}}],["service",{"_index":217,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["set",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadowed",{"_index":1099,"title":{},"body":{"injectables/StatsService.html":{}}}],["shopping",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["short",{"_index":888,"title":{},"body":{"injectables/PoiDto.html":{}}}],["show",{"_index":331,"title":{},"body":{"classes/Company.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../function.utils.ts",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../price.enum.ts",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.enum.ts",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typepoienum.ts",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:28",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:43",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":215,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":220,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/access",{"_index":49,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":639,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":643,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:32",{"_index":647,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":666,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:10",{"_index":669,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:24",{"_index":671,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/company/company.controller.ts",{"_index":358,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:107",{"_index":384,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:33",{"_index":373,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:49",{"_index":387,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:61",{"_index":382,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:77",{"_index":391,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:93",{"_index":378,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":479,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":482,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:10",{"_index":489,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:26",{"_index":491,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:39",{"_index":499,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:50",{"_index":497,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:59",{"_index":496,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:63",{"_index":493,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:67",{"_index":495,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:75",{"_index":503,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/companydto.ts",{"_index":429,"title":{},"body":{"injectables/CompanyDto.html":{},"coverage.html":{}}}],["src/company/companydto.ts:104",{"_index":449,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:114",{"_index":454,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:18",{"_index":445,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:27",{"_index":436,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:36",{"_index":440,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:46",{"_index":442,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:55",{"_index":456,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:65",{"_index":459,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:74",{"_index":439,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:83",{"_index":451,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:92",{"_index":443,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:98",{"_index":450,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companyentity.ts",{"_index":281,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/company/companyentity.ts:100",{"_index":304,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:109",{"_index":320,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:112",{"_index":312,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:12",{"_index":324,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:20",{"_index":296,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:29",{"_index":338,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:35",{"_index":348,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:45",{"_index":310,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:55",{"_index":314,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:63",{"_index":351,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:73",{"_index":333,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:83",{"_index":326,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:91",{"_index":341,"title":{},"body":{"classes/Company.html":{}}}],["src/company/enum/type.enum.ts",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/company/interface/company.interface.ts",{"_index":475,"title":{},"body":{"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["src/decorator/role.decorator.ts",{"_index":1439,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/green",{"_index":563,"title":{},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts",{"_index":1027,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts:6",{"_index":1031,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role.guard.ts:9",{"_index":1033,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/interceptor/entity",{"_index":519,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["src/join",{"_index":573,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"coverage.html":{}}}],["src/logindto.ts",{"_index":675,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/logindto.ts:11",{"_index":677,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/logindto.ts:7",{"_index":679,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/main.ts",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/percent",{"_index":686,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/enum/price.enum.ts",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/enum/typepoienum.ts",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/interfaces/poi.interface.ts",{"_index":920,"title":{},"body":{"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts",{"_index":682,"title":{},"body":{"classes/PercentAndIdTag.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts:2",{"_index":684,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/percentandidtag.ts:3",{"_index":685,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts",{"_index":1004,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts:8",{"_index":1005,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["src/poi/poi.controller.ts",{"_index":840,"title":{},"body":{"controllers/PoiController.html":{},"coverage.html":{}}}],["src/poi/poi.controller.ts:101",{"_index":863,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:39",{"_index":853,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:53",{"_index":859,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:66",{"_index":855,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:80",{"_index":867,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:92",{"_index":861,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.module.ts",{"_index":925,"title":{},"body":{"modules/PoiModule.html":{}}}],["src/poi/poi.service.ts",{"_index":927,"title":{},"body":{"injectables/PoiService.html":{},"coverage.html":{}}}],["src/poi/poi.service.ts:100",{"_index":948,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:112",{"_index":942,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:116",{"_index":955,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:124",{"_index":954,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:132",{"_index":944,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:140",{"_index":953,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:16",{"_index":939,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:38",{"_index":947,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:50",{"_index":941,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:79",{"_index":950,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:86",{"_index":952,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poiandtags.ts",{"_index":832,"title":{},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["src/poi/poiandtags.ts:6",{"_index":835,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poiandtags.ts:7",{"_index":834,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poidto.ts",{"_index":884,"title":{},"body":{"injectables/PoiDto.html":{},"coverage.html":{}}}],["src/poi/poidto.ts:102",{"_index":907,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:108",{"_index":905,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:115",{"_index":899,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:22",{"_index":886,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:31",{"_index":887,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:41",{"_index":890,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:46",{"_index":892,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:56",{"_index":893,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:63",{"_index":894,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:69",{"_index":895,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:75",{"_index":897,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:83",{"_index":903,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poientity.ts",{"_index":808,"title":{},"body":{"classes/Poi.html":{},"coverage.html":{}}}],["src/poi/poientity.ts:12",{"_index":826,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:17",{"_index":829,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:22",{"_index":818,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:27",{"_index":814,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:32",{"_index":815,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:37",{"_index":828,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:44",{"_index":830,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:51",{"_index":824,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:58",{"_index":822,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:6",{"_index":821,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:64",{"_index":820,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:70",{"_index":823,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:73",{"_index":816,"title":{},"body":{"classes/Poi.html":{}}}],["src/role/enum/role.enum.ts",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/role/role.module.ts",{"_index":1047,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1051,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:10",{"_index":1056,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:24",{"_index":1062,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:38",{"_index":1059,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:50",{"_index":1065,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/roleentity.ts",{"_index":1021,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/role/roleentity.ts:11",{"_index":1024,"title":{},"body":{"classes/Role.html":{}}}],["src/role/roleentity.ts:6",{"_index":1022,"title":{},"body":{"classes/Role.html":{}}}],["src/stats/stats.controller.ts",{"_index":1077,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":1080,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":1089,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":1091,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:10",{"_index":1094,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:20",{"_index":1095,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:29",{"_index":1096,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/tags/interfaces/tags.interface.ts",{"_index":1169,"title":{},"body":{"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts",{"_index":1124,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts:14",{"_index":1131,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:19",{"_index":1127,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:8",{"_index":1128,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tags.controller.ts",{"_index":1133,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:19",{"_index":1141,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:27",{"_index":1145,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:36",{"_index":1150,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:43",{"_index":1147,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1173,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1176,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:14",{"_index":1182,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:19",{"_index":1183,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:23",{"_index":1184,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:31",{"_index":1185,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:38",{"_index":1187,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:42",{"_index":1189,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:8",{"_index":1180,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tagsdto.ts",{"_index":1162,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/tags/tagsdto.ts:10",{"_index":1167,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/type",{"_index":1236,"title":{},"body":{"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["src/type/interface/type.interface.ts",{"_index":1303,"title":{},"body":{"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["src/type/type.controller.ts",{"_index":1205,"title":{},"body":{"controllers/TypeController.html":{},"coverage.html":{}}}],["src/type/type.controller.ts:34",{"_index":1213,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:46",{"_index":1217,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:56",{"_index":1218,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:68",{"_index":1215,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.module.ts",{"_index":1307,"title":{},"body":{"modules/TypeModule.html":{}}}],["src/type/type.service.ts",{"_index":1310,"title":{},"body":{"injectables/TypeService.html":{},"coverage.html":{}}}],["src/type/type.service.ts:23",{"_index":1315,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:31",{"_index":1319,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:41",{"_index":1318,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:49",{"_index":1317,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:57",{"_index":1322,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:61",{"_index":1320,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:9",{"_index":1313,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/typedto.ts",{"_index":1231,"title":{},"body":{"classes/TypeDto.html":{},"coverage.html":{}}}],["src/type/typedto.ts:11",{"_index":1234,"title":{},"body":{"classes/TypeDto.html":{}}}],["src/type/typeentity.ts",{"_index":1201,"title":{},"body":{"classes/Type.html":{},"coverage.html":{}}}],["src/type/typeentity.ts:15",{"_index":1203,"title":{},"body":{"classes/Type.html":{}}}],["src/type/typeentity.ts:9",{"_index":1202,"title":{},"body":{"classes/Type.html":{}}}],["src/user",{"_index":1351,"title":{},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":1390,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":1355,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:25",{"_index":1360,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":1363,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1395,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1399,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":1404,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":1412,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":1406,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":1410,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":1408,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/userdto.ts",{"_index":1372,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/userdto.ts:11",{"_index":1376,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:17",{"_index":1378,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:23",{"_index":1381,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:29",{"_index":1382,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:36",{"_index":1385,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userentity.ts",{"_index":1335,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/userentity.ts:13",{"_index":1342,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:18",{"_index":1338,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:23",{"_index":1340,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:28",{"_index":1344,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:37",{"_index":1346,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:7",{"_index":1339,"title":{},"body":{"classes/User.html":{}}}],["src/utils/function.utils.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":437,"title":{},"body":{"injectables/CompanyDto.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1549,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1426,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":1078,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":1090,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":1082,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/stats.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["statscontroller",{"_index":1076,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodule",{"_index":141,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":1081,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["stock",{"_index":297,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["strategy",{"_index":652,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stringtype",{"_index":1331,"title":{},"body":{"injectables/TypeService.html":{}}}],["stringtype.push(types[n",{"_index":1334,"title":{},"body":{"injectables/TypeService.html":{}}}],["success",{"_index":426,"title":{},"body":{"controllers/CompanyController.html":{}}}],["super",{"_index":657,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1570,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1571,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1500,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":171,"title":{"classes/Tag.html":{}},"body":{"modules/AppModule.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tag.a",{"_index":557,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["tag.b",{"_index":555,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["tag.g",{"_index":553,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["tag.id",{"_index":589,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{}}}],["tag.r",{"_index":551,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["tag.tag",{"_index":629,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tagdto",{"_index":1142,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tagdto.colortag",{"_index":1192,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagentity",{"_index":1152,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{}}}],["tagid",{"_index":584,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{}}}],["tagrepository",{"_index":1181,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags",{"_index":622,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tags'})@isoptional()@isarray",{"_index":902,"title":{},"body":{"injectables/PoiDto.html":{}}}],["tags.controller",{"_index":1174,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.foreach((tag",{"_index":1196,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags.map((tag",{"_index":628,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tags.service",{"_index":1151,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tagentity",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{}}}],["tags/tags.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["tags/tags.service",{"_index":956,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["tagscontroller",{"_index":1132,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsdto",{"_index":1139,"title":{"classes/TagsDto.html":{}},"body":{"controllers/TagsController.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsinterface",{"_index":1163,"title":{"interfaces/TagsInterface.html":{}},"body":{"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":142,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":937,"title":{"injectables/TagsService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagtoadd",{"_index":609,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["techno",{"_index":1563,"title":{},"body":{"index.html":{}}}],["this.access_token",{"_index":44,"title":{},"body":{"classes/AccessToken.html":{}}}],["this.authservice.login(req.user",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(mail",{"_index":674,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companyrepository.count",{"_index":516,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.delete(idcompany",{"_index":515,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.find",{"_index":514,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneorfail(idcompany",{"_index":510,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.save(companydata",{"_index":509,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice.addcompany(companydto",{"_index":413,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.countcompany",{"_index":1106,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.countnbtype(type",{"_index":1114,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.deletecompany(idcompany",{"_index":425,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getallcompany",{"_index":419,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(id",{"_index":417,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(idcompany",{"_index":424,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.orderbydate",{"_index":428,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.formattopercenttgcandpoi(poiadded",{"_index":976,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.getalltag",{"_index":1200,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.getgreenscore",{"_index":1109,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.getonepercenttypegreenscoreandpoi(idpercentgcandpoi",{"_index":782,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.getpoi(idpoi",{"_index":986,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.gettype(idtypegreenscore",{"_index":1300,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.hashpassword(user.password",{"_index":1416,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jointagpoirepository.count",{"_index":638,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.createquerybuilder('g",{"_index":630,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.find",{"_index":626,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.save(jointagpoi",{"_index":625,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poiadded",{"_index":974,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.getallcompanytag(poi",{"_index":987,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.serializetagsdata(tags",{"_index":991,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.percenttypegreenscoreandpoirepository.createquerybuilder",{"_index":790,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.delete(percentgc",{"_index":783,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.find",{"_index":774,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.findoneorfail(idpercent",{"_index":778,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegcandpoi",{"_index":764,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegreenscoreandpoi",{"_index":772,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegcandpoi(percentgcanddto",{"_index":980,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegreenscoreandpoiservice(percenttypegreenscoreandpoidto",{"_index":712,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.countranggreenscore(range",{"_index":1102,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.percenttypegreenscoreandpoiservice.deletepercenttypegreenscore(idpercent",{"_index":725,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.findbypoi(idpoi",{"_index":723,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getallpercenttypegreenscoreandpoi",{"_index":717,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getgreenscorepassmark(poi",{"_index":989,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.getonepercenttypegreenscoreandpoi(idpercent",{"_index":720,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.poi",{"_index":837,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.poirepository.count",{"_index":1002,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.find",{"_index":995,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.findoneorfail(idpoi",{"_index":984,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poiservice.addpoi(poidto",{"_index":876,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.countpoi",{"_index":1104,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.counttype(typepoi",{"_index":1121,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.getallpoi",{"_index":879,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getpoi(idpoi",{"_index":776,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoi(percenttypegreenscoreandpoiservicedto.idpoi",{"_index":770,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoiandtags(idpoi",{"_index":878,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.gettypepoi",{"_index":1116,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.orderbydate",{"_index":883,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.orderbyname",{"_index":882,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.reflector.get('roles",{"_index":1036,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.rolerolerepository.createquerybuilder",{"_index":1069,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerolerepository.findoneorfail",{"_index":1067,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.getinfrole(result.role.id",{"_index":664,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.roleservice.getoneorfailbyrole(user.role",{"_index":1418,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getonlyrole(roles",{"_index":665,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.statsservice.getstat",{"_index":1085,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.tagrepository.delete(idtag",{"_index":1194,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.find",{"_index":1195,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findbyids(idstags",{"_index":1199,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findoneorfail(idtag",{"_index":1197,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.save(tagdto",{"_index":1193,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tags",{"_index":838,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.tagsservice.addtag(tagdto",{"_index":1156,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.deletetag(idtag",{"_index":1159,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getalltag",{"_index":1161,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(idtag",{"_index":1158,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.gettags(poidto.tags",{"_index":967,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscorerepository.delete(typegreenscore",{"_index":1301,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.find",{"_index":1297,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findbyids(idtypes",{"_index":1302,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findoneorfail(idtype",{"_index":1298,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.save(typegreenscoredto",{"_index":1296,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscoreservice.addgreenscore(typegreenscoreandpoidto",{"_index":1260,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.deletetypegreenscore(idtypegreenscore",{"_index":1266,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getalltype",{"_index":1264,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getbyids",{"_index":970,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscoreservice.gettype(idtypegreenscore",{"_index":1263,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.gettype(percenttypegreenscoreandpoiservicedto.idtypegreenscore",{"_index":768,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.typegreenscoreservice.gettype(typepercent.idtype",{"_index":964,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typerepository.delete(idtype",{"_index":1328,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.find",{"_index":1327,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findbyids(idstypes",{"_index":1329,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findoneorfail(idtype",{"_index":1326,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.save(typedto",{"_index":1325,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typeservice.addtype(typedto",{"_index":1226,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.deletetype(idtype",{"_index":1230,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.getonetype(idtype",{"_index":1228,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.gettype",{"_index":1108,"title":{},"body":{"injectables/StatsService.html":{},"controllers/TypeController.html":{}}}],["this.userrepository.findoneorfail",{"_index":1420,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail(userid",{"_index":1422,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1419,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduser(userdto",{"_index":1369,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(payload.userid",{"_index":663,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.getuserbymail(mail",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":512,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["todo",{"_index":701,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PoiService.html":{}}}],["token",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["token.interfaces",{"_index":38,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.interfaces.ts",{"_index":50,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.ts:11",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{}}}],["tostring(16",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":786,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["toto",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["transform",{"_index":415,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["transform(value",{"_index":796,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["transformer",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":559,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["true})@joincolumn({name",{"_index":583,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["try",{"_index":667,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["tslint:disable",{"_index":40,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["type",{"_index":32,"title":{"classes/Type.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type.controller",{"_index":1308,"title":{},"body":{"modules/TypeModule.html":{}}}],["type.idtype",{"_index":972,"title":{},"body":{"injectables/PoiService.html":{}}}],["type.interceptor",{"_index":402,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["type.interceptor.ts",{"_index":520,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["type.interceptor.ts:9",{"_index":525,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["type.service",{"_index":1219,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{}}}],["type/type.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["type/type.service",{"_index":957,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["type/typeentity",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["typeandpercent",{"_index":946,"title":{},"body":{"injectables/PoiService.html":{}}}],["typeandpercent.map(async",{"_index":961,"title":{},"body":{"injectables/PoiService.html":{}}}],["typecontroller",{"_index":1204,"title":{"controllers/TypeController.html":{}},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"coverage.html":{}}}],["typedto",{"_index":1211,"title":{"classes/TypeDto.html":{}},"body":{"controllers/TypeController.html":{},"classes/TypeDto.html":{},"injectables/TypeService.html":{},"coverage.html":{}}}],["typeentity",{"_index":1220,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{}}}],["typeenum",{"_index":470,"title":{},"body":{"injectables/CompanyDto.html":{},"controllers/TypeController.html":{},"injectables/TypeService.html":{},"miscellaneous/enumerations.html":{}}}],["typeenum})@isenum(typeenum",{"_index":458,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["typegreenscore",{"_index":189,"title":{"classes/TypeGreenScore.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscore.id",{"_index":697,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["typegreenscoreandpoidto",{"_index":1249,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["typegreenscorecontroller",{"_index":1241,"title":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"coverage.html":{}}}],["typegreenscoredto",{"_index":1247,"title":{"classes/TypeGreenScoreDto.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscoreentity",{"_index":1258,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{}}}],["typegreenscorefind",{"_index":767,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["typegreenscoreinterface",{"_index":1268,"title":{"interfaces/TypeGreenScoreInterface.html":{}},"body":{"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["typegreenscoremodule",{"_index":143,"title":{"modules/TypeGreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["typegreenscorerepository",{"_index":1284,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["typegreenscoreservice",{"_index":762,"title":{"injectables/TypeGreenScoreService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["typeinterface",{"_index":1232,"title":{"interfaces/TypeInterface.html":{}},"body":{"classes/TypeDto.html":{},"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["typemodule",{"_index":144,"title":{"modules/TypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TypeModule.html":{},"modules.html":{},"overview.html":{}}}],["typename",{"_index":1120,"title":{},"body":{"injectables/StatsService.html":{}}}],["typeof",{"_index":541,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":356,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([company",{"_index":481,"title":{},"body":{"modules/CompanyModule.html":{}}}],["typeormmodule.forfeature([jointagpoientity",{"_index":597,"title":{},"body":{"modules/JoinTagPoiModule.html":{}}}],["typeormmodule.forfeature([percenttypegreenscoreandpoi",{"_index":741,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["typeormmodule.forfeature([poi",{"_index":926,"title":{},"body":{"modules/PoiModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1050,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":1175,"title":{},"body":{"modules/TagsModule.html":{}}}],["typeormmodule.forfeature([type",{"_index":1309,"title":{},"body":{"modules/TypeModule.html":{}}}],["typeormmodule.forfeature([typegreenscore",{"_index":1277,"title":{},"body":{"modules/TypeGreenScoreModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1398,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["typepercent",{"_index":962,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepercent.percent",{"_index":963,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepoi",{"_index":1119,"title":{},"body":{"injectables/StatsService.html":{}}}],["typepoienum",{"_index":915,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"miscellaneous/enumerations.html":{}}}],["typerepository",{"_index":1314,"title":{},"body":{"injectables/TypeService.html":{}}}],["types",{"_index":1107,"title":{},"body":{"injectables/StatsService.html":{},"injectables/TypeService.html":{}}}],["types.map(async",{"_index":1111,"title":{},"body":{"injectables/StatsService.html":{}}}],["types/bcrypt",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["types/compression",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["types[n",{"_index":1333,"title":{},"body":{"injectables/TypeService.html":{}}}],["typeservice",{"_index":938,"title":{"injectables/TypeService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"coverage.html":{},"overview.html":{}}}],["typespoi",{"_index":1115,"title":{},"body":{"injectables/StatsService.html":{}}}],["typespoi.map(async",{"_index":1118,"title":{},"body":{"injectables/StatsService.html":{}}}],["typetocheck",{"_index":969,"title":{},"body":{"injectables/PoiService.html":{}}}],["typetocheck.length",{"_index":973,"title":{},"body":{"injectables/PoiService.html":{}}}],["ui",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["uml",{"_index":1566,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":649,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":309,"title":{},"body":{"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"classes/User.html":{}}}],["undefined})@useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":371,"title":{},"body":{"controllers/CompanyController.html":{}}}],["unique",{"_index":325,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/User.html":{}}}],["up",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":392,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["updatecompany",{"_index":367,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(@param('id",{"_index":421,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(id",{"_index":389,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatepoi",{"_index":848,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(@param('id",{"_index":880,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(idpoi",{"_index":864,"title":{},"body":{"controllers/PoiController.html":{}}}],["use",{"_index":492,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/functions.html":{}}}],["useguards",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(authguard('local",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(roleguard",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":1144,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@get",{"_index":1146,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('/one/:id",{"_index":1256,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":1149,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":1212,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(roleguard)@roles('admin')@usepipes(new",{"_index":1251,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useinterceptors",{"_index":395,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useinterceptors(entitytypeinterceptor",{"_index":418,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useless",{"_index":446,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["usepipes",{"_index":396,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":410,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(percenttypegreenscoreandpoitransformationpipe",{"_index":710,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["usepipes(poitransformationpipe",{"_index":874,"title":{},"body":{"controllers/PoiController.html":{}}}],["user",{"_index":164,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'})@isemail",{"_index":1380,"title":{},"body":{"classes/UserDto.html":{}}}],["user'})@isstring",{"_index":1375,"title":{},"body":{"classes/UserDto.html":{}}}],["user.controller",{"_index":1396,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.mail",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":1417,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1043,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.roles.some((role",{"_index":1041,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.service",{"_index":1365,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user/userentity",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["userappmodule",{"_index":145,"title":{"modules/UserAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"modules.html":{},"overview.html":{}}}],["userappservice",{"_index":1350,"title":{"injectables/UserAppService.html":{}},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":1354,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":1359,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":1397,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userinterface",{"_index":1373,"title":{"interfaces/UserInterface.html":{}},"body":{"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["usermodule",{"_index":146,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginDto.html":{}}}],["userrepository",{"_index":1405,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":345,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["userservice",{"_index":253,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/function.utils",{"_index":537,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/TagsService.html":{},"injectables/TypeService.html":{}}}],["validate",{"_index":641,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(mail",{"_index":670,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":646,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":911,"title":{},"body":{"injectables/PoiDto.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(mail",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":372,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["validationpipe())@delete(':id",{"_index":1252,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["validationpipe())@roles('admin",{"_index":866,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@useguards(roleguard)@roles('admin",{"_index":858,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@usepipes(poitransformationpipe)@useguards(roleguard)@roles('admin",{"_index":852,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe({transform",{"_index":411,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["validator",{"_index":469,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["validity",{"_index":648,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"miscellaneous/variables.html":{}}}],["value.tags.map((idtags",{"_index":1008,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["value.typegreenscore.map((percentandtypegc",{"_index":1012,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["variable",{"_index":1100,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["variables",{"_index":1579,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vegan",{"_index":1165,"title":{},"body":{"classes/TagsDto.html":{}}}],["where('idpoi",{"_index":634,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["where('percent",{"_index":791,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["where(`id",{"_index":1071,"title":{},"body":{"injectables/RoleService.html":{}}}],["without",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["work",{"_index":343,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/functions.html":{}}}],["worker",{"_index":342,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["working",{"_index":353,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token.ts\n        \n\n            \n                Description\n            \n            \n                This controller allows to create a new jwt token\n\n            \n\n\n            \n                Implements\n            \n            \n                            AccessTokenInterfaces\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                            Set the access token to the access_token properties\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                value will be set to access_token property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                        Cf interface\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenInterfaces } from './interfaces/access-token.interfaces';\n\n/**\n * This controller allows to create a new jwt token\n */\nexport class AccessToken implements AccessTokenInterfaces {\n  /**\n   * Cf interface\n   */\n    // tslint:disable-next-line:variable-name\n  access_token: string;\n\n  /**\n   * Set the access token to the access_token properties\n   * @param accessToken {string} value will be set to access_token property\n   */\n  constructor(accessToken) {\n    this.access_token = accessToken;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenInterfaces.html":{"url":"interfaces/AccessTokenInterfaces.html","title":"interface - AccessTokenInterfaces","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccessTokenInterfaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                this interface define the value attempt in a jwt token\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    this data allows to know who send the request and authorize or not the access to some route\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenInterfaces {\n   /**\n    * this data allows to know who send the request and authorize or not the access to some route\n    */\n   access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This controller contains the routes to connect and retrieve your profile\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiUnauthorizedResponse()@ApiOkResponse()@UseGuards(undefined)@UseGuards(RoleGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:43\n                \n            \n\n\n            \n                \n                    This method allows get account information from jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, toto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:28\n                \n            \n\n\n            \n                \n                    the call of this method allows to recover a jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Get, Body } from '@nestjs/common';\nimport {AuthService} from './auth/auth.service';\nimport {AuthGuard} from '@nestjs/passport';\nimport { AccessToken } from './auth/access-token';\nimport { RoleGuard } from './guard/role.guard';\nimport { Roles } from './decorator/role.decorator';\nimport { ApiBasicAuth, ApiBearerAuth, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { LoginDto } from './loginDto';\n\n/**\n * This controller contains the routes to connect and retrieve your profile\n */\n@ApiTags('login')\n@Controller()\nexport class AppController {\n  constructor(readonly authService: AuthService) {}\n\n  /**\n   * the call of this method allows to recover a jwt token\n   * @param req {Request}\n   * @param toto\n   * @return {AccessToken}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req, @Body() toto: LoginDto): Promise {\n    // tslint:disable-next-line:no-console\n    return await this.authService.login(req.user);\n  }\n\n  /**\n   * This method allows get account information from jwt token\n   * @param req {Request}\n   */\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @ApiOkResponse()\n  @UseGuards(AuthGuard('jwt'))\n  @UseGuards(RoleGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            GreenScoreModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                        \n                            UserAppModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\nimport { PoiModule } from './poi/poi.module';\nimport { CompanyModule } from './company/company.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role/roleEntity';\nimport { User } from './user/userEntity';\nimport { Company } from './company/companyEntity';\nimport { TypeModule } from './type/type.module';\nimport { TagsModule } from './tags/tags.module';\nimport { Type } from './type/typeEntity';\nimport { Tag } from './tags/tagEntity';\nimport { Poi } from './poi/poiEntity';\nimport { JoinTagPoiModule } from './join-tag-poi/join-tag-poi.module';\nimport { UserAppModule } from './user-app/user-app.module';\nimport { JoinTagPoiEntity } from './join-tag-poi/joinTagPoiEntity';\nimport { GreenScoreModule } from './green-score/green-score.module';\nimport { TypeGreenScoreModule } from './type-green-score/type-green-score.module';\nimport { PercentTypeGreenScoreAndPoiModule } from './percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScore } from './type-green-score/typeGreenScoreEntity';\nimport { PercentTypeGreenScoreAndPoi } from './percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { StatsModule } from './stats/stats.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST || 'localhost',\n      port: 3306,\n      username: process.env.DB_USER || 'admin',\n      password: process.env.DB_PASSWORD || 'root',\n      database: process.env.DB_NAME || 'madu',\n      entities: [\n        Role,\n        User,\n        Company,\n        Type,\n        Tag,\n        Poi,\n        JoinTagPoiEntity,\n        TypeGreenScore,\n        PercentTypeGreenScoreAndPoi,\n      ],\n      synchronize: true,\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    PoiModule,\n    CompanyModule,\n    TypeModule,\n    TagsModule,\n    JoinTagPoiModule,\n    UserAppModule,\n    GreenScoreModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n    StatsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Demo service nest\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    demo method nest\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Demo service nest\n */\n@Injectable()\nexport class AppService {\n  /**\n   * demo method nest\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    PassportModule.register({defaultStrategy: 'local'}),\n    RoleModule,\n    JwtModule.register({\n      secret: process.env.JWT_TOKEN || 'Helloo',\n      signOptions: {expiresIn: '3600s'},\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            set userService and jwtService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Method who create en send a jwt\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Method who check if the login password is correct and return the result without password return null if not\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        || null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { AccessToken } from './access-token';\n\n/**\n * Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * set userService and jwtService\n   * @param userService {UserService}\n   * @param jwtService {JwtService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   *  Method who check if the login password is correct and return the result without password return null if not\n   * @param mail {string}\n   * @param pass {string}\n   * @returns {object} || null\n   */\n  async validateUser(mail: string, pass: string) {\n    const user = await this.userService.getUserByMail(mail);\n    if (user &&  await bcrypt.compare(pass, user.password)) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  /**\n   * Method who create en send a jwt\n   * @param user\n   * @returns {AccessToken}\n   */\n  async login(user): Promise {\n    const payload = { userId: user.id, mail: user.mail };\n    const token = await this.jwtService.signAsync(payload);\n    return new AccessToken(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyEntity.ts\n        \n\n            \n                Description\n            \n            \n                Company entity from the database\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                beginDeal\n                            \n                            \n                                city\n                            \n                            \n                                createDate\n                            \n                            \n                                domainMail\n                            \n                            \n                                endDeal\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                nbWorker\n                            \n                            \n                                postalCode\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:20\n                            \n                        \n\n                \n                    \n                        address of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:100\n                            \n                        \n\n                \n                    \n                        Date when the contract begin\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 40, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:45\n                            \n                        \n\n                \n                    \n                        city of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 75, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:55\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:109\n                            \n                        \n\n                \n                    \n                        Date when the contract end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:12\n                            \n                        \n\n                \n                    \n                        Unique id to a entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:83\n                            \n                        \n\n                \n                    \n                        Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:73\n                            \n                        \n\n                \n                    \n                        Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:29\n                            \n                        \n\n                \n                    \n                        name of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:91\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:35\n                            \n                        \n\n                \n                    \n                        postal code of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:63\n                            \n                        \n\n                \n                    \n                        Type of company entity stock in db (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Company entity from the database\n */\n@Entity()\nexport class Company {\n  /**\n   * Unique id to a entity stock in db\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * address of company entity stock in db\n   */\n  @Column({\n    length: 100,\n  })\n  address: string;\n\n  /**\n   * name of company entity stock in db\n   */\n  @Column({\n    unique: true,\n    length: 50,\n  })\n  name: string;\n\n  /**\n   * postal code of company entity stock in db\n   */\n  @Column()\n  postalCode: string;\n\n  /**\n   * city of company entity stock in db\n   */\n  @Column({\n    length: 40,\n    nullable: true,\n    default: null,\n  })\n  city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com)\n   */\n  @Column({\n    length: 75,\n    nullable: true,\n    default: null,\n  })\n  domainMail: string;\n\n  /**\n   * Type of company entity stock in db (ex: co-working, school etc)\n   */\n  @Column({\n    length: 50,\n  })\n  type: string;\n\n  /**\n   * Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  /**\n   * Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: true,\n  })\n  lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @Column({\n    default: 1,\n  })\n  nbWorker: number;\n\n  /**\n   * Date when the contract begin\n   */\n  @Column({\n    type: 'date',\n    default: '2020-10-10',\n  })\n  beginDeal: string;\n\n  /**\n   * Date when the contract end\n   */\n  @Column({\n     type: 'date',\n    default: '2020-10-10',\n  })\n  endDeal: string;\n\n  @CreateDateColumn()\n  createDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n            \n                Description\n            \n            \n                Controller to manage the companys data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getCompanyOrderByDate\n                            \n                            \n                                    Async\n                                getOneCompany\n                            \n                            \n                                    Async\n                                updateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiUnauthorizedResponse()@ApiBody({type: undefined})@UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:33\n                \n            \n\n\n            \n                \n                    method call method to check and add a new company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        information to add a new company\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Data was added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:93\n                \n            \n\n\n            \n                \n                    This method call method to delete a company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:61\n                \n            \n\n\n            \n                \n                    This method return all company in database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneCompany(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:49\n                \n            \n\n\n            \n                \n                    this method return one company entity with an id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCompany(id: number, companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Put(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:77\n                \n            \n\n\n            \n                \n                    This method update one company data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CompanyDto } from './companyDto';\nimport { CompanyService } from './company.service';\nimport { Company } from './companyEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { ApiBearerAuth, ApiBody, ApiCreatedResponse, ApiNotFoundResponse, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\n\n/**\n * Controller to manage the companys data\n */\n@ApiBearerAuth()\n@ApiTags('company')\n@Controller('company')\n@UseGuards(AuthGuard('jwt'))\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  /**\n   * method call method to check and add a new company\n   * @param {CompanyDto} companyDto information to add a new company\n   * @returns Data was added\n   */\n  @ApiCreatedResponse()\n  @ApiUnauthorizedResponse()\n  @ApiBody({ type: [CompanyDto] })\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addCompany(@Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto);\n  }\n\n  /**\n   * this method return one company entity with an id\n   * @param id {number}\n   * @returns {Company}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneCompany(@Param('id', new ParseIntPipe()) id: number): Promise {\n    return await this.companyService.getOne(id);\n  }\n\n  /**\n   * This method return all company in database\n   * @returns {Company[]}\n   */\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllCompany(): Promise {\n    return await this.companyService.getAllCompany();\n  }\n\n  /**\n   * This method update one company data\n   * @param id\n   * @param companyDto\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Put(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async updateCompany(@Param('id', new ParseIntPipe()) id: number, @Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto, id);\n  }\n\n  /**\n   * This method call method to delete a company from the database\n   * @param idCompany {number}\n   * @returns string\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({  transform: true }))\n  async deleteCompany(@Param('id', new ParseIntPipe()) idCompany: number): Promise {\n    await this.companyService.getOne(idCompany);\n    await this.companyService.deleteCompany(idCompany);\n    return 'delete success';\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getCompanyOrderByDate(): Promise {\n    return await this.companyService.orderByDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyDto.html":{"url":"injectables/CompanyDto.html","title":"injectable - CompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyDto.ts\n        \n\n            \n                Description\n            \n            \n                Object that defines how the data will be sent over the network to add a new Company\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                beginDeal\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                domainMail\n                            \n                            \n                                    Readonly\n                                endDeal\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                nbWorker\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:27\n                            \n                        \n\n                \n                    \n                        Address Of Client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract start date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:74\n                            \n                        \n\n                \n                    \n                        contract start date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:36\n                            \n                        \n\n                \n                    \n                        City of client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'domain mail of client to authorize only employees of this client (ex: @example.com)'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:46\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract end date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:92\n                            \n                        \n\n                \n                    \n                        contract end date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:18\n                            \n                        \n\n                \n                    \n                        Data useless i guess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'latitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'longitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:83\n                            \n                        \n\n                \n                    \n                        Name of client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'number of worker who work in this company. This data is here to know how many users to expect'})@IsOptional()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:114\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postal code of the client'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:55\n                            \n                        \n\n                \n                    \n                        postal code of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of Client', enum: TypeEnum})@IsEnum(TypeEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:65\n                            \n                        \n\n                \n                    \n                        Type of client (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CompanyInterface } from './interface/company.interface';\nimport { IsDate, IsDateString, IsEnum, IsNumber, IsNumberString, IsOptional, IsString } from 'class-validator';\nimport { TypeEnum } from './enum/type.enum';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * Object that defines how the data will be sent over the network to add a new Company\n */\n@Injectable()\nexport class CompanyDto implements CompanyInterface {\n\n  /**\n   * Data useless i guess\n   */\n  @ApiPropertyOptional()\n  @IsOptional()\n  readonly id?: number;\n\n  /**\n   * Address Of Client stock in db\n   */\n  @ApiProperty({\n    description: 'Address Of Client',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of client stock in db\n   */\n  @ApiProperty({\n    description: 'City of client',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com\n   */\n  @ApiProperty({\n    description: 'domain mail of client to authorize only employees of this client (ex: @example.com)',\n  })\n  @IsOptional()\n  @IsString()\n  readonly domainMail: string;\n\n  /**\n   * postal code of the client\n   */\n  @ApiProperty({\n    description: 'postal code of the client',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  /**\n   * Type of client (ex: co-working, school etc)\n   */\n  @ApiProperty({\n    description: 'Type of Client',\n    enum: TypeEnum,\n  })\n  @IsEnum(TypeEnum)\n  readonly type: string;\n\n  /**\n   * contract start date\n   */\n  @ApiProperty({\n    description: 'contract start date',\n  })\n  @IsString()\n  readonly beginDeal: string;\n\n  /**\n   * Name of client\n   */\n  @ApiProperty({\n    description: 'Name of client',\n  })\n  @IsString()\n  readonly name: string;\n\n  /**\n   * contract end date\n   */\n  @ApiProperty({\n    description: 'contract end date',\n  })\n  @IsString()\n  readonly endDeal: string;\n\n  @ApiProperty({\n    description: 'longitude of company',\n  })\n  @IsString()\n  readonly long: string;\n\n  @ApiProperty({\n    description: 'latitude of company',\n  })\n  @IsString()\n  readonly lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @ApiPropertyOptional({\n    description: 'number of worker who work in this company. This data is here to know how many users to expect',\n  })\n  @IsOptional()\n  @IsNumber()\n  readonly nbWorker: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyInterface.html":{"url":"interfaces/CompanyInterface.html","title":"interface - CompanyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompanyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/interface/company.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        beginDeal\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        domainMail\n                                \n                                \n                                        endDeal\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nbWorker\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beginDeal\n                                    \n                                \n                                \n                                    \n                                        beginDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainMail\n                                    \n                                \n                                \n                                    \n                                        domainMail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDeal\n                                    \n                                \n                                \n                                    \n                                        endDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbWorker\n                                    \n                                \n                                \n                                    \n                                        nbWorker:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyInterface {\n  readonly address: string;\n  readonly name: string;\n  readonly postalCode: string;\n  readonly city: string;\n  readonly domainMail?: string;\n  readonly type: string;\n  readonly nbWorker?: number;\n  readonly beginDeal: string;\n  readonly endDeal: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService \n\nCompanyService \n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Company]),\n  ],\n  providers: [CompanyService],\n  controllers: [CompanyController],\n  exports: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n            \n                Description\n            \n            \n                This class is the service to entity company\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                countCompany\n                            \n                            \n                                    Async\n                                countNbType\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:10\n                            \n                        \n\n                \n                    \n                            set the company repository\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto, id: null)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:26\n                \n            \n\n\n            \n                \n                    This method use to add or update a company in database\nif the id is not null is for update else is for add\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        | null}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countNbType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countNbType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:59\n                \n            \n\n\n            \n                \n                    This method delete one company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the delete data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:50\n                \n            \n\n\n            \n                \n                    This method returns all company from database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:39\n                \n            \n\n\n            \n                \n                    this method return one company from database and send an exception when nothing has found\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * This class is the service to entity company\n */\n@Injectable()\nexport class CompanyService {\n  /**\n   * set the company repository\n   * @param companyRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Company)\n    private readonly companyRepository: Repository,\n  ) {}\n\n  /**\n   * This method use to add or update a company in database\n   * if the id is not null is for update else is for add\n   * @param companyDto {CompanyDto}\n   * @param id {number} | null}\n   */\n  async addCompany(companyDto, id = null) {\n    const companyData = companyDto;\n    if (id) {\n      companyData.id = id;\n    }\n    return await this.companyRepository.save(companyData);\n  }\n\n  /**\n   * this method return one company from database and send an exception when nothing has found\n   * @param idCompany {number}\n   * @returns Company\n   */\n  async getOne(idCompany: number): Promise {\n    return await this.companyRepository.findOneOrFail(idCompany)\n      .catch(() => {\n        throw new NotFoundException(`Company with id ${idCompany} not found`);\n      });\n  }\n\n  /**\n   * This method returns all company from database\n   * @returns Company[]\n   */\n  async getAllCompany(): Promise {\n    return await this.companyRepository.find();\n  }\n\n  /**\n   * This method delete one company from the database\n   * @param idCompany {number}\n   * @returns the delete data\n   */\n  async deleteCompany(idCompany: number) {\n    return await this.companyRepository.delete(idCompany);\n  }\n\n  async countCompany(): Promise {\n    return await this.companyRepository.count();\n  }\n\n  async countNbType(type: string) {\n    return await this.companyRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.companyRepository.find({\n      order: {\n        createDate: 'ASC',\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityTypeInterceptor.html":{"url":"injectables/EntityTypeInterceptor.html","title":"injectable - EntityTypeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntityTypeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/entity-type.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/entity-type.interceptor.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport hexToRgba = require('hex-to-rgba');\nimport { exaToRgbaObject, filterInt } from '../utils/function.utils';\n\n@Injectable()\nexport class EntityTypeInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n    return next.handle().pipe(map(data => {\n      data = data.map((d) => {\n        d.isPoi = typeof d.domainMail === 'undefined' ? 1 : 0;\n        if (d.isPoi) {\n          d.tags =  d.tags.map((tag) => {\n            // const hexaToRgba = hexToRgba(tag.colorTag);\n            // const getValueRba = hexaToRgba.split('(')[1].split(',').filter((elem) => typeof filterInt(elem) === 'number');\n            // tag.r = filterInt(getValueRba[0].trim());\n            // tag.g = filterInt(getValueRba[1].trim());\n            // tag.b = filterInt(getValueRba[2].trim());\n            // tag.a = filterInt(getValueRba[3].replace(')', '').trim());\n            exaToRgbaObject(tag.colorTag, tag);\n            return tag;\n          });\n        }\n        return d;\n      });\n      return data;\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GreenScoreController.html":{"url":"controllers/GreenScoreController.html","title":"controller - GreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                green-score\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('green-score')\nexport class GreenScoreController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GreenScoreModule.html":{"url":"modules/GreenScoreModule.html","title":"module - GreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    GreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/green-score/green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GreenScoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GreenScoreService } from './green-score.service';\nimport { GreenScoreController } from './green-score.controller';\n\n@Module({\n  providers: [GreenScoreService],\n  controllers: [GreenScoreController]\n})\nexport class GreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GreenScoreService.html":{"url":"injectables/GreenScoreService.html","title":"injectable - GreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GreenScoreService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinTagPoiEntity.html":{"url":"classes/JoinTagPoiEntity.html","title":"class - JoinTagPoiEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinTagPoiEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/joinTagPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tag\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'SET NULL', nullable: true})@JoinColumn({name: 'tagId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Tag } from '../tags/tagEntity';\nimport { Poi } from '../poi/poiEntity';\n\n@Entity()\nexport class JoinTagPoiEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => Tag, (tag) => tag.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'SET NULL',\n    nullable: true,\n  })\n  @JoinColumn({\n    name: 'tagId',\n  })\n  tag: Tag;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinTagPoiModule.html":{"url":"modules/JoinTagPoiModule.html","title":"module - JoinTagPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinTagPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinTagPoiService } from './join-tag-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinTagPoiEntity]),\n  ],\n  providers: [JoinTagPoiService],\n  exports: [JoinTagPoiService],\n})\nexport class JoinTagPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinTagPoiService.html":{"url":"injectables/JoinTagPoiService.html","title":"injectable - JoinTagPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinTagPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinTagPoi\n                            \n                            \n                                    Async\n                                countTags\n                            \n                            \n                                    Async\n                                getAllCompanyTag\n                            \n                            \n                                    Async\n                                getAllPoiAndTag\n                            \n                            \n                                    Async\n                                getTagsCompany\n                            \n                            \n                                    Async\n                                serializeTagsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-tag-poi/join-tag-poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinTagPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToAdd\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tagToAdd\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countTags(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompanyTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompanyTag(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoiAndTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoiAndTag()\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsCompany(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serializeTagsData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeTagsData(tags: JoinTagPoiEntity[])\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                            JoinTagPoiEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Injectable()\nexport class JoinTagPoiService {\n  /**\n   *\n   * @param joinTagPoiRepository\n   */\n  constructor(\n    @InjectRepository(JoinTagPoiEntity)\n    private readonly joinTagPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param poiToAdd\n   * @param tagToAdd\n   */\n  async addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag) {\n    const joinTagPoi = {\n      poi: poiToAdd,\n      tag: tagToAdd,\n    };\n    return await this.joinTagPoiRepository.save(joinTagPoi);\n  }\n\n  /**\n   *\n   */\n  async getAllPoiAndTag(): Promise {\n    return await this.joinTagPoiRepository.find({\n      relations: ['poi', 'tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tags\n   */\n  async serializeTagsData(tags: JoinTagPoiEntity[]) {\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getTagsCompany(poiToFind: Poi) {\n    return await this.joinTagPoiRepository.createQueryBuilder('g')\n      .select()\n      .innerJoinAndSelect('tag', 'tag.id = :idTag')\n      .where('idPoi = :idPoi', { idPoi: poiToFind.id })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getAllCompanyTag(poiToFind: Poi): Promise {\n    return await this.joinTagPoiRepository.find({\n      where: {\n        poi: poiToFind,\n      },\n      relations: ['tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tagId\n   */\n  async countTags(tag: Tag): Promise {\n    return await this.joinTagPoiRepository.count({\n      where: {\n        tag,\n      },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when the client send request with a jwt in request header\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            set the option for jwt and set the jwt secret key,\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:32\n                \n            \n\n\n            \n                \n                    Check the validity of data contains in jwt and return  and set in req.user user info without password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '../user/user.service';\nimport { RoleService } from '../role/role.service';\n\n/**\n * Class use when the client send request with a jwt in request header\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set the option for jwt and set the jwt secret key,\n   * @param userService {UserService}\n   * @param roleService {RoleService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly roleService: RoleService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: process.env.JWT_TOKEN || 'helloo',\n    });\n  }\n\n  /**\n   * Check the validity of data contains in jwt and return  and set in req.user user info without password\n   * @param payload\n   */\n  async validate(payload) {\n    if (!payload.userId) {\n      throw new UnauthorizedException();\n    }\n    const {password, ...result} =  await this.userService.getUser(payload.userId);\n    // tslint:disable-next-line:no-console\n    const roles = await this.roleService.getInfRole(result.role.id);\n   // return result;\n    return {\n      user: result,\n      roles: await this.roleService.getOnlyRole(roles),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when client try to connect to their account\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            set authService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:24\n                \n            \n\n\n            \n                \n                    check if user exist and return them else send an exception\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ImATeapotException, Injectable, UnauthorizedException} from '@nestjs/common';\nimport {PassportStrategy} from '@nestjs/passport';\nimport {AuthService} from './auth.service';\nimport {Strategy} from 'passport-local';\n\n/**\n * Class use when client try to connect to their account\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set authService\n   * @param authService {AuthService}\n   */\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  /**\n   * check if user exist and return them else send an exception\n   * @param mail {string}\n   * @param password {string}\n   */\n  async validate(mail: string, password: string) {\n    const user = await this.authService.validateUser(mail, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loginDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsEmail()\n  readonly username: string;\n\n  @ApiProperty()\n  @IsString()\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentAndIdTag.html":{"url":"classes/PercentAndIdTag.html","title":"class - PercentAndIdTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentAndIdTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/percentAndIdTag.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idType\n                            \n                            \n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PercentAndIdTag {\n  idType: number;\n  percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoi.html":{"url":"classes/PercentTypeGreenScoreAndPoi.html","title":"class - PercentTypeGreenScoreAndPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                            \n                                    Readonly\n                                poi\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'idPoi'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeGreenScore\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'idTypeGreenScore'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { Poi } from '../poi/poiEntity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class PercentTypeGreenScoreAndPoi {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id?: number;\n\n  @ApiProperty()\n  @Column()\n  readonly percent: number;\n\n  @ApiProperty()\n  @ManyToOne(type => TypeGreenScore, (typeGreenScore) => typeGreenScore.id, {\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'idTypeGreenScore',\n  })\n  readonly typeGreenScore: TypeGreenScore;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'idPoi',\n  })\n  readonly poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PercentTypeGreenScoreAndPoiController.html":{"url":"controllers/PercentTypeGreenScoreAndPoiController.html","title":"controller - PercentTypeGreenScoreAndPoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PercentTypeGreenScoreAndPoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                percent-type-green-score-and-poi\n            \n\n            \n                Description\n            \n            \n                Percent green score controller // todo doc\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PercentTypeGreenScoreAndPoiTransformationPipe } from './Pipe/percent-type-green-score-and-poi.transformation.pipe';\nimport { Role } from '../role/roleEntity';\n\n/**\n * Percent green score controller // todo doc\n */\n@Controller('percent-type-green-score-and-poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PercentTypeGreenScoreAndPoiController {\n  //\n  //\n  // /**\n  //  * todo doc\n  //  * @param percentTypeGreenScoreAndPoiService\n  //  */\n  // constructor(readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService) {}\n  //\n  // /**\n  //  *  todo doc\n  //  * @param percentTypeGreenScoreAndPoiDto\n  //  */\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post()\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @UsePipes(PercentTypeGreenScoreAndPoiTransformationPipe)\n  // async addNewPercentTypeGCAndPoi(@Body() percentTypeGreenScoreAndPoiDto: PercentTypeGreenScoreAndPoiDto) {\n  //   return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGreenScoreAndPoiService(percentTypeGreenScoreAndPoiDto);\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post('and-type')\n  // async addManyPercentTypeDcAndNewType(@Body() dataPercentAndTypeGc) {\n  //   return 'many';\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Get()\n  // async getAllPercentTypeAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getAllPercentTypeGreenScoreAndPoi();\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Get('one/:id')\n  // async getOnePercentTypeAndPoi(@Param('id', new ParseIntPipe()) idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getOnePercentTypeGreenScoreAndPoi(idPercent);\n  // }\n  //\n  // /*\n  // @Get('percent/:id')\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // async getPercentOfPoi(@Param('id', new ParseIntPipe()) idPoi: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.findByPoi(idPoi);\n  // }\n  // */\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Delete(':id')\n  // async deletePercentGcAndPoi(@Param('id', new ParseIntPipe()) idPercent: number) {\n  //   return await this.percentTypeGreenScoreAndPoiService.deletePercentTypeGreenScore(idPercent);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoiDto.html":{"url":"classes/PercentTypeGreenScoreAndPoiDto.html","title":"class - PercentTypeGreenScoreAndPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PercentTypeGreenScoreAndPoiInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                idPoi\n                            \n                            \n                                    Readonly\n                                idTypeGreenScore\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idPoi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idTypeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PercentTypeGreenScoreAndPoiInterface } from './interfaces/percent-type-green-score-and-poi.interface';\nimport { IsNumber } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PercentTypeGreenScoreAndPoiDto implements PercentTypeGreenScoreAndPoiInterface{\n  @ApiProperty()\n  @IsNumber()\n  readonly idPoi: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly idTypeGreenScore: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{"url":"interfaces/PercentTypeGreenScoreAndPoiInterface.html","title":"interface - PercentTypeGreenScoreAndPoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentTypeGreenScoreAndPoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idPoi\n                                \n                                \n                                        idTypeGreenScore\n                                \n                                \n                                        percent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPoi\n                                    \n                                \n                                \n                                    \n                                        idPoi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTypeGreenScore\n                                    \n                                \n                                \n                                    \n                                        idTypeGreenScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                    \n                                \n                                \n                                    \n                                        percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PercentTypeGreenScoreAndPoiInterface {\n  readonly percent: number;\n  readonly idTypeGreenScore: number;\n  readonly idPoi: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PercentTypeGreenScoreAndPoiModule.html":{"url":"modules/PercentTypeGreenScoreAndPoiModule.html","title":"module - PercentTypeGreenScoreAndPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PercentTypeGreenScoreAndPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiController } from './percent-type-green-score-and-poi.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PoiModule } from '../poi/poi.module';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([PercentTypeGreenScoreAndPoi]),\n  ],\n  providers: [PercentTypeGreenScoreAndPoiService],\n  controllers: [PercentTypeGreenScoreAndPoiController],\n  exports: [PercentTypeGreenScoreAndPoiService],\n})\nexport class PercentTypeGreenScoreAndPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiService.html":{"url":"injectables/PercentTypeGreenScoreAndPoiService.html","title":"injectable - PercentTypeGreenScoreAndPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPercentTypeGcAndPoi\n                            \n                            \n                                    Async\n                                countRangGreenScore\n                            \n                            \n                                    Async\n                                getByIdTypGcAndPoi\n                            \n                            \n                                    Async\n                                getGreenScorePassMark\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(percentTypeGreenScoreAndPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentTypeGreenScoreAndPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPercentTypeGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentTypeGcAndPoi\n                                    \n                                                PercentTypeGreenScoreAndPoi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countRangGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countRangGreenScore(rangeMax: number, rangeMin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIdTypGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeGreenScore\n                                    \n                                                TypeGreenScore\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGreenScorePassMark\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScorePassMark(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { Repository } from 'typeorm';\nimport { PoiService } from '../poi/poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { Poi } from '../poi/poiEntity';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\n\n/**\n *\n */\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiService {\n  /**\n   *\n   * @param percentTypeGreenScoreAndPoiRepository\n   */\n  constructor(\n    @InjectRepository(PercentTypeGreenScoreAndPoi)\n    private readonly percentTypeGreenScoreAndPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param percentTypeGcAndPoi\n   */\n  async addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi) {\n    return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGcAndPoi);\n  }\n  //\n  // async addPercentTypeGreenScoreAndPoiService(\n  //   percentTypeGreenScoreAndPoiServiceDto: PercentTypeGreenScoreAndPoiDto) {\n  //   const typeGreenScoreFind = await this.typeGreenScoreService.getType(percentTypeGreenScoreAndPoiServiceDto.idTypeGreenScore);\n  //   const poiFind = await this.poiService.getPoi(percentTypeGreenScoreAndPoiServiceDto.idPoi);\n  //   const percentTypeGreenScoreAndPoi: PercentTypeGreenScoreAndPoi = {\n  //     percent: percentTypeGreenScoreAndPoiServiceDto.percent,\n  //     poi: poiFind,\n  //     typeGreenScore: typeGreenScoreFind,\n  //   };\n  //   return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGreenScoreAndPoi);\n  // }\n  //\n  // async getAllPercentTypeGreenScoreAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     relations: ['poi', 'typeGreenScore'],\n  //   });\n  // }\n  //\n  // async findByPoi(idPoi: number): Promise {\n  //   const poi = await this.poiService.getPoi(idPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     where: {\n  //       poi,\n  //     },\n  //   });\n  // }\n  //\n  // async getOnePercentTypeGreenScoreAndPoi(idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.findOneOrFail(idPercent)\n  //     .catch(() => {\n  //       throw new NotFoundException(`PercentTypeGreenScoreAndPoi with id ${idPercent} Not Found`);\n  //     });\n  // }\n  //\n  // async deletePercentTypeGreenScore(idPercentGcAndPoi: number) {\n  //   const percentGc = await this.getOnePercentTypeGreenScoreAndPoi(idPercentGcAndPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.delete(percentGc);\n  // }\n  //\n\n  /**\n   *\n   * @param poi\n   */\n  async getGreenScorePassMark(poi: Poi): Promise {\n    const allPercent = await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n      },\n    });\n    if (allPercent.length === 0) {\n      return 0;\n    }\n    let total: number = 0;\n    allPercent.forEach((percent) => {\n      total +=  percent.percent;\n    });\n    return total / allPercent.length;\n  }\n\n  /**\n   *\n   * @param poi\n   * @param typeGreenScore\n   */\n  async getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore) {\n    return await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n        typeGreenScore,\n      },\n    });\n  }\n\n  async countRangGreenScore(rangeMax: number, rangeMin: number) {\n    console.log(rangeMax, rangeMin);\n    return await this.percentTypeGreenScoreAndPoiRepository.createQueryBuilder()\n      .where('percent = :rangeM', {rangeM: rangeMin})\n      .getCount();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{"url":"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html","title":"injectable - PercentTypeGreenScoreAndPoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiDto } from '../PercentTypeGreenScoreAndPoiDto';\nimport { filterInt } from '../../utils/function.utils';\n\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiTransformationPipe implements PipeTransform> {\n  /**\n   *\n   * @param value\n   * @param metadata\n   */\n  transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    newValue.idPoi = filterInt(value.idPoi);\n    newValue.idTypeGreenScore = filterInt(value.idTypeGreenScore);\n    newValue.percent = filterInt(value.percent);\n    return newValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Poi.html":{"url":"classes/Poi.html","title":"class - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                dateCreate\n                            \n                            \n                                description\n                            \n                            \n                                greenScore\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                logo\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                postalCode\n                            \n                            \n                                price\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 30, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Poi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 30,\n    unique: true,\n  })\n  name: string;\n\n  @Column({\n    length: 50,\n  })\n  price: string;\n\n  @Column({\n    type: 'longtext',\n  })\n  description: string;\n\n  @Column({\n    length: 150,\n  })\n  address: string;\n\n  @Column({\n    length: 50,\n  })\n  city: string;\n\n  @Column({\n    length: 6,\n  })\n  postalCode: string;\n\n  @Column({\n    length: 50,\n    nullable: true,\n    default: null,\n  })\n  type: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  lat: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  greenScore: number;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  logo: string;\n\n  @CreateDateColumn()\n  dateCreate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PoiAndTags.html":{"url":"classes/PoiAndTags.html","title":"class - PoiAndTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PoiAndTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiAndTags.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                poi\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poi: Poi, tags: JoinTagPoiEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poi\n                                                  \n                                                        \n                                                                        Poi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    JoinTagPoiEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JoinTagPoiEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Poi } from './poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from '../join-tag-poi/joinTagPoiEntity';\n\nexport class PoiAndTags {\n  poi: Poi;\n  tags: JoinTagPoiEntity[];\n\n  /**\n   *\n   * @param poi {Poi}\n   * @param tags {JoinTagPoiEntity[]}\n   */\n  constructor(poi: Poi, tags: JoinTagPoiEntity[]) {\n    this.poi = poi;\n    this.tags = tags;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PoiController.html":{"url":"controllers/PoiController.html","title":"controller - PoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                poi\n            \n\n            \n                Description\n            \n            \n                point of interest controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getCompanyAndTags\n                            \n                            \n                                    Async\n                                getPoiByName\n                            \n                            \n                                    Async\n                                getPoiOrderByDate\n                            \n                            \n                                    Async\n                                updatePoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiForbiddenResponse()@Post()@UsePipes(new ValidationPipe())@UsePipes(PoiTransformationPipe)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:66\n                \n            \n\n\n            \n                \n                    Return all poi in database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyAndTags(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get('one/:id')@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiByName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/name')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePoi(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Put(':id')@UseGuards(RoleGuard)@UsePipes(new ValidationPipe())@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PoiDto } from './poiDto';\nimport { PoiTransformationPipe } from './pipe/poi.transformation.pipe';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { Poi } from './poiEntity';\nimport { ApiBearerAuth, ApiCreatedResponse, ApiForbiddenResponse, ApiGoneResponse, ApiOkResponse, ApiTags } from '@nestjs/swagger';\n// import { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n/**\n * point of interest controller\n */\n@ApiTags('poi')\n@ApiBearerAuth()\n@Controller('poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PoiController {\n  constructor(\n    private readonly poiService: PoiService,\n    private readonly joinTagPoiService: JoinTagPoiService,\n    // private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  /**\n   *\n   * @param poiDto\n   */\n  @ApiCreatedResponse()\n  @ApiForbiddenResponse()\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UsePipes(PoiTransformationPipe)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addPoi(@Body() poiDto: PoiDto) {\n    return await this.poiService.addPoi(poiDto);\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getCompanyAndTags(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return await this.poiService.getPoiAndTags(idPoi);\n  }\n\n  /**\n   * Return all poi in database\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllPoi() {\n    return await this.poiService.getAllPoi();\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Put(':id')\n  @UseGuards(RoleGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Roles('admin')\n  async updatePoi(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return 'updatePoi';\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/name')\n  async getPoiByName(): Promise {\n    return await this.poiService.orderByName();\n  }\n\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getPoiOrderByDate(): Promise {\n    return await this.poiService.orderByDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiDto.html":{"url":"injectables/PoiDto.html","title":"injectable - PoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiDto.ts\n        \n\n            \n                Description\n            \n            \n                Data attempt to add new poi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                greenScore\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                tags\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:22\n                            \n                        \n\n                \n                    \n                        Address of Poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:31\n                            \n                        \n\n                \n                    \n                        City of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'short description of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:41\n                            \n                        \n\n                \n                    \n                        Description of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Latitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:56\n                            \n                        \n\n                \n                    \n                        Latitude of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Longitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Name of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postalCode of the Poi'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Price range of the point of interest', enum: PriceEnum})@IsEnum(PriceEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id tags'})@IsOptional()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of poi ex (restaurant)'})@IsEnum(TypePoiEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PercentAndIdTag[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id type Green score'})@ValidateNested()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:102\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiInterface } from './interfaces/poi.interface';\nimport { IsArray, IsEnum, IsNumber, IsNumberString, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { PriceEnum } from './enum/price.enum';\nimport { ApiProperty, ApiPropertyOptional, getSchemaPath } from '@nestjs/swagger';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { TypePoiEnum } from './enum/typePoiEnum';\n\n/**\n * Data attempt to add new poi\n */\n@Injectable()\nexport class PoiDto implements PoiInterface {\n\n  /**\n   * Address of Poi\n   */\n  @ApiProperty({\n    description: 'Address Of Poi',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of poi\n   */\n  @ApiProperty({\n    description: 'City of the Poi',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * Description of poi\n   */\n  @ApiPropertyOptional({\n    description: 'short description of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly description: string;\n\n  @ApiPropertyOptional()\n  @IsNumber()\n  @IsOptional()\n  readonly greenScore: string;\n\n  /**\n   * Latitude of poi\n   */\n  @ApiPropertyOptional({\n    description: 'Latitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly lat: string;\n\n  @ApiPropertyOptional({\n    description: 'Longitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly long: string;\n\n  @ApiPropertyOptional({\n    description: 'Name of the Poi',\n  })\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({\n    description: 'postalCode of the Poi',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id tags',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly tags: number[];\n\n  /*\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id Poi type',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly type: number[];\n  */\n\n  @ApiPropertyOptional({\n    type: [PercentAndIdTag],\n    description: 'Array of id type Green score',\n  })\n  // @IsArray()\n  @ValidateNested()\n  @IsOptional()\n  readonly typeGreenScore: PercentAndIdTag[];\n\n  @ApiProperty({\n    description: 'Type of poi ex (restaurant)',\n  })\n  @IsEnum(TypePoiEnum)\n  readonly type: string;\n\n  @ApiProperty({\n    description: 'Price range of the point of interest',\n    enum: PriceEnum,\n  })\n  @IsEnum(PriceEnum)\n  readonly price: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiInterface.html":{"url":"interfaces/PoiInterface.html","title":"interface - PoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/interfaces/poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        city\n                                \n                                \n                                        description\n                                \n                                \n                                        greenScore\n                                \n                                \n                                        lat\n                                \n                                \n                                            Optional\n                                        logo\n                                \n                                \n                                        long\n                                \n                                \n                                        name\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        price\n                                \n                                \n                                        type\n                                \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenScore\n                                    \n                                \n                                \n                                    \n                                        greenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        long\n                                    \n                                \n                                \n                                    \n                                        long:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:     PercentAndIdTag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PercentAndIdTag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PercentAndIdTag } from '../percentAndIdTag';\n\nexport interface PoiInterface {\n  readonly name: string;\n  readonly price: string;\n  readonly description: string;\n  readonly address: string;\n  readonly city: string;\n  readonly postalCode: string;\n  readonly long: string;\n  readonly lat: string;\n  readonly greenScore: string;\n  readonly logo?: string;\n  readonly type: string;\n  readonly typeGreenScore: PercentAndIdTag[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PoiModule.html":{"url":"modules/PoiModule.html","title":"module - PoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_imports\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/poi/poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PoiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Poi } from './poiEntity';\nimport { PoiController } from './poi.controller';\nimport { TagsModule } from '../tags/tags.module';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { TypeModule } from '../type/type.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Poi]),\n    TagsModule,\n    JoinTagPoiModule,\n    TypeModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n  ],\n  providers: [PoiService],\n  controllers: [PoiController],\n  exports: [PoiService],\n})\nexport class PoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiService.html":{"url":"injectables/PoiService.html","title":"injectable - PoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                countPoi\n                            \n                            \n                                    Async\n                                countType\n                            \n                            \n                                    Async\n                                formatToPercentTGCAndPoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getPoi\n                            \n                            \n                                    Async\n                                getPoiAndTags\n                            \n                            \n                                    Async\n                                getTypePoi\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                            \n                                    Async\n                                orderByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poiRepository: Repository, connection: Connection, tagsService: TagsService, typeService: TypeService, typeGreenScoreService: TypeGreenScoreService, joinTagPoiService: JoinTagPoiService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/poi/poi.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poiRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeGreenScoreService\n                                                  \n                                                        \n                                                                        TypeGreenScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            formatToPercentTGCAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[])\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeAndPercent\n                                    \n                                            PercentAndIdTag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiAndTags(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypePoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByName()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Connection, Repository } from 'typeorm';\nimport { Poi } from './poiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TagsService } from '../tags/tags.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { TypeService } from '../type/type.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { PercentTypeGreenScoreAndPoi } from '../percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { exaToRgbaObject, getEnumKey } from '../utils/function.utils';\nimport { TypePoiEnum } from './enum/typePoiEnum';\n\n@Injectable()\nexport class PoiService {\n  /**\n   *\n   * @param poiRepository\n   * @param connection\n   * @param tagsService\n   * @param typeService\n   * @param typeGreenScoreService\n   * @param joinTagPoiService\n   * @param percentTypeGreenScoreAndPoiService\n   */\n  constructor(\n    @InjectRepository(Poi)\n    private readonly poiRepository: Repository,\n    private connection: Connection,\n    private tagsService: TagsService,\n    private typeService: TypeService,\n    private typeGreenScoreService: TypeGreenScoreService,\n    private joinTagPoiService: JoinTagPoiService,\n    private percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  async formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[]): Promise {\n      const percentPoiAnTypeGcPromise =  typeAndPercent.map(async (typePercent) => {\n        return {\n          poi,\n          percent: typePercent.percent,\n          typeGreenScore: await this.typeGreenScoreService.getType(typePercent.idType),\n        };\n      });\n      return await Promise.all(percentPoiAnTypeGcPromise);\n  }\n\n  // Todo refacto\n  async addPoi(poiDto) {\n    const tags = await this.tagsService.getTags(poiDto.tags);\n    if (poiDto.typeGreenScore) {\n      const typeToCheck = await this.typeGreenScoreService.getByIds(\n        poiDto.typeGreenScore.map((type) => {\n          return type.idType;\n        }));\n      if (typeToCheck.length  {\n      return await this.joinTagPoiService.addJoinTagPoi(poiAdded, tag);\n    });\n    if (poiDto.typeGreenScore) {\n      const percentTypeGreenScoreAndPoiToAdd = await this.formatToPercentTGCAndPoi(poiAdded, poiDto.typeGreenScore);\n      const percentTypeGcAndPoiAddedPromise = percentTypeGreenScoreAndPoiToAdd.map(async (percentGcAndDto) => {\n        return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGcAndPoi(percentGcAndDto);\n      });\n      await Promise.all(percentTypeGcAndPoiAddedPromise);\n    }\n    await Promise.all(tagAddedPromise);\n    return poiAdded;\n  }\n\n  async getPoi(idPoi: number): Promise {\n    return await this.poiRepository.findOneOrFail(idPoi)\n      .catch(() => {\n        throw new NotFoundException(`Poi with id ${idPoi} Not Found`);\n      });\n  }\n\n  async getPoiAndTags(idPoi: number) {\n    const poi = await this.getPoi(idPoi);\n    const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n    poi.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n    const serializeTags = await this.joinTagPoiService.serializeTagsData(tags);\n    serializeTags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return {\n      poi,\n      tags:  serializeTags, // serializeTagsWithRgb,\n    };\n  }\n\n  async getAllPoi() {\n    const allPoi = await this.poiRepository.find();\n    const allPoiWithTagsAndTypesPromise = allPoi.map(async (poi) =>  {\n      const poiWithType: any = poi;\n      const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n      poiWithType.tags = await this.joinTagPoiService.serializeTagsData(tags);\n      poiWithType.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n      return poiWithType;\n    });\n    return  await Promise.all(allPoiWithTagsAndTypesPromise);\n  }\n\n  async countPoi() {\n    return await this.poiRepository.count();\n  }\n\n  async orderByName(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        name: 'ASC',\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        dateCreate: 'ASC',\n      },\n    });\n  }\n\n  async countType(type: string): Promise {\n    return await this.poiRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async getTypePoi() {\n    return await getEnumKey(TypePoiEnum);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiTransformationPipe.html":{"url":"injectables/PoiTransformationPipe.html","title":"injectable - PoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/pipe/poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/pipe/poi.transformation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { filterInt } from '../../utils/function.utils';\nimport { PoiDto } from '../poiDto';\n\n@Injectable()\nexport class PoiTransformationPipe implements PipeTransform {\n\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    if (newValue.tags) {\n      newValue.tags = value.tags.map((idTags) => {\n        return filterInt(idTags);\n      });\n    }\n    if (newValue.typeGreenScore && Array.isArray(newValue.typeGreenScore)) {\n      newValue.typeGreenScore = value.typeGreenScore.map((percentAndTypeGc) => {\n         percentAndTypeGc.idType = filterInt(percentAndTypeGc.idType);\n         percentAndTypeGc.percent = filterInt(percentAndTypeGc.percent);\n         if (isNaN(percentAndTypeGc.idType) || isNaN(percentAndTypeGc.percent)) {\n           throw new BadRequestException('idGreen score or percent must be a number');\n         }\n         return percentAndTypeGc;\n      });\n    }\n    return newValue;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/roleEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 15,\n  })\n  role: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {CanActivate, ExecutionContext, Injectable} from '@nestjs/common';\nimport {Reflector} from '@nestjs/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Role]),\n  ],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n            \n                Description\n            \n            \n                Role service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInfRole\n                            \n                            \n                                    Async\n                                getOneOrFailByRole\n                            \n                            \n                                    Async\n                                getOnlyRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRoleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRoleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfRole(idRole: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idRole\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneOrFailByRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneOrFailByRole(roleType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOnlyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnlyRole(roles)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * Role service\n */\n@Injectable()\nexport class RoleService {\n\n  /**\n   *\n   * @param roleRoleRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRoleRepository: Repository,\n  ) {}\n\n  /**\n   * @param roleType\n   */\n  async getOneOrFailByRole(roleType: string) {\n    return await this.roleRoleRepository.findOneOrFail({\n      where: {\n        role: roleType,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`Role ${roleType} not found`);\n    });\n  }\n\n  /**\n   *\n   * @param idRole {number}\n   */\n  async getInfRole(idRole: number): Promise {\n    return await this.roleRoleRepository.createQueryBuilder()\n      .select('role')\n      .where(`id = :id`, { id: idRole })\n      .orWhere('id > :idSup', { idSup: idRole  })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param roles\n   */\n  async getOnlyRole(roles): Promise {\n    return roles.map((role) => {\n      return role.role;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('stats')\n@Controller('stats')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Get()\n  async getStat() {\n    return await this.statsService.getStat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_imports\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { PoiModule } from '../poi/poi.module';\nimport { CompanyModule } from '../company/company.module';\nimport { TypeModule } from '../type/type.module';\nimport { TagsModule } from '../tags/tags.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\n\n@Module({\n  imports: [JoinTagPoiModule, PoiModule, CompanyModule, TypeModule, TagsModule, PercentTypeGreenScoreAndPoiModule],\n  providers: [StatsService],\n  controllers: [StatsController],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getGreenScore\n                            \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiService: JoinTagPoiService, poiService: PoiService, companyService: CompanyService, typeService: TypeService, tagsService: TagsService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        poiService\n                                                  \n                                                        \n                                                                        PoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScore()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiService } from '../poi/poi.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { CompanyService } from '../company/company.service';\nimport { TypeService } from '../type/type.service';\nimport { TagsService } from '../tags/tags.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    private readonly joinTagPoiService: JoinTagPoiService,\n    private readonly poiService: PoiService,\n    private readonly companyService: CompanyService,\n    private readonly typeService: TypeService,\n    private readonly tagsService: TagsService,\n    private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  private async getGreenScore(): Promise {\n    const nbGreenScore: number[] = [];\n    // tslint:disable-next-line:no-shadowed-variable\n    for (let range = 100; range >= 50; range -= 10) {\n      nbGreenScore.push(await this.percentTypeGreenScoreAndPoiService.countRangGreenScore(range, range - 10));\n    }\n    return nbGreenScore;\n  }\n\n  async getStat() {\n    const nbPoi = await this.poiService.countPoi();\n    const nbCompany = await this.companyService.countCompany();\n    const types = await this.typeService.getType();\n    await this.getGreenScore();\n    const companyTypePromise = types.map(async (type) => {\n      return {\n          companyType: type,\n          nbType: await this.companyService.countNbType(type),\n        };\n    });\n    const typesPoi = await this.poiService.getTypePoi();\n    const getTypePoiPromise = typesPoi.map(async (typePoi) => {\n      return {\n        typeName: typePoi,\n        nbType: await this.poiService.countType(typePoi),\n      };\n    });\n    return {\n      poi: {\n        nbPoi,\n        types: await Promise.all(getTypePoiPromise),\n      },\n      company: {\n        nbCompany,\n        companyType: await Promise.all(companyTypePromise),\n      },\n      greenScore: await this.getGreenScore(),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorTag\n                            \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: '5EA565'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Tag {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  tag: string;\n\n  @Column({\n    default: '5EA565',\n  })\n  colorTag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto: TagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TagsDto } from './tagsDto';\nimport { TagsService } from './tags.service';\nimport { Tag } from './tagEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('tags')\n@ApiBearerAuth()\n@Controller('tags')\n@UseGuards(AuthGuard('jwt'))\nexport class TagsController {\n  constructor(private readonly tagsService: TagsService) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addTag(@Body() tagDto: TagsDto) {\n    return await this.tagsService.addTag(tagDto);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true}))\n  async deleteTag(@Param('id', new ParseIntPipe()) idTag: number) {\n    await this.tagsService.getOneTag(idTag);\n    return await this.tagsService.deleteTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async getOneTag(@Param('id', new ParseIntPipe()) idTag: number): Promise {\n    return await this.tagsService.getOneTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTag(): Promise {\n    return await this.tagsService.getAllTag();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagsDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TagsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'name of tag (ex: bio, vegan etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagsDto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagsInterface } from './interfaces/tags.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TagsDto implements TagsInterface {\n  @ApiProperty({\n    description: 'name of tag (ex: bio, vegan etc...)',\n  })\n  @IsString()\n  readonly tag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsInterface.html":{"url":"interfaces/TagsInterface.html","title":"interface - TagsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TagsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/interfaces/tags.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TagsInterface {\n  readonly tag: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagsService } from './tags.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { TagsController } from './tags.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Tag]),\n  ],\n  providers: [TagsService],\n  controllers: [TagsController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                            \n                                    Async\n                                getTagsName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTags(idsTags: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTags\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsName()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { Repository } from 'typeorm';\nimport { exaToRgbaObject, generateRandExaDecimalColor } from '../utils/function.utils';\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: Repository,\n  ) {}\n\n  async addTag(tagDto) {\n    tagDto.colorTag = generateRandExaDecimalColor();\n    return await this.tagRepository.save(tagDto);\n  }\n\n  async deleteTag(idTag: number) {\n    return await this.tagRepository.delete(idTag);\n  }\n\n  async getAllTag(): Promise {\n    const tags =  await this.tagRepository.find();\n    tags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return tags;\n  }\n\n  async getOneTag(idTag: number): Promise {\n    return await this.tagRepository.findOneOrFail(idTag)\n      .catch(() => {\n        throw new NotFoundException(`Tag with id ${idTag} not found`);\n      });\n  }\n\n  async getTags(idsTags: number[]) {\n    return await this.tagRepository.findByIds(idsTags);\n  }\n\n  async getTagsName() {\n    const tags = await this.getAllTag();\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Type {\n\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeController.html":{"url":"controllers/TypeController.html","title":"controller - TypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type\n            \n\n            \n                Description\n            \n            \n                type controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                delteType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto: TypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n                                    \n                                                TypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delteType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TypeDto } from './typeDto';\nimport { Type } from './typeEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { type } from 'os';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * type controller\n */\n@ApiBearerAuth()\n@ApiTags('type')\n@Controller('type')\n@UseGuards(AuthGuard('jwt'))\nexport class TypeController {\n  /**\n   *\n   * @param typeService\n   */\n  constructor(private readonly typeService: TypeService) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addType(@Body() typeDto: TypeDto) {\n    return await this.typeService.addType(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneType(@Param('id', new ParseIntPipe()) idType: number): Promise {\n    return await this.typeService.getOneType(idType);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getTypes() {\n    return await this.typeService.getType();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async delteType(@Param('id', new ParseIntPipe()) idType: number) {\n    await this.typeService.getOneType(idType);\n    return await this.typeService.deleteType(idType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeDto.html":{"url":"classes/TypeDto.html","title":"class - TypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of company (ex: Co-Working, PME, etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeDto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeInterface } from './interface/type.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeDto implements TypeInterface {\n\n  @ApiProperty({\n    description: 'Type of company (ex: Co-Working, PME, etc...)',\n  })\n  @IsString()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScore.html":{"url":"classes/TypeGreenScore.html","title":"class - TypeGreenScore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 70})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class TypeGreenScore {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 70,\n  })\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController.html":{"url":"controllers/TypeGreenScoreController.html","title":"controller - TypeGreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController-1.html":{"url":"controllers/TypeGreenScoreController-1.html","title":"controller - TypeGreenScoreController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score-controller\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScoreDto.html":{"url":"classes/TypeGreenScoreDto.html","title":"class - TypeGreenScoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeGreenScoreInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeGreenScoreInterface } from './interfaces/type-green-score.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeGreenScoreDto implements TypeGreenScoreInterface{\n  @ApiProperty()\n  @IsString()\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeGreenScoreInterface.html":{"url":"interfaces/TypeGreenScoreInterface.html","title":"interface - TypeGreenScoreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeGreenScoreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/interfaces/type-green-score.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeGreenScoreInterface {\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeGreenScoreModule.html":{"url":"modules/TypeGreenScoreModule.html","title":"module - TypeGreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeGreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type-green-score/type-green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeGreenScoreController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { TypeGreenScoreController } from './type-green-score.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([TypeGreenScore]),\n  ],\n  providers: [TypeGreenScoreService],\n  controllers: [TypeGreenScoreController],\n  exports: [TypeGreenScoreService],\n})\nexport class TypeGreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeGreenScoreService.html":{"url":"injectables/TypeGreenScoreService.html","title":"injectable - TypeGreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeGreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getByIds\n                            \n                            \n                                    Async\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeGreenScoreRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type-green-score/type-green-score.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeGreenScoreRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGreenScore(typeGreenScoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIds(idTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Repository } from 'typeorm';\nimport { PercentAndIdTag } from '../poi/percentAndIdTag';\n\n@Injectable()\nexport class TypeGreenScoreService {\n  /**\n   *\n   * @param typeGreenScoreRepository\n   */\n  constructor(\n    @InjectRepository(TypeGreenScore)\n    private readonly typeGreenScoreRepository: Repository,\n  ) {}\n\n  /**\n   *\n   *\n   * @param typeGreenScoreDto\n   */\n  async addGreenScore(typeGreenScoreDto) {\n    return await this.typeGreenScoreRepository.save(typeGreenScoreDto);\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeGreenScoreRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getType(idType: number): Promise {\n    return await this.typeGreenScoreRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type Green Score With id ${idType} Not Found`);\n      });\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  async deleteTypeGreenScore(idTypeGreenScore) {\n    const typeGreenScore = await this.getType(idTypeGreenScore);\n    return await this.typeGreenScoreRepository.delete(typeGreenScore);\n  }\n\n  /**\n   *\n   * @param idTypes\n   */\n  async getByIds(idTypes: number[]) {\n    return await this.typeGreenScoreRepository.findByIds(idTypes);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeInterface.html":{"url":"interfaces/TypeInterface.html","title":"interface - TypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/interface/type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeInterface {\n  readonly type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeModule.html":{"url":"modules/TypeModule.html","title":"module - TypeModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\n\nTypeService \n\nTypeService \n\n\n\nTypeModule\n\nTypeModule\n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type/type.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { TypeController } from './type.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Type]),\n  ],\n  providers: [TypeService],\n  controllers: [TypeController],\n  exports: [TypeService],\n})\nexport class TypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeService.html":{"url":"injectables/TypeService.html","title":"injectable - TypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                deleteType\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type/type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes(idsTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { Repository } from 'typeorm';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { getEnumKey } from '../utils/function.utils';\n\n@Injectable()\nexport class TypeService {\n  /**\n   *\n   * @param typeRepository\n   */\n  constructor(\n    @InjectRepository(Type)\n    private readonly typeRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  async addType(typeDto) {\n    return await this.typeRepository.save(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getOneType(idType: number): Promise {\n    return await this.typeRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type with id ${idType} not found`);\n      });\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async deleteType(idType: number) {\n    return await this.typeRepository.delete(idType);\n  }\n\n  /**\n   *\n   * @param idsTypes\n   */\n  async getTypes(idsTypes: number[]): Promise {\n      return await this.typeRepository.findByIds(idsTypes);\n  }\n\n  async getType() {\n    return await getEnumKey(TypeEnum);\n    // const types = TypeEnum;\n    // const stringType: string[] = [];\n    // for (const n in types) {\n    //   if (typeof types[n] === 'string') {\n    //     stringType.push(types[n]);\n    //   }\n    // }\n    // return stringType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'roleId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Role } from '../role/roleEntity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 255,\n    unique: true,\n  })\n  mail: string;\n\n  @Column({\n    length: 50,\n  })\n  firstName: string;\n\n  @Column({\n    length: 50,\n  })\n  lastName: string;\n\n  @Column({\n    length: 200,\n  })\n  password: string;\n\n  @ManyToOne(type => Role, (role) => role.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'roleId',\n  })\n  role: Role;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAppModule.html":{"url":"modules/UserAppModule.html","title":"module - UserAppModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\n\nUserAppService\n\nUserAppService\n\n\n\nUserAppModule\n\nUserAppModule\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-app/user-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserAppService } from './user-app.service';\n\n@Module({\n  providers: [UserAppService]\n})\nexport class UserAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAppService.html":{"url":"injectables/UserAppService.html","title":"injectable - UserAppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-app/user-app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserAppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                User controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n                    method call to add new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUer(idUser: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n                    method to delete a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './userDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * User controller\n */\n@ApiBearerAuth()\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(readonly userService: UserService) {}\n\n  /**\n   * method call to add new user\n   * @param userDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addUser(@Body() userDto: UserDto) {\n    return this.userService.addUser(userDto);\n  }\n\n  /**\n   * method to delete a user\n   * @param idUser\n   */\n  @Delete(':id')\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async deleteUer(@Param('id', new ParseIntPipe()) idUser: number) {\n    return 'deletUser';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            UserInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                mail\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'first name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'last name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'preset role user', enum: RoleEnum})@IsEnum(RoleEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './interfaces/user.interface';\nimport { IsEmail, IsEnum, IsString } from 'class-validator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto implements UserInterface {\n  @ApiProperty({\n    description: 'first name of user',\n  })\n  @IsString()\n  readonly firstName: string;\n\n  @ApiProperty({\n    description: 'last name of user',\n  })\n  @IsString()\n  readonly lastName: string;\n\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  readonly mail: string;\n\n  @ApiProperty({\n    description: 'password of user',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    description: 'preset role user',\n    enum: RoleEnum,\n  })\n  @IsEnum(RoleEnum)\n  readonly role: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        mail\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n  readonly mail: string;\n  readonly firstName: string;\n  readonly lastName: string;\n  readonly password: string;\n  readonly role: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    RoleModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserByMail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByMail(eMail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { RoleService } from '../role/role.service';\nimport { Role } from '../role/roleEntity';\n\n@Injectable()\nexport class UserService {\n  /**\n   *\n   * @param userRepository\n   * @param roleService\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly roleService: RoleService,\n  ) {}\n\n  /**\n   *\n   * @param password\n   */\n  async hashPassword(password: string): Promise {\n    const saltRounds = 10;\n    return await bcrypt.hash(password, saltRounds);\n  }\n\n  /**\n   *\n   * @param userDto\n   */\n  async addUser(userDto) {\n    const user = userDto;\n    user.password = await this.hashPassword(user.password);\n    user.role = await this.roleService.getOneOrFailByRole(user.role);\n    return this.userRepository.save(user);\n  }\n\n  /**\n   *\n   * @param eMail\n   */\n  async getUserByMail(eMail: string) {\n    return this.userRepository.findOneOrFail({\n      where: {\n        mail: eMail,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`User ${eMail} not found`);\n    });\n  }\n\n  /**\n   *\n   * @param userId\n   */\n  async getUser(userId: number) {\n    return await this.userRepository.findOneOrFail(userId, {\n      relations: ['role'],\n    })\n      .catch(() => {\n        throw new NotFoundException(`user with ${userId} not found`);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/access-token.ts\n            \n            class\n            AccessToken\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token.interfaces.ts\n            \n            interface\n            AccessTokenInterfaces\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/company/companyDto.ts\n            \n            injectable\n            CompanyDto\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/company/companyEntity.ts\n            \n            class\n            Company\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/company/interface/company.interface.ts\n            \n            interface\n            CompanyInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.controller.ts\n            \n            controller\n            GreenScoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.service.ts\n            \n            injectable\n            GreenScoreService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptor/entity-type.interceptor.ts\n            \n            injectable\n            EntityTypeInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/join-tag-poi/join-tag-poi.service.ts\n            \n            injectable\n            JoinTagPoiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/join-tag-poi/joinTagPoiEntity.ts\n            \n            class\n            JoinTagPoiEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/loginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n            \n            class\n            PercentTypeGreenScoreAndPoiDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n            \n            interface\n            PercentTypeGreenScoreAndPoiInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n            \n            controller\n            PercentTypeGreenScoreAndPoiController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n            \n            class\n            PercentTypeGreenScoreAndPoi\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/poi/interfaces/poi.interface.ts\n            \n            interface\n            PoiInterface\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/poi/percentAndIdTag.ts\n            \n            class\n            PercentAndIdTag\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/poi/pipe/poi.transformation.pipe.ts\n            \n            injectable\n            PoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/poi/poi.controller.ts\n            \n            controller\n            PoiController\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/poi/poi.service.ts\n            \n            injectable\n            PoiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/poi/poiAndTags.ts\n            \n            class\n            PoiAndTags\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/poi/poiDto.ts\n            \n            injectable\n            PoiDto\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/poi/poiEntity.ts\n            \n            class\n            Poi\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/role/roleEntity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/interfaces/tags.interface.ts\n            \n            interface\n            TagsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tagEntity.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tags/tagsDto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/interfaces/type-green-score.interface.ts\n            \n            interface\n            TypeGreenScoreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.service.ts\n            \n            injectable\n            TypeGreenScoreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreDto.ts\n            \n            class\n            TypeGreenScoreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreEntity.ts\n            \n            class\n            TypeGreenScore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/type/interface/type.interface.ts\n            \n            interface\n            TypeInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/type.controller.ts\n            \n            controller\n            TypeController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type/type.service.ts\n            \n            injectable\n            TypeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/type/typeDto.ts\n            \n            class\n            TypeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/typeEntity.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user-app/user-app.service.ts\n            \n            injectable\n            UserAppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userEntity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            exaToRgbaObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            filterInt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            generateRandExaDecimalColor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            getEnumKey\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.2.3\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/compression : ^1.0.1\n        \n            @types/cookie-parser : ^1.4.2\n        \n            bcrypt : ^3.0.7\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            hex-to-rgba : ^2.0.1\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.3\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceEnum   (src/.../price.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                        \n                            TypeEnum   (src/.../type.enum.ts)\n                        \n                        \n                            TypePoiEnum   (src/.../typePoiEnum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/poi/enum/price.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceEnum\n                    \n                \n                        \n                            \n                                 low\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n            \n        \n\n    src/role/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                 company\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n            \n        \n\n    src/company/enum/type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeEnum\n                    \n                \n                        \n                            \n                                 Agence\n                            \n                        \n                        \n                            \n                                 Ecole\n                            \n                        \n                        \n                            \n                                 Co-working\n                            \n                        \n                        \n                            \n                                 Start-up\n                            \n                        \n                        \n                            \n                                 Grand compte\n                            \n                        \n                        \n                            \n                                 PME\n                            \n                        \n                        \n                            \n                                 Incubateur\n                            \n                        \n                        \n                            \n                                 autre\n                            \n                        \n            \n        \n\n    src/poi/enum/typePoiEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypePoiEnum\n                    \n                \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Drink\n                            \n                        \n                        \n                            \n                                 Cosmetic\n                            \n                        \n                        \n                            \n                                 Fashion\n                            \n                        \n                        \n                            \n                                 Shopping\n                            \n                        \n                        \n                            \n                                 Activity\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main function who call the different router and middleware for the app to work properly\nHelmet helps you secure your Express apps by setting various HTTP headers\nUse to limit repeated requests to  APIs\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMADU Back\nDescription\nAPI REST du back office de maduEquipe\n\nClément Haller (dev back api)\nGuillaume Cornet (infra/server)\n\nTechno\n\nNestJS\nMySQL\nTypeOrm\n\nDocumentation\n\nCompodoc\nSwagger\n\nUML Base de donnée\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinTagPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PercentTypeGreenScoreAndPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeGreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCompanyService \n\nCompanyService \n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nTypeService \n\nTypeService \n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\nUserAppService\n\nUserAppService\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            exaToRgbaObject   (src/.../function.utils.ts)\n                        \n                        \n                            filterInt   (src/.../function.utils.ts)\n                        \n                        \n                            generateRandExaDecimalColor   (src/.../function.utils.ts)\n                        \n                        \n                            getEnumKey   (src/.../function.utils.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/function.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            exaToRgbaObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exaDecimalCode: string, insertToObject) => {\n  const hexaToRgba = hexToRgba(exaDecimalCode);\n  const getValueRba = hexaToRgba.split('(')[1].split(',').filter((elem) => typeof filterInt(elem) === 'number');\n  insertToObject.r = filterInt(getValueRba[0].trim());\n  insertToObject.g = filterInt(getValueRba[1].trim());\n  insertToObject.b = filterInt(getValueRba[2].trim());\n  insertToObject.a = filterInt(getValueRba[3].replace(')', '').trim());\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value) => {\n  if (/^(-|\\+)?(\\d+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n  return NaN;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandExaDecimalColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>  {\n  return '#' + Math.floor(Math.random() * 16777215 ).toString(16);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEnumKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (enumeration) => {\n  const keysEnum: string[] = [];\n\n  for (const n in enumeration) {\n    if (typeof enumeration[n] === 'string') {\n      keysEnum.push(enumeration[n]);\n    }\n  }\n  return keysEnum;\n}\n                        \n                    \n\n\n            \n        \n\n    src/decorator/role.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string []) => SetMetadata('roles', roles)\n                        \n                    \n\n                \n                    \n                        this function set roles who have the right to access an a method or class\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
