var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.051,1,2.742]],["body/classes/AccessToken.html",[0,0.06,1,5.066,2,1.692,3,0.129,4,0.129,5,0.113,6,5.957,7,4.112,8,1.733,9,1.854,10,4.84,11,4.84,12,1.854,13,3.89,14,4.885,15,2.886,16,4.954,17,0.378,18,1.911,19,6.832,20,1.82,21,6.14,22,0.838,23,6.14,24,4.583,25,4.454,26,1.287,27,0.013,28,1.16,29,1.127,30,3.89,31,6.14,32,0.32,33,1.579,34,6.14,35,2.285,36,0.265,37,4.714,38,4.714,39,0.129,40,3.42,41,3.183,42,4.714,43,1.376,44,4.714,45,0.007,46,0.009,47,0.007]],["title/interfaces/AccessTokenInterfaces.html",[16,2.946,35,1.511]],["body/interfaces/AccessTokenInterfaces.html",[3,0.152,4,0.152,5,0.133,8,1.567,10,5.366,13,3.516,14,3.747,16,4.938,17,0.445,18,1.798,19,6.697,25,4.938,27,0.013,30,3.516,32,0.377,33,1.703,35,2.533,39,0.152,45,0.008,46,0.01,47,0.008,48,2.989,49,4.841,50,4.841,51,5.549,52,4.841,53,3.856,54,5.366,55,4.597,56,4.938,57,5.366,58,6.807]],["title/controllers/AppController.html",[9,1.226,59,2.946]],["body/controllers/AppController.html",[0,0.047,1,3.546,3,0.102,4,0.102,5,0.09,8,1.056,9,1.986,10,5.185,13,4.167,14,4.678,17,0.3,22,0.716,26,1.434,27,0.013,28,0.992,29,1.255,32,0.254,36,0.423,39,0.102,40,2.714,41,2.526,43,1.771,45,0.006,46,0.008,47,0.006,56,4.401,59,3.809,60,1.209,61,3.263,62,4.139,63,5.251,64,4.58,65,5.251,66,5.251,67,1.434,68,2.097,69,5.251,70,4.58,71,3.741,72,1.482,73,3.741,74,3.741,75,3.932,76,4.58,77,4.58,78,7.183,79,1.434,80,3.741,81,6.578,82,5.026,83,3.741,84,3.741,85,3.809,86,5.251,87,1.64,88,2.015,89,1.922,90,2.828,91,0.491,92,3.626,93,3.741,94,2.015,95,1.687,96,3.741,97,1.759,98,2.015,99,1.62,100,2.015,101,3.741,102,2.828,103,4.782,104,2.015,105,5.292,106,1.209,107,3.741,108,2.526,109,1.55,110,3.741,111,3.741,112,3.741,113,2.949,114,3.263,115,1.209,116,3.741,117,2.015,118,2.119,119,3.741,120,3.741,121,3.263]],["title/modules/AppModule.html",[122,1.037,123,2.946]],["body/modules/AppModule.html",[0,0.036,3,0.078,4,0.078,5,0.068,27,0.013,32,0.474,36,0.458,39,0.078,45,0.004,46,0.007,47,0.004,59,3.764,60,1.392,91,0.374,122,1.326,123,5.994,124,1.1,125,1.1,126,1.186,127,1.186,128,1.1,129,2.16,130,1.186,131,2.486,132,2.486,133,2.486,134,4.409,135,4.137,136,4.409,137,3.903,138,3.903,139,3.903,140,3.903,141,4.409,142,3.903,143,3.903,144,3.903,145,4.409,146,4.137,147,4.409,148,1.793,149,1.186,150,1.186,151,2.85,152,2.024,153,2.85,154,2.486,155,2.85,156,2.486,157,2.246,158,2.246,159,2.486,160,1.464,161,0.987,162,1.864,163,1.805,164,2.247,165,2.85,166,2.114,167,2.85,168,2.246,169,2.246,170,2.85,171,2.229,172,2.067,173,1.793,174,1.924,175,2.439,176,1.535,177,3.394,178,2.067,179,2.85,180,2.574,181,2.486,182,2.047,183,1.924,184,3.394,185,1.464,186,1.864,187,1.798,188,1.464,189,1.725,190,2.067,191,2.439,192,2.486,193,2.85,194,2.85,195,2.246,196,2.85,197,2.85,198,2.85,199,2.85,200,2.85,201,2.486,202,2.85,203,2.486,204,1.535,205,2.85,206,2.85,207,1.924,208,2.85,209,2.486,210,2.85,211,2.85,212,1.186]],["title/injectables/AppService.html",[147,2.742,213,0.62]],["body/injectables/AppService.html",[0,0.069,3,0.148,4,0.148,5,0.13,8,1.532,17,0.435,22,0.741,27,0.013,33,1.686,36,0.305,39,0.148,45,0.008,46,0.01,47,0.008,67,1.833,75,4.014,79,1.833,91,0.712,109,1.387,147,4.534,213,1.026,214,1.754,215,4.734,216,7.618,217,5.293,218,7.618,219,7.618,220,5.427,221,5.427,222,5.427]],["title/modules/AuthModule.html",[122,1.037,134,2.742]],["body/modules/AuthModule.html",[0,0.055,3,0.119,4,0.119,5,0.104,27,0.013,36,0.438,39,0.119,45,0.007,46,0.009,47,0.007,91,0.569,92,4.846,95,1.954,122,1.674,124,1.673,125,1.673,126,1.805,127,1.805,128,1.673,129,2.728,130,2.728,134,5.562,140,4.49,146,4.759,148,2.418,149,1.805,150,1.805,152,2.731,156,3.781,157,3.416,223,3.781,224,4.334,225,3.781,226,3.781,227,5.073,228,5.073,229,4.334,230,3.781,231,5.808,232,4.334,233,3.416,234,4.334,235,4.334,236,4.334,237,3.416,238,4.334,239,3.781,240,3.781,241,3.781,242,4.334,243,4.334,244,4.334]],["title/injectables/AuthService.html",[92,2.427,213,0.62]],["body/injectables/AuthService.html",[0,0.072,1,3.285,3,0.092,4,0.092,5,0.081,8,0.949,11,3.835,12,1.015,13,3.082,14,3.285,17,0.269,20,1.878,22,0.78,24,3.082,25,2.438,26,1.561,27,0.013,28,1.08,29,1.367,32,0.33,33,1.693,36,0.373,39,0.092,43,1.941,45,0.01,46,0.007,47,0.005,55,3.285,62,3.835,67,1.328,68,2.024,70,5.467,75,4.144,79,1.711,87,1.519,91,0.441,92,2.908,109,1.827,115,1.848,164,2.879,204,3.582,213,0.743,214,1.086,233,2.65,245,2.932,246,4.865,247,3.97,248,4.865,249,4.865,250,4.865,251,4.865,252,2.932,253,4.292,254,7.673,255,3.361,256,4.865,257,3.361,258,4.865,259,4.865,260,6.267,261,3.361,262,4.865,263,4.244,264,4.49,265,3.239,266,2.932,267,3.835,268,2.193,269,0.984,270,2.932,271,2.511,272,3.361,273,3.361,274,2.932,275,2.932,276,2.932,277,3.361,278,3.361,279,3.361,280,3.361]],["title/classes/Company.html",[0,0.051,166,1.993]],["body/classes/Company.html",[0,0.029,2,0.811,3,0.062,4,0.062,5,0.054,8,0.638,11,4.024,17,0.181,18,0.95,22,0.982,27,0.013,28,1.053,32,0.522,33,1.799,36,0.127,39,0.062,45,0.003,46,0.005,47,0.003,53,3.363,54,2.834,57,2.834,72,2.032,166,3.856,207,2.428,212,2.952,264,3.024,265,2.037,281,1.971,282,3.775,283,3.531,284,3.53,285,3.531,286,3.907,287,3.53,288,3.53,289,2.001,290,3.024,291,3.024,292,3.53,293,2.837,294,4.307,295,4.307,296,2.259,297,6.502,298,6.502,299,3.136,300,5.638,301,4.861,302,5.105,303,5.094,304,2.259,305,4.454,306,3.595,307,3.595,308,4.688,309,2.677,310,2.259,311,3.907,312,2.259,313,3.595,314,2.259,315,3.136,316,3.704,317,3.136,318,3.448,319,3.136,320,2.259,321,3.136,322,1.285,323,2.412,324,2.259,325,3.53,326,2.259,327,2.834,328,5.179,329,4.024,330,5.105,331,5.105,332,5.105,333,2.259,334,2.834,335,2.259,336,3.863,337,3.704,338,2.259,339,1.971,340,2.608,341,2.259,342,3.136,343,2.834,344,2.834,345,3.136,346,3.136,347,4.078,348,2.259,349,3.136,350,2.834,351,2.259,352,2.608,353,2.608,354,3.136,355,2.608,356,0.783]],["title/controllers/CompanyController.html",[9,1.226,357,2.946]],["body/controllers/CompanyController.html",[0,0.031,3,0.066,4,0.066,5,0.058,8,1.069,9,1.411,12,1.928,17,0.193,22,0.833,26,1.445,27,0.013,28,1,29,1.266,32,0.39,33,0.875,36,0.382,39,0.066,43,1.782,45,0.004,46,0.006,47,0.004,53,3.458,60,0.779,67,1.033,68,2.24,72,1.723,75,4.424,77,3.302,79,1.9,85,3.84,87,2.065,88,2.039,89,1.238,90,2.039,91,0.316,94,1.299,95,1.087,97,1.133,98,1.299,99,1.044,100,1.299,102,2.039,103,4.534,104,1.299,105,5.326,106,0.779,109,1.778,115,2.063,117,1.299,118,3.458,166,3.707,207,3.575,212,2.204,247,2.398,269,0.488,282,1.858,289,2.441,322,1.535,357,2.746,358,2.103,359,1.238,360,3.785,361,3.785,362,3.302,363,3.302,364,4.618,365,5.294,366,3.785,367,3.785,368,2.103,369,5.142,370,2.411,371,2.411,372,3.617,373,2.411,374,3.575,375,3.785,376,2.103,377,2.411,378,2.411,379,2.852,380,4.076,381,2.411,382,2.411,383,2.411,384,2.411,385,2.411,386,2.411,387,2.411,388,4.618,389,2.411,390,2.411,391,2.411,392,3.302,393,2.999,394,2.103,395,2.103,396,1.366,397,2.793,398,2.103,399,1.9,400,1.628,401,2.103,402,2.103,403,3.785,404,3.302,405,4.618,406,2.411,407,2.411,408,1.527,409,3.649,410,2.999,411,2.983,412,2.411,413,3.785,414,1.628,415,1.944,416,2.411,417,2.411,418,2.103,419,2.411,420,2.103,421,2.411,422,1.366,423,2.411,424,2.411,425,2.411,426,2.411,427,2.103,428,2.411]],["title/injectables/CompanyDto.html",[213,0.62,369,2.742]],["body/injectables/CompanyDto.html",[0,0.045,3,0.061,4,0.061,5,0.054,8,1.998,12,1.079,15,1.054,17,0.18,18,0.944,22,0.966,27,0.013,28,1.173,29,0.854,32,0.518,33,1.776,36,0.312,39,0.061,45,0.003,46,0.005,47,0.003,53,3.651,54,4.006,57,4.006,72,1.998,91,0.294,106,0.724,166,3.164,213,0.546,214,0.724,265,2.879,269,1.647,270,3.117,283,3.932,284,3.512,285,3.932,287,3.512,288,3.512,289,1.599,290,3.009,291,3.009,292,3.512,293,2.823,297,4.434,298,4.434,300,5.161,305,5.622,315,4.434,316,5.692,317,4.434,318,3.995,319,3.886,321,4.434,322,1.394,327,2.816,328,4.434,334,2.816,342,4.434,343,4.006,344,4.006,345,4.434,346,3.886,349,4.434,350,4.006,352,2.592,353,2.592,354,3.117,355,2.592,369,2.413,374,2.413,429,1.955,430,3.573,431,3.573,432,3.573,433,3.573,434,4.598,435,4.455,436,2.241,437,4.434,438,3.573,439,2.241,440,2.241,441,2.241,442,2.241,443,2.241,444,2.241,445,2.241,446,3.573,447,3.573,448,3.573,449,2.241,450,2.241,451,2.241,452,1.955,453,2.241,454,2.241,455,2.241,456,2.241,457,2.816,458,2.241,459,2.241,460,2.592,461,2.241,462,2.241,463,2.241,464,1.767,465,2.816,466,3.117,467,4.434,468,3.97,469,1.207,470,2.592,471,2.241,472,3.268,473,3.886,474,2.241]],["title/interfaces/CompanyInterface.html",[35,1.511,460,2.946]],["body/interfaces/CompanyInterface.html",[3,0.128,4,0.128,5,0.112,17,0.375,18,1.613,27,0.013,28,1.363,29,1.724,32,0.559,33,1.964,35,1.74,39,0.128,45,0.007,46,0.009,47,0.007,48,2.519,269,1.622,283,4.569,284,5.684,285,4.569,287,5.684,288,5.684,292,5.684,293,4.569,322,1.472,460,4.43,475,4.079]],["title/modules/CompanyModule.html",[122,1.037,135,2.573]],["body/modules/CompanyModule.html",[0,0.064,3,0.138,4,0.138,5,0.121,27,0.013,36,0.43,39,0.138,45,0.008,46,0.01,47,0.008,60,2.073,91,0.662,122,1.802,124,1.948,125,1.948,126,2.101,127,2.101,128,1.948,129,2.936,130,2.936,135,5.041,148,2.671,149,2.101,150,2.101,152,2.372,160,2.592,161,1.748,166,2.477,357,5.116,397,4.955,398,4.401,399,3.977,476,4.401,477,4.401,478,4.401,479,5.045,480,5.045,481,5.045]],["title/injectables/CompanyService.html",[213,0.62,397,2.427]],["body/injectables/CompanyService.html",[0,0.061,3,0.069,4,0.069,5,0.06,8,1.102,12,1.179,17,0.201,20,1.507,22,0.939,24,2.474,26,1.695,27,0.013,28,1.301,29,1.484,30,1.59,32,0.455,33,1.436,36,0.304,39,0.069,43,1.711,45,0.004,46,0.006,47,0.004,53,2.212,55,2.637,67,1.066,68,2.327,75,4.006,79,2.015,87,2.093,91,0.329,109,1.759,115,2.225,161,0.869,166,3.793,207,4.525,213,0.597,214,0.811,217,3.078,264,4.525,268,1.131,269,0.508,271,1.565,282,1.917,286,2.189,289,2.471,301,1.694,322,1.49,356,0.869,362,3.407,363,3.407,364,4.719,368,3.407,369,3.653,374,3.653,376,3.407,379,2.914,380,5.114,388,4.719,392,4.719,397,2.334,399,1.978,482,2.189,483,5.41,484,3.905,485,3.905,486,4.719,487,3.905,488,2.509,489,3.491,490,2.509,491,4.794,492,2.509,493,2.833,494,2.509,495,3.905,496,2.509,497,2.509,498,2.509,499,3.905,500,2.509,501,3.407,502,3.905,503,2.716,504,2.509,505,3.905,506,2.509,507,2.509,508,1.421,509,1.352,510,2.509,511,4.794,512,2.509,513,1.82,514,1.917,515,2.509,516,2.509,517,2.189,518,2.509,519,2.509,520,2.509,521,2.509,522,2.509,523,1.421,524,2.509,525,2.509,526,3.905,527,2.189,528,2.189]],["title/injectables/EntityTypeInterceptor.html",[213,0.62,400,2.742]],["body/injectables/EntityTypeInterceptor.html",[0,0.056,3,0.122,4,0.122,5,0.107,15,2.096,17,0.357,22,0.608,26,1.217,27,0.013,28,0.842,29,1.066,32,0.303,36,0.414,39,0.122,41,4.78,43,1.728,45,0.007,46,0.009,47,0.007,53,3.353,67,1.616,79,1.217,87,1.848,91,0.585,109,1.808,171,2.124,213,0.904,214,1.441,309,2.665,340,3.234,400,3.997,513,3.234,529,5.163,530,3.889,531,5.918,532,5.918,533,6.174,534,7.078,535,4.458,536,5.163,537,5.796,538,5.918,539,3.514,540,4.458,541,4.458,542,4.458,543,4.458,544,3.514,545,3.01,546,2.824,547,2.665,548,4.458,549,4.458,550,5.918,551,3.514,552,4.458,553,4.458,554,4.458,555,3.514,556,4.458]],["title/controllers/GreenScoreController.html",[9,1.226,557,2.946]],["body/controllers/GreenScoreController.html",[0,0.077,3,0.167,4,0.167,5,0.146,9,1.842,27,0.012,36,0.342,39,0.167,45,0.009,46,0.011,47,0.009,60,1.971,91,0.801,182,1.842,183,4.119,187,2.497,359,3.133,557,5.228,558,4.425,559,4.425,560,6.1]],["title/modules/GreenScoreModule.html",[122,1.037,136,2.742]],["body/modules/GreenScoreModule.html",[0,0.068,3,0.147,4,0.147,5,0.129,27,0.013,36,0.408,39,0.147,45,0.008,46,0.01,47,0.008,60,2.157,91,0.706,122,1.855,124,2.075,125,2.075,126,2.238,127,2.238,128,2.075,129,3.023,130,2.238,136,5.374,148,2.779,149,2.238,150,2.238,182,2.015,183,3.63,557,5.267,558,3.9,561,4.69,562,4.69,563,5.374,564,4.69,565,3.214,566,4.69]],["title/injectables/GreenScoreService.html",[213,0.62,563,2.742]],["body/injectables/GreenScoreService.html",[0,0.078,3,0.169,4,0.169,5,0.148,27,0.012,36,0.347,39,0.169,45,0.009,46,0.011,47,0.009,91,0.812,183,4.178,213,1.11,214,2,558,4.489,563,4.907,567,4.877]],["title/classes/JoinTagPoiEntity.html",[0,0.051,180,2.427]],["body/classes/JoinTagPoiEntity.html",[0,0.056,2,1.6,3,0.122,4,0.122,5,0.107,17,0.357,18,1.563,22,0.907,27,0.013,28,1.118,32,0.451,36,0.373,39,0.122,45,0.007,46,0.009,47,0.007,72,1.876,171,2.922,172,3.234,173,3.267,174,3.01,180,3.538,212,1.856,282,2.906,289,2.385,308,4.293,309,3.538,322,1.281,323,3.579,356,1.544,568,5.135,569,3.889,570,4.458,571,4.665,572,5.579,573,6.091,574,5.579,575,3.514,576,5.918,577,4.458,578,4.458,579,4.665,580,4.458,581,5.237,582,3.514,583,4.665,584,3.889,585,3.889]],["title/modules/JoinTagPoiModule.html",[122,1.037,137,2.427]],["body/modules/JoinTagPoiModule.html",[0,0.065,3,0.139,4,0.139,5,0.122,27,0.013,36,0.418,39,0.139,45,0.008,46,0.01,47,0.008,91,0.668,122,1.809,124,1.965,125,1.965,126,2.119,127,2.119,128,1.965,129,2.948,130,2.948,137,4.765,148,2.686,149,2.119,150,2.119,152,2.393,160,2.615,161,1.764,171,2.542,175,2.883,176,2.742,180,3.856,568,3.693,586,4.44,587,4.44,588,4.44,589,4.701,590,4.44,591,3.043,592,5.09]],["title/injectables/JoinTagPoiService.html",[213,0.62,589,2.3]],["body/injectables/JoinTagPoiService.html",[0,0.034,3,0.074,4,0.074,5,0.065,17,0.217,20,1.596,22,0.937,26,1.817,27,0.013,28,1.258,29,1.591,32,0.452,36,0.359,39,0.074,43,1.943,45,0.004,46,0.006,47,0.004,67,1.129,68,2.32,79,1.817,87,1.998,91,0.355,109,1.754,115,2.067,161,0.936,171,2.968,172,1.96,173,3.293,174,1.825,176,3.791,180,3.625,213,0.632,214,0.873,268,1.218,269,0.547,271,1.083,356,0.936,489,3.031,509,1.456,568,5.105,579,2.13,584,2.357,589,2.342,593,2.13,594,4.135,595,4.135,596,4.135,597,4.135,598,5.627,599,4.135,600,4.135,601,2.702,602,2.702,603,5.023,604,4.135,605,6.064,606,2.702,607,5.023,608,4.135,609,2.702,610,4.135,611,2.702,612,4.135,613,2.702,614,6.064,615,2.702,616,4.135,617,2.702,618,4.135,619,2.702,620,2.62,621,2.702,622,2.702,623,2.702,624,4.135,625,3.259,626,2.357,627,2.357,628,2.702,629,2.702,630,2.702,631,2.13,632,2.702,633,2.472,634,2.702,635,2.357,636,2.702,637,2.702]],["title/injectables/JwtStrategy.html",[213,0.62,227,2.742]],["body/injectables/JwtStrategy.html",[0,0.076,3,0.164,4,0.1,5,0.088,8,1.034,12,1.105,13,4.824,17,0.294,20,1.996,22,0.706,24,4.519,26,1.412,27,0.013,28,0.977,29,1.237,32,0.248,36,0.386,39,0.1,40,2.656,41,2.473,43,1.75,45,0.01,46,0.008,47,0.006,53,2.93,55,3.492,56,4.727,62,4.077,67,1.412,68,1.75,79,1,91,0.481,95,1.651,99,2.239,109,1.665,113,2.886,114,3.194,115,1.938,121,4.512,164,2.596,204,3.23,212,1.524,213,0.79,214,1.183,227,3.492,239,4.512,240,3.194,241,3.194,247,3.276,252,3.194,253,4.242,263,4.512,266,3.194,268,2.332,269,1.046,271,2.072,275,4.512,316,3.752,493,3.752,514,1.798,638,3.194,639,5.172,640,4.512,641,4.552,642,3.661,643,5.172,644,4.512,645,5.172,646,3.661,647,5.172,648,4.512,649,3.194,650,3.661,651,3.194,652,2.886,653,3.194,654,3.194,655,3.194,656,3.194,657,3.661,658,3.661,659,3.661,660,3.661,661,3.661,662,3.661,663,3.661,664,3.661]],["title/injectables/LocalStrategy.html",[213,0.62,228,2.742]],["body/injectables/LocalStrategy.html",[0,0.082,3,0.116,4,0.116,5,0.102,8,1.202,12,1.286,17,0.341,20,1.644,22,0.783,24,3.637,26,1.567,27,0.013,28,1.085,29,1.373,32,0.39,33,1.796,36,0.39,39,0.116,43,1.896,45,0.007,46,0.009,47,0.007,55,3.877,64,5.008,67,1.567,68,1.896,76,5.008,79,1.163,91,0.559,92,4.755,95,1.92,109,1.659,115,1.377,164,3.141,204,3.908,213,0.877,214,1.377,228,3.877,230,3.715,237,3.357,247,3.637,265,3.252,269,0.862,271,1.707,316,4.165,408,2.698,493,4.165,501,5.008,514,2.091,517,5.008,640,5.008,648,5.008,649,3.715,651,3.715,652,3.357,654,3.715,655,3.715,656,3.715,665,3.715,666,5.741,667,4.259,668,4.259,669,5.741,670,4.259,671,4.259,672,4.259]],["title/classes/LoginDto.html",[0,0.051,82,2.946]],["body/classes/LoginDto.html",[0,0.085,2,1.93,3,0.147,4,0.147,5,0.129,17,0.431,18,1.763,22,0.911,27,0.013,32,0.453,33,1.756,36,0.375,39,0.147,45,0.008,46,0.01,47,0.008,72,1.884,82,4.843,106,1.738,201,6.333,204,3.911,269,1.61,468,3.99,469,2.896,472,3.413,673,4.69,674,4.69,675,5.376,676,5.376,677,5.376,678,5.823]],["title/classes/PercentAndIdTag.html",[0,0.051,679,2.427]],["body/classes/PercentAndIdTag.html",[0,0.075,2,2.115,3,0.161,4,0.161,5,0.141,17,0.472,18,1.864,22,0.963,27,0.012,32,0.479,39,0.161,45,0.009,46,0.011,47,0.009,186,3.273,322,1.695,679,4.219,680,5.139,681,5.483,682,5.891,683,5.891]],["title/classes/PercentTypeGreenScoreAndPoi.html",[0,0.051,191,2.3]],["body/classes/PercentTypeGreenScoreAndPoi.html",[0,0.05,2,1.404,3,0.107,4,0.107,5,0.094,17,0.314,18,1.43,22,0.915,27,0.013,28,1.023,29,1.295,32,0.531,36,0.377,39,0.107,45,0.006,46,0.008,47,0.006,72,1.893,106,1.264,173,3.169,174,2.641,182,2.199,186,2.69,187,2.44,189,3.05,190,2.837,191,3.068,269,1.613,282,2.659,289,2.23,308,4.865,309,3.237,322,1.451,323,2.917,347,3.068,356,1.355,472,3.152,571,3.083,572,5.286,573,5.742,574,5.286,575,4.269,581,4.897,582,3.083,583,4.269,585,3.412,633,3.237,684,3.989,685,3.412,686,2.837,687,3.911,688,3.911,689,3.911,690,6.706,691,3.911,692,3.911,693,3.431,694,3.911,695,3.911]],["title/controllers/PercentTypeGreenScoreAndPoiController.html",[9,1.226,696,2.946]],["body/controllers/PercentTypeGreenScoreAndPoiController.html",[0,0.04,3,0.086,4,0.086,5,0.075,8,0.883,9,1.657,12,1.657,27,0.013,32,0.475,36,0.411,39,0.086,43,1.602,45,0.005,46,0.007,47,0.005,60,1.011,68,1.973,87,1.714,88,2.487,89,1.607,90,1.686,91,0.411,94,1.686,95,1.411,97,1.471,98,1.686,99,1.355,100,1.686,108,2.113,109,1.727,115,2.088,117,1.686,118,3.829,162,1.355,163,1.982,173,1.922,182,2.167,186,2.623,187,2.486,188,1.607,191,1.773,212,2.522,322,1.187,344,2.467,359,1.607,372,3.66,379,1.686,393,3.431,396,1.773,409,4.041,410,3.431,414,2.113,415,3.111,422,1.773,591,1.871,633,1.871,684,1.773,696,3.349,697,2.73,698,5.284,699,6.057,700,3.263,701,4.093,702,2.467,703,2.27,704,3.129,705,3.129,706,3.129,707,3.129,708,3.129,709,3.129,710,3.129,711,3.129,712,3.129,713,3.129,714,3.129,715,3.129,716,4.028,717,3.129,718,3.129,719,3.129,720,3.129,721,3.129,722,3.129]],["title/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.051,701,2.573]],["body/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.078,2,1.697,3,0.129,4,0.129,5,0.113,15,2.892,17,0.379,18,1.625,22,0.933,27,0.013,32,0.539,36,0.384,39,0.129,45,0.007,46,0.009,47,0.007,72,1.93,106,1.528,182,2.267,186,2.961,187,2.601,269,1.625,322,1.665,465,5.708,469,2.546,472,3.404,633,4.087,684,4.102,693,4.332,701,3.897,723,4.123,724,4.96,725,6.837,726,4.727,727,4.727,728,4.727,729,4.727,730,4.727]],["title/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[35,1.511,724,2.946]],["body/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[3,0.151,4,0.151,5,0.132,17,0.442,18,1.791,27,0.012,32,0.534,35,2.052,39,0.151,45,0.008,46,0.01,47,0.008,48,2.97,182,2.047,186,3.317,187,2.349,269,1.485,322,1.786,633,4.579,684,3.124,693,4.853,724,4.919,731,4.81,732,4.81]],["title/modules/PercentTypeGreenScoreAndPoiModule.html",[122,1.037,138,2.427]],["body/modules/PercentTypeGreenScoreAndPoiModule.html",[0,0.058,3,0.124,4,0.124,5,0.109,27,0.013,32,0.517,36,0.442,39,0.124,45,0.007,46,0.009,47,0.007,60,1.936,91,0.596,122,1.713,124,1.752,125,1.752,126,1.89,127,1.89,128,1.752,129,2.791,130,2.791,138,4.64,139,2.714,143,2.714,148,2.494,149,1.89,150,1.89,152,2.134,158,3.579,160,2.332,161,1.573,182,2.343,184,3.579,185,2.332,186,2.594,187,2.47,188,2.332,189,1.819,190,3.293,191,2.572,590,3.96,591,2.714,684,2.572,696,4.864,700,4.398,702,3.579,733,3.96,734,3.96,735,3.96,736,3.96,737,3.96,738,4.54]],["title/injectables/PercentTypeGreenScoreAndPoiService.html",[213,0.62,700,2.187]],["body/injectables/PercentTypeGreenScoreAndPoiService.html",[0,0.031,3,0.066,4,0.066,5,0.058,12,0.728,17,0.193,20,1.461,22,0.785,26,1.571,27,0.013,28,1.087,29,1.375,32,0.524,36,0.382,39,0.066,43,1.679,45,0.004,46,0.006,47,0.004,67,1.033,68,2.223,79,1.445,87,1.797,91,0.316,109,1.778,115,2.363,161,0.835,173,3.17,174,1.628,182,2.258,185,1.238,186,1.044,187,2.498,188,3.136,189,2.842,190,1.749,191,3.458,213,0.578,214,0.779,268,1.087,269,0.488,271,2.446,289,0.865,322,1.505,356,0.835,489,2.852,503,1.366,508,1.366,509,1.299,513,3.39,514,1.184,523,1.366,565,1.441,593,1.9,625,1.9,684,3.458,700,2.039,701,2.96,702,1.9,716,2.103,739,3.785,740,3.785,741,3.785,742,3.785,743,2.411,744,2.411,745,4.673,746,3.785,747,2.411,748,3.785,749,3.785,750,5.294,751,2.411,752,2.411,753,3.785,754,2.411,755,3.785,756,2.411,757,1.366,758,2.103,759,1.238,760,2.411,761,2.411,762,2.411,763,2.411,764,3.785,765,2.411,766,3.785,767,2.411,768,2.411,769,2.411,770,2.411,771,5.294,772,2.411,773,2.411,774,2.411,775,2.411,776,2.411,777,2.411,778,2.411,779,2.411,780,2.411,781,2.411,782,3.785,783,4.673,784,2.411,785,2.411,786,2.411,787,2.411,788,3.785,789,2.411]],["title/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[213,0.62,703,2.946]],["body/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[0,0.061,3,0.131,4,0.131,5,0.115,15,2.259,17,0.385,22,0.656,26,1.312,27,0.013,28,0.908,29,1.149,30,4.366,32,0.512,36,0.387,39,0.131,43,1.815,45,0.007,46,0.01,47,0.007,67,1.698,79,1.312,87,1.942,91,0.631,109,1.228,182,2.2,187,2.525,213,0.95,214,1.553,271,1.926,415,3.194,546,3.045,547,2.873,684,3.522,701,3.939,703,4.51,790,5.424,791,4.192,792,5.424,793,5.744,794,6.357,795,4.806,796,5.424,797,5.424,798,4.806,799,4.806,800,4.806,801,4.806,802,4.806,803,4.806]],["title/classes/Poi.html",[0,0.051,173,1.691]],["body/classes/Poi.html",[0,0.041,2,1.161,3,0.088,4,0.088,5,0.078,8,1.579,17,0.259,18,1.25,22,1.061,27,0.013,28,1.057,32,0.542,33,1.888,36,0.182,39,0.088,45,0.005,46,0.007,47,0.005,72,2.195,173,1.97,212,3.205,264,4.422,282,2.323,283,3.544,285,3.544,289,2.008,290,3.777,291,3.777,293,3.544,294,5.255,295,4.465,299,2.822,301,5.071,308,5.255,309,3.915,311,4.88,322,1.332,323,3.013,325,3.729,336,4.33,337,4.962,347,4.361,356,1.121,804,2.822,805,4.88,806,4.058,807,4.88,808,4.409,809,4.731,810,3.235,811,3.235,812,3.235,813,4.731,814,3.235,815,4.731,816,3.235,817,3.235,818,3.235,819,3.235,820,3.235,821,4.731,822,3.235,823,4.731,824,3.235,825,3.235,826,3.235]],["title/classes/PoiAndTags.html",[0,0.051,827,3.201]],["body/classes/PoiAndTags.html",[0,0.063,2,1.775,3,0.135,4,0.135,5,0.119,17,0.396,18,1.672,20,1.908,22,0.953,26,1.35,27,0.013,28,0.934,29,1.182,32,0.474,36,0.392,39,0.135,43,1.848,45,0.008,46,0.01,47,0.008,171,2.273,172,3.587,173,3.457,175,2.801,180,4.734,181,4.313,620,5.081,827,4.991,828,4.313,829,6.332,830,6.332,831,4.944,832,3.587,833,4.944,834,4.944]],["title/controllers/PoiController.html",[9,1.226,835,2.946]],["body/controllers/PoiController.html",[0,0.031,3,0.067,4,0.067,5,0.059,8,0.696,9,1.432,12,1.163,17,0.198,20,0.952,22,0.879,26,1.463,27,0.013,28,1.013,29,1.282,32,0.418,36,0.413,39,0.067,43,1.799,45,0.004,46,0.006,47,0.004,60,0.797,67,1.052,68,2.29,72,1.818,79,1.758,87,1.674,88,2.075,89,1.267,90,2.075,91,0.324,94,1.328,95,1.112,97,1.159,98,1.328,99,1.068,100,1.328,102,2.554,103,4.858,104,1.328,106,0.797,109,1.75,115,2.081,117,1.328,118,3.648,171,1.383,173,2.231,175,1.397,176,1.328,182,1.163,186,1.068,187,1.335,188,1.267,207,2.602,212,1.974,268,2.138,269,0.959,322,1.482,359,1.267,372,3.491,379,1.328,393,2.686,394,2.151,395,2.151,396,1.397,400,1.665,401,2.151,402,2.151,404,3.361,405,3.361,409,3.849,410,3.036,414,1.665,415,2.436,418,2.151,420,2.151,422,1.397,427,2.151,546,1.562,547,1.474,589,2.686,591,2.834,633,4.266,700,2.554,757,2.686,832,1.789,835,2.795,836,2.151,837,3.361,838,3.361,839,3.361,840,3.361,841,4.675,842,3.853,843,5.36,844,5.36,845,3.361,846,2.151,847,4.761,848,2.466,849,2.466,850,2.466,851,2.151,852,2.466,853,2.466,854,2.466,855,2.466,856,2.466,857,2.466,858,2.466,859,2.466,860,2.466,861,2.466,862,2.466,863,2.466,864,2.466,865,2.466,866,2.466,867,2.466,868,1.789,869,2.466,870,6.663,871,2.466,872,2.466,873,2.466,874,2.466,875,2.466,876,2.466,877,2.466,878,2.466,879,2.466,880,2.466,881,2.466,882,2.466,883,2.466,884,2.466,885,2.466,886,2.466,887,2.466]],["title/injectables/PoiDto.html",[213,0.62,847,2.573]],["body/injectables/PoiDto.html",[0,0.049,3,0.069,4,0.069,5,0.06,8,2.23,12,1.178,15,1.178,17,0.201,18,1.03,22,0.993,27,0.013,28,1.107,32,0.541,33,1.809,36,0.364,39,0.069,45,0.004,46,0.006,47,0.004,52,3.403,53,2.21,72,2.055,91,0.329,106,0.81,173,3.256,182,1.178,187,0.868,189,1.919,213,0.596,214,0.81,269,1.667,283,4.103,285,4.103,289,2.103,290,3.234,291,3.234,293,3.711,309,2.332,318,2.634,322,1.268,327,4.261,329,3.075,334,3.075,374,2.634,434,3.956,452,4.716,457,3.075,464,1.975,465,3.075,466,3.403,467,5.843,468,3.872,469,1.35,472,2.916,473,6.003,620,3.425,679,3.502,806,3.475,808,4.618,837,3.403,838,3.403,847,2.471,888,2.186,889,4.79,890,2.505,891,2.505,892,3.901,893,4.79,894,2.505,895,2.505,896,2.505,897,2.505,898,2.505,899,2.505,900,2.505,901,2.505,902,2.505,903,2.505,904,3.901,905,5.858,906,2.505,907,2.505,908,2.505,909,2.505,910,2.505,911,2.505,912,2.83,913,2.505,914,5.406,915,3.901,916,3.403,917,2.505,918,2.505,919,1.975,920,2.186,921,2.505,922,2.505,923,2.505]],["title/interfaces/PoiInterface.html",[35,1.511,912,2.946]],["body/interfaces/PoiInterface.html",[3,0.117,4,0.117,5,0.103,8,1.968,17,0.344,18,1.524,27,0.013,28,1.317,29,1.38,32,0.561,33,1.973,35,1.597,36,0.241,39,0.117,45,0.007,46,0.009,47,0.007,48,2.312,189,2.793,269,1.637,283,4.416,285,4.416,290,4.707,291,4.707,293,4.416,679,4.348,806,5.057,807,6.081,808,5.494,912,4.185,924,3.743]],["title/modules/PoiModule.html",[122,1.037,139,2.427]],["body/modules/PoiModule.html",[0,0.05,3,0.108,4,0.108,5,0.095,27,0.013,32,0.458,36,0.445,39,0.108,45,0.006,46,0.008,47,0.006,60,1.767,91,0.52,122,1.599,124,1.531,125,1.531,126,1.651,127,1.651,128,1.531,129,2.605,130,2.605,137,4.373,138,4.373,139,4.91,142,4.373,143,4.373,144,4.373,148,2.276,149,1.651,150,1.651,152,2.57,160,2.037,161,1.374,168,3.125,169,3.125,171,1.963,173,1.651,175,2.246,176,2.136,177,4.31,182,2.209,184,3.125,185,2.808,186,1.717,187,1.894,188,2.037,565,2.37,591,2.37,736,3.459,737,3.459,757,4.526,759,2.037,832,2.876,835,4.54,925,3.459,926,3.965,927,3.459,928,3.459,929,3.965,930,3.965]],["title/injectables/PoiService.html",[213,0.62,757,2.3]],["body/injectables/PoiService.html",[0,0.023,3,0.05,4,0.05,5,0.043,12,0.547,17,0.145,20,1.16,22,0.926,26,1.622,27,0.013,28,1.164,29,1.42,32,0.452,33,0.891,36,0.387,39,0.05,43,1.657,45,0.003,46,0.005,47,0.003,67,0.821,68,2.321,79,1.819,87,1.984,91,0.238,109,1.833,115,2.539,161,0.628,171,1.923,173,2.826,175,1.027,176,0.976,182,1.5,185,0.931,186,1.667,187,1.334,188,0.931,189,0.726,191,1.027,192,1.581,213,0.459,214,0.586,268,2.559,269,0.367,271,2.875,289,0.65,322,1.333,356,0.628,486,3.909,489,2.414,503,1.027,508,1.027,509,0.976,514,0.89,523,1.027,527,2.622,528,2.622,545,1.224,547,1.083,555,1.428,565,1.083,579,1.428,589,3.364,591,1.797,620,2.839,633,3.55,679,2.97,698,1.581,700,3.199,757,1.703,759,3.051,805,1.581,832,1.315,839,2.622,840,2.622,841,3.909,845,2.622,846,2.622,847,1.904,851,2.622,919,1.428,920,1.581,931,1.581,932,4.481,933,3.005,934,3.005,935,3.005,936,3.005,937,4.481,938,4.481,939,1.812,940,5.939,941,3.364,942,3.364,943,1.812,944,3.851,945,1.812,946,1.812,947,3.005,948,1.812,949,1.812,950,3.005,951,3.851,952,1.812,953,1.812,954,3.005,955,1.812,956,3.005,957,1.812,958,1.812,959,1.812,960,1.812,961,3.005,962,1.812,963,1.581,964,1.581,965,1.315,966,1.812,967,1.812,968,1.812,969,1.812,970,1.812,971,1.812,972,1.812,973,1.812,974,1.812,975,1.812,976,1.812,977,3.851,978,1.812,979,1.812,980,1.812,981,1.812,982,1.812,983,1.812,984,1.812,985,1.812,986,1.812,987,1.812,988,1.812,989,1.812,990,1.812,991,1.812,992,1.812,993,1.812,994,1.812,995,3.851,996,3.005,997,1.812,998,3.005,999,3.005,1000,3.005,1001,1.812,1002,1.812,1003,1.812,1004,3.851,1005,1.812,1006,1.812,1007,3.005,1008,1.812,1009,1.812,1010,1.812,1011,3.005,1012,1.812,1013,1.812,1014,1.812,1015,3.005,1016,1.812,1017,1.812,1018,1.812,1019,1.812,1020,1.812,1021,1.812,1022,1.812,1023,1.812,1024,1.812,1025,1.812,1026,1.812,1027,1.812,1028,1.812,1029,1.812,1030,1.812,1031,1.812,1032,1.812,1033,1.812,1034,1.812,1035,1.812,1036,1.812,1037,1.812,1038,1.812,1039,1.812,1040,1.812]],["title/injectables/PoiTransformationPipe.html",[213,0.62,868,2.946]],["body/injectables/PoiTransformationPipe.html",[0,0.059,3,0.128,4,0.128,5,0.112,12,1.408,15,2.192,17,0.374,22,0.636,26,1.273,27,0.013,28,0.881,29,1.115,30,3.862,32,0.316,36,0.381,39,0.128,45,0.007,46,0.009,47,0.007,67,1.665,68,1.983,79,1.273,87,1.904,91,0.612,109,1.735,186,2.019,187,1.616,213,0.931,214,1.507,271,1.868,322,1.009,415,3.132,514,2.289,546,2.954,547,2.787,792,5.318,793,5.354,794,6.284,796,5.318,797,5.318,847,3.862,868,4.423,1041,4.068,1042,4.663,1043,4.663,1044,6.096,1045,4.663,1046,4.663,1047,6.096,1048,4.663,1049,4.663,1050,4.663,1051,4.663,1052,4.663,1053,4.663,1054,4.663,1055,4.663,1056,4.663,1057,4.663]],["title/classes/Role.html",[0,0.051,162,1.758]],["body/classes/Role.html",[0,0.07,2,1.979,3,0.151,4,0.151,5,0.132,17,0.442,18,1.791,22,0.925,27,0.013,32,0.46,33,1.568,36,0.31,39,0.151,45,0.008,46,0.01,47,0.008,72,1.914,162,3.405,282,3.329,289,2.636,294,4,322,1.467,323,3.955,336,3.296,347,3.841,356,1.91,1058,4.81,1059,5.514,1060,6.781,1061,5.514]],["title/guards/RoleGuard.html",[97,1.909,1062,3.201]],["body/guards/RoleGuard.html",[0,0.056,3,0.121,4,0.121,5,0.106,8,1.252,15,2.085,17,0.355,20,1.712,22,0.805,26,1.61,27,0.013,28,1.114,29,1.41,32,0.4,36,0.372,39,0.121,43,1.722,45,0.007,46,0.009,47,0.007,56,3.217,67,1.61,79,1.211,87,1.842,91,0.582,97,2.773,99,2.554,109,1.507,162,2.554,164,3.059,212,1.846,213,0.901,247,3.737,269,0.897,271,2.83,408,2.809,533,6.162,536,5.145,537,5.781,539,3.496,1063,4.435,1064,3.869,1065,7.063,1066,4.435,1067,7.717,1068,4.435,1069,5.898,1070,4.435,1071,5.898,1072,3.869,1073,4.435,1074,4.435,1075,4.435,1076,4.435,1077,5.898,1078,4.435,1079,4.435,1080,4.435]],["title/modules/RoleModule.html",[122,1.037,140,2.427]],["body/modules/RoleModule.html",[0,0.066,3,0.142,4,0.142,5,0.124,27,0.013,36,0.421,39,0.142,45,0.008,46,0.01,47,0.008,91,0.68,122,1.824,124,2,125,2,126,2.157,127,2.157,128,2,129,2.973,130,2.973,140,4.784,148,2.716,149,2.157,150,2.157,152,2.436,160,2.662,161,1.795,162,2.244,641,4.972,1081,4.52,1082,4.52,1083,4.52,1084,5.182,1085,5.182,1086,4.52,1087,5.182]],["title/injectables/RoleService.html",[213,0.62,641,2.427]],["body/injectables/RoleService.html",[0,0.048,3,0.103,4,0.103,5,0.09,8,1.061,12,1.134,17,0.301,20,2.033,22,0.899,26,1.799,27,0.013,28,1.245,29,1.576,32,0.413,33,1.406,36,0.37,39,0.103,43,1.924,45,0.006,46,0.008,47,0.006,67,1.438,68,2.236,79,1.66,87,2.058,91,0.493,99,2.281,109,1.684,115,1.702,161,1.302,162,2.854,213,0.805,214,1.214,217,4.151,268,1.694,269,0.76,289,1.891,322,1.426,356,1.302,489,3.738,503,2.128,508,2.128,509,2.024,514,1.845,523,2.128,635,3.278,641,3.148,1086,3.278,1088,3.278,1089,5.267,1090,5.267,1091,5.267,1092,3.757,1093,3.757,1094,6.081,1095,5.267,1096,3.757,1097,6.59,1098,5.267,1099,3.757,1100,6.59,1101,5.267,1102,3.757,1103,3.757,1104,3.757,1105,3.757,1106,3.757,1107,3.757,1108,3.757,1109,3.757,1110,5.267,1111,3.757,1112,3.757]],["title/controllers/StatsController.html",[9,1.226,1113,2.946]],["body/controllers/StatsController.html",[0,0.067,3,0.144,4,0.144,5,0.127,9,1.593,17,0.423,22,0.72,27,0.013,36,0.424,39,0.144,45,0.008,46,0.01,47,0.008,60,1.706,67,1.802,68,2.102,72,1.49,79,1.441,89,2.711,91,0.693,94,2.843,95,2.379,102,3.555,104,2.843,106,1.706,109,1.348,115,1.706,117,2.843,269,1.068,359,2.711,408,3.343,1113,4.787,1114,4.604,1115,5.277,1116,6.58,1117,5.277,1118,4.561,1119,4.604,1120,5.277,1121,5.277,1122,5.277]],["title/modules/StatsModule.html",[122,1.037,141,2.742]],["body/modules/StatsModule.html",[0,0.053,3,0.115,4,0.115,5,0.101,27,0.013,32,0.386,36,0.441,39,0.115,45,0.006,46,0.009,47,0.006,60,1.84,91,0.552,122,1.649,124,1.624,125,1.624,126,1.752,127,1.752,128,1.624,129,2.687,130,1.752,135,4.718,137,4.452,138,4.452,139,4.452,141,5.604,142,4.452,144,4.452,148,2.37,149,1.752,150,1.752,152,2.676,158,3.316,159,3.67,168,3.316,169,3.316,171,2.044,175,2.383,176,2.266,177,4.488,182,1.719,186,1.822,187,1.973,188,2.161,1113,4.681,1118,4.718,1119,3.67,1123,3.67,1124,4.207,1125,3.67,1126,4.207,1127,4.207]],["title/injectables/StatsService.html",[213,0.62,1118,2.573]],["body/injectables/StatsService.html",[0,0.042,3,0.091,4,0.091,5,0.08,17,0.268,20,1.87,22,0.778,26,0.912,27,0.013,28,0.631,29,0.799,32,0.45,36,0.401,39,0.091,40,2.424,41,2.257,45,0.005,46,0.007,47,0.005,67,1.323,68,2.02,79,1.323,87,1.513,91,0.439,109,1.597,113,2.634,115,2.445,166,1.641,171,1.739,173,1.391,175,1.893,176,1.8,182,1.463,186,1.447,187,1.678,188,1.717,213,0.74,214,1.08,268,3.359,269,1.4,271,2.86,295,2.424,303,3.819,322,0.723,329,4.926,337,2.424,397,4.266,589,3.919,591,2.896,700,3.844,757,4.043,758,2.915,806,2.424,941,4.043,942,4.043,963,2.915,964,2.915,1116,5.452,1118,3.069,1128,2.915,1129,6.25,1130,3.342,1131,3.342,1132,3.342,1133,3.342,1134,3.342,1135,4.844,1136,3.342,1137,2.915,1138,3.342,1139,3.342,1140,4.844,1141,3.342,1142,4.844,1143,3.342,1144,4.226,1145,2.915,1146,4.844,1147,3.342,1148,3.342,1149,4.844,1150,4.844,1151,3.342,1152,3.342,1153,3.342,1154,3.342,1155,3.342,1156,4.844,1157,3.342,1158,3.342,1159,3.342,1160,3.342]],["title/classes/Tag.html",[0,0.051,171,1.458]],["body/classes/Tag.html",[0,0.065,2,1.838,3,0.14,4,0.14,5,0.123,17,0.41,18,1.71,22,0.969,27,0.013,32,0.482,33,1.726,36,0.364,39,0.14,45,0.008,46,0.01,47,0.008,72,2.005,106,1.655,171,2.763,282,3.179,289,2.549,301,3.458,322,1.401,323,3.488,336,3.061,339,4.467,347,4.022,356,1.774,472,3.338,686,3.714,1161,4.467,1162,7.101,1163,6.475,1164,5.12,1165,5.12,1166,4.036,1167,5.104,1168,5.12]],["title/controllers/TagsController.html",[9,1.226,1169,2.946]],["body/controllers/TagsController.html",[0,0.046,3,0.1,4,0.1,5,0.087,9,1.098,12,1.554,17,0.292,22,0.887,26,1.632,27,0.013,28,1.129,29,1.429,32,0.406,36,0.42,39,0.1,43,1.062,45,0.006,46,0.008,47,0.006,60,1.176,67,1.406,68,2.298,72,1.834,79,1.774,87,2.029,88,2.773,89,1.869,90,1.96,91,0.478,94,1.96,95,1.64,97,1.71,98,1.96,99,1.575,100,1.96,102,2.773,104,1.96,106,1.176,109,1.66,115,2.216,117,1.96,118,3.385,171,1.306,212,2.144,269,0.736,322,1.54,359,1.869,372,4.033,379,1.96,393,3.385,396,2.061,408,2.305,409,3.572,410,3.385,411,2.868,414,2.457,415,1.869,422,2.061,620,2.305,631,5.121,941,3.385,1169,3.735,1170,3.174,1171,4.491,1172,4.491,1173,5.668,1174,4.491,1175,3.174,1176,4.974,1177,3.174,1178,3.638,1179,4.491,1180,3.174,1181,3.174,1182,3.638,1183,2.639,1184,3.638,1185,3.174,1186,3.174,1187,3.638,1188,3.174,1189,2.868,1190,3.638,1191,3.638,1192,3.638,1193,3.638,1194,3.638,1195,5.149,1196,3.638,1197,3.638,1198,3.638]],["title/classes/TagsDto.html",[0,0.051,1176,2.946]],["body/classes/TagsDto.html",[0,0.084,2,1.9,3,0.145,4,0.145,5,0.127,8,1.494,15,3.108,17,0.424,18,1.746,22,0.722,27,0.013,28,1.249,32,0.359,33,1.529,36,0.405,39,0.145,45,0.008,46,0.01,47,0.008,72,1.494,106,1.711,171,2.79,269,1.458,318,4.464,355,3.84,434,3.575,468,3.952,469,2.852,472,3.108,1176,4.796,1199,4.618,1200,5.23,1201,6.611,1202,6.611,1203,4.618,1204,5.293,1205,5.293]],["title/interfaces/TagsInterface.html",[35,1.511,1200,2.946]],["body/interfaces/TagsInterface.html",[3,0.166,4,0.166,5,0.145,17,0.486,18,1.895,27,0.012,32,0.411,33,1.769,35,2.254,39,0.166,45,0.009,46,0.011,47,0.009,48,3.263,171,2.838,269,1.225,1200,5.206,1206,5.284]],["title/modules/TagsModule.html",[122,1.037,142,2.427]],["body/modules/TagsModule.html",[0,0.064,3,0.138,4,0.138,5,0.121,27,0.013,36,0.43,39,0.138,45,0.008,46,0.01,47,0.008,60,2.073,91,0.662,122,1.802,124,1.948,125,1.948,126,2.101,127,2.101,128,1.948,129,2.936,130,2.936,142,4.756,148,2.671,149,2.101,150,2.101,152,2.372,160,2.592,161,1.748,171,1.811,941,4.695,1169,5.116,1188,4.401,1189,3.977,1207,4.401,1208,4.401,1209,4.401,1210,5.045,1211,5.045,1212,5.045]],["title/injectables/TagsService.html",[213,0.62,941,2.3]],["body/injectables/TagsService.html",[0,0.045,3,0.096,4,0.096,5,0.084,12,1.06,17,0.282,20,1.938,22,0.988,26,1.847,27,0.013,28,1.278,29,1.617,32,0.434,36,0.38,39,0.096,45,0.005,46,0.008,47,0.005,67,1.371,68,2.371,79,1.921,87,1.997,91,0.461,109,1.851,115,2.274,161,1.217,171,1.802,213,0.767,214,1.135,268,1.583,269,0.71,271,2.012,289,1.261,322,1.632,356,1.217,489,3.445,503,1.99,508,1.99,509,1.892,514,1.724,523,1.99,545,2.372,547,2.099,555,2.768,620,3.713,626,3.064,627,3.064,631,4.619,941,2.844,1171,4.38,1172,4.38,1173,5.578,1174,4.38,1175,4.38,1179,3.064,1180,4.38,1185,4.38,1189,2.768,1213,3.064,1214,5.021,1215,6.395,1216,3.512,1217,3.512,1218,5.021,1219,3.512,1220,3.512,1221,3.512,1222,3.512,1223,5.021,1224,3.512,1225,3.512,1226,3.512,1227,3.958,1228,3.512,1229,3.512,1230,3.512,1231,3.512,1232,3.512,1233,3.512,1234,3.512,1235,3.512,1236,3.512,1237,3.512]],["title/classes/Type.html",[0,0.051,32,0.276]],["body/classes/Type.html",[0,0.068,2,1.936,3,0.147,4,0.147,5,0.129,17,0.432,18,1.767,22,0.913,27,0.013,32,0.548,33,1.547,36,0.376,39,0.147,45,0.008,46,0.01,47,0.008,72,1.888,106,1.743,282,3.284,289,2.61,322,1.447,323,3.603,336,3.224,347,3.789,356,1.868,472,3.418,686,3.912,1166,4.251,1167,5.272,1238,4.704,1239,5.393,1240,5.393]],["title/controllers/TypeController.html",[9,1.226,1241,2.946]],["body/controllers/TypeController.html",[0,0.042,3,0.091,4,0.091,5,0.079,8,0.934,9,1.711,12,1.452,17,0.265,22,0.849,26,1.547,27,0.013,28,1.071,29,1.355,32,0.495,36,0.424,39,0.091,43,1.929,45,0.005,46,0.007,47,0.005,60,1.07,67,1.314,68,2.257,72,1.756,79,1.699,87,1.502,88,2.591,89,1.7,90,1.783,91,0.434,94,1.783,95,1.492,97,1.556,98,1.783,99,1.433,100,1.783,102,2.591,104,1.783,106,1.07,109,1.59,115,2.136,117,1.783,118,3.524,212,2.003,269,0.669,322,1.492,359,1.7,372,3.906,379,1.783,393,3.21,396,1.875,408,2.097,409,3.719,410,3.21,411,2.609,414,2.235,415,1.7,422,1.875,470,2.401,681,5.002,942,3.524,1145,2.887,1181,2.887,1183,2.401,1186,2.887,1241,3.49,1242,2.887,1243,4.196,1244,4.811,1245,4.196,1246,5.427,1247,2.887,1248,4.923,1249,2.609,1250,3.31,1251,3.31,1252,3.31,1253,2.887,1254,3.31,1255,3.31,1256,2.887,1257,2.609,1258,2.887,1259,3.31,1260,2.609,1261,2.609,1262,3.31,1263,3.31,1264,3.31,1265,4.811,1266,3.31,1267,3.31]],["title/classes/TypeDto.html",[0,0.051,1248,2.742]],["body/classes/TypeDto.html",[0,0.083,2,1.889,3,0.144,4,0.144,5,0.126,8,1.485,15,3.096,17,0.422,18,1.74,22,0.718,27,0.013,32,0.537,33,1.523,36,0.404,39,0.144,45,0.008,46,0.01,47,0.008,72,1.485,106,1.7,166,3.233,269,1.454,318,4.447,352,4.778,353,4.778,355,3.817,434,3.553,468,3.937,469,2.834,472,3.096,1203,4.589,1248,4.447,1268,4.589,1269,5.216,1270,5.745,1271,5.261,1272,5.261]],["title/classes/TypeGreenScore.html",[0,0.051,189,1.627]],["body/classes/TypeGreenScore.html",[0,0.066,2,1.866,3,0.142,4,0.142,5,0.125,17,0.417,18,1.726,22,0.892,27,0.013,32,0.444,33,1.512,36,0.367,39,0.142,45,0.008,46,0.01,47,0.008,72,1.845,106,1.68,182,2.159,189,3.098,269,1.596,282,3.209,289,2.566,322,1.414,323,3.521,336,3.107,347,3.703,356,1.801,472,3.361,686,3.771,1166,4.097,1273,4.05,1274,4.534,1275,5.198,1276,6.536,1277,5.198]],["title/controllers/TypeGreenScoreController.html",[9,1.226,1278,2.573]],["body/controllers/TypeGreenScoreController.html",[0,0.04,3,0.086,4,0.086,5,0.075,8,0.887,9,1.832,12,1.398,17,0.252,22,0.828,26,1.501,27,0.013,28,1.039,29,1.315,32,0.475,36,0.412,39,0.086,43,1.889,45,0.005,46,0.007,47,0.005,60,1.015,67,1.264,68,2.234,72,1.713,79,1.657,87,1.895,88,2.494,89,1.613,90,1.692,91,0.412,94,1.692,95,1.416,97,1.476,98,1.692,99,1.36,100,1.692,102,2.494,104,1.692,106,1.015,108,2.121,109,1.55,115,1.961,117,1.692,118,3.437,162,1.36,163,1.99,182,2.403,185,3.323,187,2.345,189,1.258,212,1.927,322,1.465,359,1.613,372,3.437,379,1.692,393,3.115,396,1.779,409,3.627,410,2.623,415,2.378,422,1.779,559,2.278,565,1.877,693,4.288,759,3.117,1183,2.278,1249,2.476,1260,2.476,1261,3.649,1273,3.665,1278,2.933,1279,4.038,1280,3.649,1281,5.293,1282,4.038,1283,2.74,1284,4.099,1285,2.74,1286,4.796,1287,2.476,1288,2.74,1289,2.74,1290,2.74,1291,2.74,1292,2.74,1293,2.74,1294,2.74,1295,2.278,1296,2.74,1297,2.74,1298,2.74,1299,2.74,1300,2.74,1301,2.74,1302,2.74,1303,2.74]],["title/controllers/TypeGreenScoreController-1.html",[9,1.021,340,2.454,1278,2.143]],["body/controllers/TypeGreenScoreController-1.html",[0,0.04,3,0.086,4,0.086,5,0.075,8,0.885,9,1.952,12,1.396,17,0.251,22,0.827,26,1.5,27,0.013,28,1.038,29,1.313,32,0.475,36,0.412,39,0.086,43,1.887,45,0.005,46,0.007,47,0.005,60,1.013,67,1.262,68,2.233,72,1.711,79,1.655,87,1.894,88,2.491,89,1.61,90,1.689,91,0.411,94,1.689,95,1.413,97,1.474,98,1.689,99,1.357,100,1.689,102,2.491,104,1.689,106,1.013,108,2.117,109,1.549,115,1.959,117,1.689,118,3.434,162,1.357,163,1.986,182,2.402,185,3.321,187,2.344,189,1.256,212,1.925,322,1.464,359,1.61,372,3.434,379,1.689,393,3.111,396,1.776,409,3.624,410,2.619,415,2.375,422,1.776,559,2.274,565,1.874,693,4.285,759,3.114,1183,2.274,1249,2.471,1260,2.471,1261,3.644,1273,3.662,1278,2.929,1279,4.033,1280,3.644,1281,5.289,1282,4.033,1283,2.735,1284,4.096,1285,2.735,1286,4.791,1287,2.471,1288,2.735,1289,2.735,1290,2.735,1291,2.735,1292,2.735,1293,2.735,1294,2.735,1295,2.274,1296,2.735,1297,2.735,1298,2.735,1299,2.735,1300,2.735,1301,2.735,1302,2.735,1303,2.735]],["title/classes/TypeGreenScoreDto.html",[0,0.051,1284,2.573]],["body/classes/TypeGreenScoreDto.html",[0,0.085,2,1.954,3,0.149,4,0.149,5,0.131,15,3.163,17,0.436,18,1.777,22,0.743,27,0.013,32,0.369,33,1.556,36,0.41,39,0.149,45,0.008,46,0.01,47,0.008,72,1.537,106,1.76,182,2.204,189,2.926,269,1.477,468,4.021,469,2.933,472,3.163,674,4.749,1273,3.811,1284,4.262,1304,4.749,1305,5.297,1306,5.444,1307,5.444,1308,5.444]],["title/interfaces/TypeGreenScoreInterface.html",[35,1.511,1305,2.946]],["body/interfaces/TypeGreenScoreInterface.html",[3,0.163,4,0.163,5,0.143,17,0.479,18,1.88,27,0.012,32,0.405,33,1.758,35,2.223,39,0.163,45,0.009,46,0.011,47,0.009,48,3.217,182,2.149,189,3.154,269,1.208,1273,3.384,1305,5.163,1309,5.21,1310,5.21]],["title/modules/TypeGreenScoreModule.html",[122,1.037,143,2.427]],["body/modules/TypeGreenScoreModule.html",[0,0.062,3,0.135,4,0.135,5,0.118,27,0.013,32,0.429,36,0.427,39,0.135,45,0.008,46,0.01,47,0.008,60,2.043,91,0.647,122,1.782,124,1.903,125,1.903,126,2.052,127,2.052,128,1.903,129,2.904,130,2.904,143,4.731,148,2.631,149,2.052,150,2.052,152,2.317,160,2.532,161,1.708,182,2.221,185,2.532,189,1.975,564,4.3,565,2.947,566,4.3,759,4.244,1273,2.793,1278,4.419,1295,3.576,1311,4.3,1312,4.3,1313,4.3,1314,4.93]],["title/injectables/TypeGreenScoreService.html",[213,0.62,759,2.086]],["body/injectables/TypeGreenScoreService.html",[0,0.042,3,0.091,4,0.091,5,0.08,12,1.009,17,0.268,20,1.87,22,0.944,26,1.812,27,0.013,28,1.254,29,1.586,32,0.387,36,0.373,39,0.091,43,1.937,45,0.005,46,0.007,47,0.005,67,1.323,68,2.317,79,1.812,87,1.952,91,0.439,109,1.695,115,2.236,161,1.158,182,2.397,185,3.666,187,1.158,189,1.941,213,0.74,214,1.08,268,1.507,269,0.676,271,1.339,289,1.2,322,1.497,356,1.158,489,3.367,503,1.893,508,1.893,509,1.8,514,1.641,523,1.893,567,2.634,679,1.998,681,4.134,693,3.069,759,2.488,1273,4.043,1280,3.819,1284,3.069,1287,3.819,1295,2.424,1315,4.844,1316,5.452,1317,4.844,1318,4.226,1319,3.342,1320,3.342,1321,5.699,1322,4.844,1323,3.342,1324,3.342,1325,3.342,1326,4.844,1327,3.342,1328,4.844,1329,4.844,1330,3.342,1331,3.342,1332,3.342,1333,3.342,1334,3.342,1335,3.342,1336,2.915,1337,3.342,1338,3.342,1339,3.342]],["title/interfaces/TypeInterface.html",[35,1.511,1269,2.946]],["body/interfaces/TypeInterface.html",[3,0.166,4,0.166,5,0.145,17,0.486,18,1.895,27,0.012,32,0.548,33,1.769,35,2.254,39,0.166,45,0.009,46,0.011,47,0.009,48,3.263,269,1.225,1269,5.206,1340,5.284]],["title/modules/TypeModule.html",[122,1.037,144,2.427]],["body/modules/TypeModule.html",[0,0.064,3,0.138,4,0.138,5,0.121,27,0.013,32,0.342,36,0.43,39,0.138,45,0.008,46,0.01,47,0.008,60,2.073,91,0.662,122,1.802,124,1.948,125,1.948,126,2.101,127,2.101,128,1.948,129,2.936,130,2.936,144,4.756,148,2.671,149,2.101,150,2.101,152,2.372,160,2.592,161,1.748,942,4.695,1241,5.116,1256,4.401,1257,3.977,1341,4.401,1342,4.401,1343,4.401,1344,5.045,1345,5.045,1346,5.045]],["title/injectables/TypeService.html",[213,0.62,942,2.3]],["body/injectables/TypeService.html",[0,0.041,3,0.088,4,0.088,5,0.077,12,0.968,17,0.257,20,1.814,22,0.961,26,1.781,27,0.013,28,1.233,29,1.56,32,0.443,33,1.087,36,0.383,39,0.088,43,1.904,45,0.005,46,0.007,47,0.005,67,1.283,68,2.342,79,1.862,87,2.129,91,0.421,109,1.8,115,2.204,161,1.11,213,0.718,214,1.036,268,1.445,269,0.648,271,2.229,289,1.15,322,1.595,356,1.11,470,3.409,489,3.301,503,1.816,508,1.816,509,1.726,514,1.573,523,1.816,547,1.916,551,2.526,681,4.733,942,2.662,965,2.325,1144,4.099,1243,4.099,1245,4.099,1246,4.099,1247,4.099,1248,3.173,1253,4.099,1257,2.526,1258,2.796,1316,5.345,1318,5.345,1336,2.796,1347,2.796,1348,4.699,1349,3.205,1350,3.205,1351,5.564,1352,3.205,1353,4.699,1354,3.205,1355,3.205,1356,3.205,1357,3.205,1358,4.699,1359,3.205,1360,4.699,1361,3.205,1362,3.205,1363,3.205,1364,3.205,1365,3.205,1366,3.205,1367,3.205,1368,4.699,1369,2.796,1370,3.205,1371,3.205]],["title/classes/User.html",[0,0.051,164,1.758]],["body/classes/User.html",[0,0.053,2,1.514,3,0.115,4,0.115,5,0.101,17,0.338,18,1.506,22,1.017,27,0.013,28,0.797,32,0.506,33,1.792,36,0.32,39,0.115,45,0.006,46,0.009,47,0.006,72,2.104,162,3.356,163,2.672,164,2.469,204,3.481,212,2.374,265,3.66,282,2.8,289,2.319,294,5.021,309,2.521,322,1.234,323,3.481,325,4.495,336,4.137,337,5.021,347,4.096,356,1.461,571,3.324,572,4.495,573,5.093,574,4.495,575,3.324,581,4.495,582,3.324,583,3.324,1372,3.679,1373,5.093,1374,5.093,1375,4.217,1376,4.217,1377,4.217,1378,5.703,1379,4.217,1380,5.703,1381,4.217,1382,5.703,1383,4.217,1384,4.217]],["title/modules/UserAppModule.html",[122,1.037,145,2.742]],["body/modules/UserAppModule.html",[0,0.07,3,0.152,4,0.152,5,0.133,27,0.013,36,0.382,39,0.152,45,0.008,46,0.01,47,0.008,91,0.728,122,1.881,124,2.142,125,2.142,126,2.31,127,2.31,128,2.142,129,3.066,130,2.31,145,5.415,148,2.834,149,2.31,150,2.31,154,4.841,164,2.403,178,4.026,1385,4.841,1386,4.841,1387,5.415,1388,4.374,1389,5.549]],["title/injectables/UserAppService.html",[213,0.62,1387,2.742]],["body/injectables/UserAppService.html",[0,0.078,3,0.169,4,0.169,5,0.148,27,0.012,36,0.347,39,0.169,45,0.009,46,0.011,47,0.009,91,0.812,178,4.489,213,1.11,214,2,1387,4.907,1388,4.877,1390,5.398]],["title/controllers/UserController.html",[9,1.226,1391,2.946]],["body/controllers/UserController.html",[0,0.05,3,0.109,4,0.109,5,0.095,8,1.125,9,1.894,12,1.894,17,0.319,22,0.748,26,1.498,27,0.013,28,1.036,29,1.311,32,0.372,36,0.411,39,0.109,43,1.831,45,0.006,46,0.008,47,0.006,60,1.287,67,1.498,68,2.138,72,1.548,75,4.04,79,1.498,85,3.979,88,2.955,89,2.046,90,2.146,91,0.523,97,1.873,98,2.146,99,1.725,100,2.146,102,2.955,104,2.146,106,1.287,108,2.69,109,1.401,164,3.25,212,2.284,253,3.554,322,1.357,359,2.046,372,4.015,374,3.704,379,3.379,393,3.107,396,2.256,410,3.107,415,2.817,422,2.256,1177,3.475,1391,3.979,1392,3.475,1393,4.785,1394,5.485,1395,3.475,1396,5.163,1397,3.983,1398,3.983,1399,3.983,1400,3.983,1401,6.273,1402,3.475,1403,3.983,1404,3.983,1405,3.983,1406,3.983,1407,3.983,1408,3.983]],["title/classes/UserDto.html",[0,0.051,1396,2.742]],["body/classes/UserDto.html",[0,0.07,2,1.45,3,0.11,4,0.11,5,0.097,8,2.011,15,2.603,17,0.324,18,1.463,22,0.972,27,0.013,28,1.285,32,0.483,33,1.821,36,0.382,39,0.11,45,0.006,46,0.008,47,0.006,72,2.011,106,1.306,162,3.084,164,3.186,204,3.837,265,3.58,269,1.651,434,4.81,457,4.365,464,3.184,468,4.064,469,2.176,472,3.458,678,4.831,1373,4.981,1374,4.981,1396,3.739,1409,3.524,1410,4.584,1411,5.538,1412,6.319,1413,4.039,1414,5.538,1415,4.039,1416,4.831,1417,4.039,1418,4.039,1419,4.039,1420,5.538,1421,4.039,1422,4.039,1423,4.039,1424,4.831,1425,4.039,1426,4.039]],["title/interfaces/UserInterface.html",[35,1.511,1410,2.946]],["body/interfaces/UserInterface.html",[3,0.145,4,0.145,5,0.127,17,0.426,18,1.75,27,0.013,32,0.528,33,1.951,35,1.976,39,0.145,45,0.008,46,0.01,47,0.008,48,2.86,162,3.273,204,4.072,265,4.282,269,1.574,1373,5.959,1374,5.959,1410,4.805,1427,4.632]],["title/modules/UserModule.html",[122,1.037,146,2.573]],["body/modules/UserModule.html",[0,0.061,3,0.132,4,0.132,5,0.116,27,0.013,36,0.435,39,0.132,45,0.007,46,0.01,47,0.007,60,2.017,91,0.634,122,1.766,124,1.866,125,1.866,126,2.012,127,2.012,128,1.866,129,2.877,130,2.877,140,4.628,146,5.11,148,2.598,149,2.012,150,2.012,152,2.933,157,3.81,160,2.483,161,1.674,164,2.093,253,4.667,1391,5.013,1402,4.216,1428,4.216,1429,4.833,1430,4.216,1431,4.216,1432,4.833,1433,4.833,1434,4.216,1435,4.833]],["title/injectables/UserService.html",[213,0.62,253,2.3]],["body/injectables/UserService.html",[0,0.043,3,0.092,4,0.092,5,0.08,12,1.467,17,0.269,20,1.875,22,0.907,26,1.814,27,0.013,28,1.256,29,1.589,32,0.425,33,1.602,36,0.401,39,0.092,43,2.022,45,0.005,46,0.007,47,0.005,67,1.326,68,2.263,79,1.71,87,1.517,91,0.44,109,1.6,115,2.024,161,1.162,162,2.104,163,2.125,164,2.104,204,2.617,213,0.742,214,1.084,253,2.752,265,1.9,267,3.829,268,2.19,269,0.983,271,1.947,274,2.926,276,4.982,303,2.644,322,1.236,356,1.162,489,3.373,503,2.752,508,1.9,509,1.807,514,2.385,523,2.752,625,2.644,641,4.374,653,2.926,1393,4.238,1395,4.238,1396,3.857,1416,5.462,1434,2.926,1436,2.926,1437,4.858,1438,4.858,1439,4.858,1440,3.355,1441,3.355,1442,5.711,1443,3.355,1444,4.858,1445,3.355,1446,4.858,1447,3.355,1448,4.858,1449,3.355,1450,3.355,1451,4.858,1452,3.355,1453,3.355,1454,3.355,1455,3.355,1456,3.355,1457,3.355,1458,4.858,1459,3.355]],["title/coverage.html",[1460,4.848]],["body/coverage.html",[0,0.097,1,1.584,5,0.056,6,2.046,7,2.046,9,2.126,12,0.708,16,1.701,27,0.013,32,0.486,35,2.437,45,0.004,46,0.006,47,0.004,49,2.046,50,2.046,59,1.701,61,2.046,82,1.701,92,1.402,97,1.102,99,1.015,128,0.905,147,1.584,162,1.015,164,1.015,166,1.151,171,1.871,173,0.976,176,1.263,178,1.701,180,1.402,182,2.336,183,2.501,185,2.358,187,2.391,188,1.902,189,0.94,191,1.328,213,1.189,215,2.046,227,1.584,228,1.584,245,2.046,253,1.328,281,2.046,295,5.395,357,1.701,358,2.046,369,1.584,397,1.402,400,1.584,429,2.046,460,1.701,475,2.046,482,2.046,513,5.965,529,2.046,530,2.046,545,1.584,546,1.486,557,1.701,558,2.687,559,3.33,563,1.584,567,2.919,568,2.687,569,2.046,589,1.328,593,2.919,638,2.046,641,1.402,665,2.046,673,2.046,679,1.402,680,2.046,684,3.418,685,2.046,696,1.701,697,2.046,700,1.263,701,1.486,703,1.701,723,2.046,724,1.701,731,2.046,732,2.046,757,1.328,759,1.205,790,2.046,791,2.046,804,2.046,827,1.849,828,2.046,835,1.701,836,2.046,847,1.486,868,1.701,888,2.046,912,1.701,924,2.046,931,2.046,941,1.328,942,1.328,965,1.701,1041,2.046,1058,2.046,1062,1.849,1064,2.046,1088,2.046,1113,1.701,1114,2.046,1118,1.486,1128,2.046,1137,4.952,1161,2.046,1167,1.849,1169,1.701,1170,2.046,1176,1.701,1199,2.046,1200,1.701,1206,2.046,1213,2.046,1227,1.849,1238,2.046,1241,1.701,1242,2.046,1248,1.584,1268,2.046,1269,1.701,1273,3.418,1274,2.046,1278,2.346,1284,1.486,1304,2.046,1305,1.701,1309,2.046,1310,2.046,1340,2.046,1347,2.046,1372,2.046,1387,1.584,1388,1.849,1390,2.046,1391,1.701,1392,2.046,1396,1.584,1409,2.046,1410,1.701,1427,2.046,1436,2.046,1460,2.046,1461,2.046,1462,2.345,1463,2.345,1464,5.677,1465,3.704,1466,2.345,1467,2.345,1468,2.345,1469,2.345,1470,2.345,1471,2.345,1472,2.345,1473,2.345,1474,2.345,1475,2.345,1476,2.046,1477,6.318,1478,4.59,1479,2.345,1480,2.345,1481,6.902,1482,2.345,1483,6.034,1484,5.677,1485,2.046,1486,1.849,1487,5.214,1488,3.704,1489,2.345,1490,2.345,1491,3.704,1492,2.345,1493,2.345,1494,5.214,1495,5.214,1496,3.704,1497,3.704,1498,4.548,1499,2.345,1500,2.345]],["title/dependencies.html",[125,1.887,1501,3.383]],["body/dependencies.html",[0,0.079,13,3.07,27,0.013,45,0.007,46,0.01,47,0.007,91,0.636,95,2.185,106,1.566,125,1.871,161,1.679,195,3.82,233,3.82,237,3.82,267,3.82,356,1.679,469,2.611,539,3.82,544,3.82,652,5.455,793,3.82,1072,4.228,1502,6.92,1503,6.251,1504,4.847,1505,6.036,1506,4.847,1507,4.847,1508,4.847,1509,6.251,1510,4.847,1511,4.847,1512,4.847,1513,6.251,1514,4.847,1515,4.847,1516,4.847,1517,4.847,1518,4.847,1519,4.847,1520,4.847,1521,4.847,1522,4.847,1523,4.847,1524,4.228,1525,4.847,1526,4.228,1527,4.847,1528,4.847,1529,4.847,1530,4.847,1531,4.847,1532,4.847,1533,4.847,1534,4.847,1535,4.847,1536,4.847,1537,4.847,1538,4.228,1539,4.847,1540,4.847,1541,4.847]],["title/miscellaneous/enumerations.html",[1542,2.143,1543,4.264]],["body/miscellaneous/enumerations.html",[17,0.457,27,0.011,45,0.009,46,0.011,47,0.009,164,2.467,166,2.796,203,4.969,352,4.132,353,4.132,437,4.969,470,5.018,916,6.034,919,5.452,1270,4.969,1424,6.034,1542,3.609,1543,4.969,1544,5.696,1545,5.696,1546,5.696,1547,5.696,1548,5.696,1549,5.696,1550,5.696,1551,5.696,1552,5.696,1553,5.696,1554,5.696,1555,5.696,1556,5.696,1557,5.696,1558,5.696,1559,5.696,1560,5.696,1561,5.696,1562,5.696,1563,5.696,1564,5.696,1565,5.696,1566,5.696,1567,5.696]],["title/miscellaneous/functions.html",[1542,2.143,1568,4.264]],["body/miscellaneous/functions.html",[17,0.474,27,0.011,45,0.009,46,0.011,47,0.009,85,4.288,128,2.922,343,4.66,493,4.288,1485,5.157,1486,4.66,1505,5.157,1524,5.157,1526,5.157,1542,3.745,1568,5.157,1569,5.911,1570,5.911,1571,5.911,1572,5.911,1573,5.911,1574,5.911,1575,5.911,1576,5.911,1577,5.911,1578,5.911,1579,5.911,1580,5.911,1581,5.911,1582,5.911,1583,5.911,1584,5.911,1585,5.911]],["title/index.html",[17,0.271,1586,3.383,1587,3.383]],["body/index.html",[8,1.663,14,3.978,27,0.011,45,0.009,46,0.011,47,0.009,195,4.644,209,5.139,356,2.041,1461,5.139,1538,5.139,1588,7.558,1589,7.058,1590,5.891,1591,5.891,1592,5.891,1593,7.058,1594,5.891,1595,5.891,1596,5.891,1597,5.891,1598,5.891,1599,5.891,1600,5.891,1601,5.891,1602,5.891,1603,5.891,1604,5.891,1605,5.891,1606,5.891,1607,5.891,1608,5.891]],["title/modules.html",[124,2.145]],["body/modules.html",[27,0.01,45,0.008,46,0.01,47,0.008,123,3.771,124,2.006,134,3.51,135,3.293,136,3.51,137,3.107,138,3.107,139,3.107,140,3.107,141,3.51,142,3.107,143,3.107,144,3.107,145,3.51,146,3.293,1609,8.387,1610,8.387,1611,8.387,1612,8.387]],["title/overview.html",[1613,4.848]],["body/overview.html",[2,1.005,27,0.013,45,0.004,46,0.006,47,0.004,48,1.508,60,0.905,92,4.028,122,0.715,123,5.96,124,1.08,125,1.08,126,1.165,127,1.165,128,1.08,129,1.165,130,1.165,131,2.441,132,2.441,133,2.441,134,5.154,135,4.269,136,4.16,137,4.149,138,4.149,139,4.672,140,4.149,141,5.278,142,4.149,143,4.028,144,4.149,145,4.16,146,4.503,147,3.466,148,1.768,149,1.165,150,1.165,214,0.905,223,2.441,225,2.441,226,2.441,227,3.466,228,3.466,253,3.817,340,2.03,397,4.028,476,2.441,477,2.441,478,2.441,561,2.441,562,2.441,563,3.466,586,2.441,587,2.441,588,2.441,589,3.817,641,4.028,700,3.63,733,2.441,734,2.441,735,2.441,757,3.817,759,3.461,925,2.441,927,2.441,928,2.441,941,3.817,942,3.817,1062,2.206,1081,2.441,1082,2.441,1083,2.441,1118,3.252,1123,2.441,1125,2.441,1207,2.441,1208,2.441,1209,2.441,1311,2.441,1312,2.441,1313,2.441,1341,2.441,1342,2.441,1343,2.441,1385,2.441,1386,2.441,1387,3.466,1428,2.441,1430,2.441,1431,2.441,1613,2.441,1614,2.799,1615,2.799,1616,2.799,1617,2.799,1618,2.799]],["title/miscellaneous/variables.html",[1542,2.143,1619,4.264]],["body/miscellaneous/variables.html",[0,0.054,17,0.343,24,3.649,25,3.105,27,0.013,30,4.845,33,1.611,45,0.007,46,0.009,47,0.007,68,1.25,75,2.559,99,3.147,109,1.857,247,2.712,264,2.89,271,2.79,301,4.907,322,0.926,350,3.374,544,3.374,545,3.89,546,3.649,551,4.54,644,3.734,965,4.178,1227,4.54,1369,3.734,1476,3.734,1486,4.54,1498,3.734,1542,2.712,1619,3.734,1620,6.963,1621,4.28,1622,4.28,1623,4.28,1624,4.28,1625,4.28,1626,4.28,1627,4.28,1628,4.28,1629,4.28,1630,4.28,1631,4.28,1632,4.28,1633,4.28,1634,4.28,1635,4.28,1636,4.28,1637,4.28,1638,4.28,1639,4.28,1640,4.28,1641,4.28,1642,4.28,1643,4.28,1644,4.28,1645,4.28,1646,4.28,1647,4.28,1648,4.28,1649,6.51,1650,5.76,1651,4.28,1652,4.28,1653,4.28,1654,4.28]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":513,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1497,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":340,"title":{"controllers/TypeGreenScoreController-1.html":{}},"body":{"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"overview.html":{}}}],["1.0.0",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":303,"title":{},"body":{"classes/Company.html":{},"injectables/StatsService.html":{},"injectables/UserService.html":{}}}],["100",{"_index":295,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["11",{"_index":1615,"title":{},"body":{"overview.html":{}}}],["11/13",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1614,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1060,"title":{},"body":{"classes/Role.html":{}}}],["150",{"_index":809,"title":{},"body":{"classes/Poi.html":{}}}],["16777215",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1617,"title":{},"body":{"overview.html":{}}}],["2.0.1",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1380,"title":{},"body":{"classes/User.html":{}}}],["2020",{"_index":302,"title":{},"body":{"classes/Company.html":{}}}],["21",{"_index":1616,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1167,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{},"coverage.html":{}}}],["255",{"_index":1378,"title":{},"body":{"classes/User.html":{}}}],["3.0.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":821,"title":{},"body":{"classes/Poi.html":{}}}],["33",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["3600s",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["38",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["4.0.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":307,"title":{},"body":{"classes/Company.html":{}}}],["5.0.0",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["5/13",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":337,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"classes/User.html":{}}}],["5ea565",{"_index":1163,"title":{},"body":{"classes/Tag.html":{}}}],["6",{"_index":823,"title":{},"body":{"classes/Poi.html":{}}}],["6.1.1",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["6/10",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1469,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1276,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["75",{"_index":313,"title":{},"body":{"classes/Company.html":{}}}],["8",{"_index":1618,"title":{},"body":{"overview.html":{}}}],["84",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken(token",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokeninterfaces",{"_index":16,"title":{"interfaces/AccessTokenInterfaces.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["account",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["activity",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":374,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/PoiDto.html":{},"controllers/UserController.html":{}}}],["addcompany",{"_index":362,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["addcompany(@body",{"_index":412,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addcompany(companydto",{"_index":368,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["added",{"_index":375,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addgreenscore",{"_index":1315,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addgreenscore(typegreenscoredto",{"_index":1322,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addjointagpoi",{"_index":594,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjointagpoi(poitoadd",{"_index":604,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addmanypercenttypedcandnewtype(@body",{"_index":711,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addnewpercenttypegcandpoi(@body",{"_index":708,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addpercenttypegcandpoi",{"_index":739,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegcandpoi(percenttypegcandpoi",{"_index":746,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegreenscoreandpoiservice",{"_index":762,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpoi",{"_index":839,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["addpoi(@body",{"_index":875,"title":{},"body":{"controllers/PoiController.html":{}}}],["addpoi(poidto",{"_index":846,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["address",{"_index":283,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["addtag",{"_index":1171,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtag(@body",{"_index":1192,"title":{},"body":{"controllers/TagsController.html":{}}}],["addtag(tagdto",{"_index":1175,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtype",{"_index":1243,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtype(@body",{"_index":1262,"title":{},"body":{"controllers/TypeController.html":{}}}],["addtype(typedto",{"_index":1247,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtypegreenscore",{"_index":1279,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(@body",{"_index":1296,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(typegreenscoreandpoidto",{"_index":1283,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["adduser",{"_index":1393,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduser(@body",{"_index":1405,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(userdto",{"_index":1395,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["agence",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allows",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{}}}],["allpercent",{"_index":781,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.foreach((percent",{"_index":784,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.length",{"_index":782,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpoi",{"_index":1003,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoi.map(async",{"_index":1006,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoiwithtagsandtypespromise",{"_index":1005,"title":{},"body":{"injectables/PoiService.html":{}}}],["already",{"_index":516,"title":{},"body":{"injectables/CompanyService.html":{}}}],["ancestorwhere",{"_index":966,"title":{},"body":{"injectables/PoiService.html":{}}}],["api",{"_index":1589,"title":{},"body":{"index.html":{}}}],["apibasicauth",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["apibearerauth",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apiunauthorizedresponse()@apiokresponse()@useguards(undefined)@useguards(roleguard)@get('profile",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["apibody",{"_index":403,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apicreatedresponse",{"_index":404,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiforbiddenresponse()@post()@usepipes(new",{"_index":848,"title":{},"body":{"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiunauthorizedresponse()@apibody({type",{"_index":370,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiforbiddenresponse",{"_index":870,"title":{},"body":{"controllers/PoiController.html":{}}}],["apigoneresponse",{"_index":871,"title":{},"body":{"controllers/PoiController.html":{}}}],["apinotfoundresponse",{"_index":405,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apiokresponse",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get('one/:id')@usepipes(new",{"_index":857,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('admin",{"_index":854,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@put(':id')@useguards(roleguard)@usepipes(new",{"_index":865,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":862,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/name",{"_index":860,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":377,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":386,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@put(':id')@usepipes(new",{"_index":390,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":383,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(undefined)@post('auth/login",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":472,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@column",{"_index":688,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@column({length",{"_index":1166,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty()@isemail",{"_index":676,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnumber",{"_index":725,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["apiproperty()@isstring",{"_index":674,"title":{},"body":{"classes/LoginDto.html":{},"classes/TypeGreenScoreDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":692,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":686,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty({description",{"_index":434,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":473,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isnumber()@isoptional",{"_index":895,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isoptional",{"_index":444,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["apipropertyoptional({description",{"_index":452,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional({type",{"_index":904,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apis",{"_index":1585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apitags",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["apitags('company",{"_index":406,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apitags('login",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('poi",{"_index":872,"title":{},"body":{"controllers/PoiController.html":{}}}],["apitags('stats",{"_index":1120,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('tags",{"_index":1190,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags('type",{"_index":1260,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["apitags('user",{"_index":1403,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["app",{"_index":1574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":1389,"title":{},"body":{"modules/UserAppModule.html":{}}}],["app.service",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{}}}],["app.service.ts",{"_index":1390,"title":{},"body":{"injectables/UserAppService.html":{},"coverage.html":{}}}],["app/user",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["appcontroller",{"_index":59,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":123,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":1578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":147,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":794,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["around",{"_index":330,"title":{},"body":{"classes/Company.html":{}}}],["array",{"_index":905,"title":{},"body":{"injectables/PoiDto.html":{}}}],["array.isarray(newvalue.typegreenscore",{"_index":1048,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["asc",{"_index":528,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":52,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/PoiDto.html":{}}}],["auth.service",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/access",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/auth.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["authentication",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["authmodule",{"_index":134,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorize",{"_index":57,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["authservice",{"_index":92,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autre",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["await",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["back",{"_index":1588,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1043,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["badrequestexception('idgreen",{"_index":1056,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["base",{"_index":1607,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1452,"title":{},"body":{"injectables/UserService.html":{}}}],["begin",{"_index":306,"title":{},"body":{"classes/Company.html":{}}}],["begindeal",{"_index":284,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["bio",{"_index":1201,"title":{},"body":{"classes/TagsDto.html":{}}}],["body",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":1071,"title":{},"body":{"guards/RoleGuard.html":{}}}],["bootstrap",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1612,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1609,"title":{},"body":{"modules.html":{}}}],["call",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["callhandler",{"_index":534,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["canactivate",{"_index":1065,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":1069,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cascade",{"_index":573,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":575,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["catch",{"_index":523,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["cf",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{}}}],["check",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["checkiftagjoin",{"_index":1015,"title":{},"body":{"injectables/PoiService.html":{}}}],["checktag",{"_index":595,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["checktag(tag",{"_index":608,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["city",{"_index":285,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["client",{"_index":316,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["client'})@isnumberstring",{"_index":455,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["client'})@isstring",{"_index":435,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["cluster_appmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":476,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_exports",{"_index":477,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":478,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule",{"_index":561,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule_providers",{"_index":562,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule",{"_index":586,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_exports",{"_index":587,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_providers",{"_index":588,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule",{"_index":733,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_exports",{"_index":734,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_providers",{"_index":735,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_poimodule",{"_index":925,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_exports",{"_index":927,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_imports",{"_index":926,"title":{},"body":{"modules/PoiModule.html":{}}}],["cluster_poimodule_providers",{"_index":928,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1081,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1082,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1083,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":1123,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_imports",{"_index":1124,"title":{},"body":{"modules/StatsModule.html":{}}}],["cluster_statsmodule_providers",{"_index":1125,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1207,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1208,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1209,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule",{"_index":1311,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_exports",{"_index":1312,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_providers",{"_index":1313,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typemodule",{"_index":1341,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_exports",{"_index":1342,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_providers",{"_index":1343,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_userappmodule",{"_index":1385,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_userappmodule_providers",{"_index":1386,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1428,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1430,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1429,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1431,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["clément",{"_index":1595,"title":{},"body":{"index.html":{}}}],["co",{"_index":352,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":350,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colortag",{"_index":1162,"title":{},"body":{"classes/Tag.html":{}}}],["column",{"_index":347,"title":{},"body":{"classes/Company.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["column({default",{"_index":339,"title":{},"body":{"classes/Company.html":{},"classes/Tag.html":{}}}],["column({length",{"_index":294,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":815,"title":{},"body":{"classes/Poi.html":{}}}],["column({type",{"_index":299,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{}}}],["column({unique",{"_index":335,"title":{},"body":{"classes/Company.html":{}}}],["company",{"_index":166,"title":{"classes/Company.html":{}},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/StatsService.html":{},"classes/TypeDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["company'})@isstring",{"_index":448,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["company.controller",{"_index":480,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.length",{"_index":512,"title":{},"body":{"injectables/CompanyService.html":{}}}],["company.service",{"_index":398,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{}}}],["company/company.service",{"_index":1134,"title":{},"body":{"injectables/StatsService.html":{}}}],["company/companyentity",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["company/enum/type.enum",{"_index":1258,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["companycontroller",{"_index":357,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companydata",{"_index":519,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydata.id",{"_index":520,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydto",{"_index":369,"title":{"injectables/CompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyentity",{"_index":399,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["companyinterface",{"_index":460,"title":{"interfaces/CompanyInterface.html":{}},"body":{"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["companymodule",{"_index":135,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["companyrepository",{"_index":491,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companys",{"_index":361,"title":{},"body":{"controllers/CompanyController.html":{}}}],["companyservice",{"_index":397,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["companytype",{"_index":1149,"title":{},"body":{"injectables/StatsService.html":{}}}],["companytypepromise",{"_index":1147,"title":{},"body":{"injectables/StatsService.html":{}}}],["compodoc",{"_index":1605,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["compte",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["conflictexception",{"_index":507,"title":{},"body":{"injectables/CompanyService.html":{}}}],["conflictexception(`client",{"_index":515,"title":{},"body":{"injectables/CompanyService.html":{}}}],["connect",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["connection",{"_index":940,"title":{},"body":{"injectables/PoiService.html":{}}}],["console",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["const",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["constructor(accesstoken",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(authservice",{"_index":667,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companyrepository",{"_index":488,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(jointagpoirepository",{"_index":601,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["constructor(jointagpoiservice",{"_index":1130,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(percenttypegreenscoreandpoirepository",{"_index":743,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["constructor(poi",{"_index":829,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["constructor(poirepository",{"_index":939,"title":{},"body":{"injectables/PoiService.html":{}}}],["constructor(private",{"_index":408,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["constructor(readonly",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":1066,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(rolerolerepository",{"_index":1092,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(tagrepository",{"_index":1216,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(typegreenscorerepository",{"_index":1319,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["constructor(typerepository",{"_index":1349,"title":{},"body":{"injectables/TypeService.html":{}}}],["constructor(userrepository",{"_index":1440,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["contains",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":536,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":1074,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1075,"title":{},"body":{"guards/RoleGuard.html":{}}}],["contract",{"_index":305,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["controller",{"_index":9,"title":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('company",{"_index":407,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('green",{"_index":560,"title":{},"body":{"controllers/GreenScoreController.html":{}}}],["controller('percent",{"_index":706,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["controller('poi",{"_index":873,"title":{},"body":{"controllers/PoiController.html":{}}}],["controller('stats",{"_index":1121,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('tags",{"_index":1191,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller('type",{"_index":1261,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["controller('user",{"_index":1404,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["cornet",{"_index":1599,"title":{},"body":{"index.html":{}}}],["correct",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosmetic",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countcompany",{"_index":483,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype",{"_index":484,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype(type",{"_index":495,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countpoi",{"_index":932,"title":{},"body":{"injectables/PoiService.html":{}}}],["countranggreenscore",{"_index":740,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["countranggreenscore(rangemax",{"_index":749,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["counttags",{"_index":596,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttags(tag",{"_index":610,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttype",{"_index":933,"title":{},"body":{"injectables/PoiService.html":{}}}],["counttype(type",{"_index":947,"title":{},"body":{"injectables/PoiService.html":{}}}],["coverage",{"_index":1460,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"classes/Company.html":{}}}],["createdate",{"_index":286,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{}}}],["createdatecolumn",{"_index":311,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{}}}],["d",{"_index":556,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d+|infinity)$/.test(value",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.domainmail",{"_index":552,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.ispoi",{"_index":550,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags",{"_index":553,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags.map((tag",{"_index":554,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/PoiDto.html":{}}}],["data.map((d",{"_index":549,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["database",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/PoiController.html":{}}}],["datapercentandtypegc",{"_index":712,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["date",{"_index":300,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["date'})@isstring",{"_index":438,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["datecreate",{"_index":805,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiService.html":{}}}],["db",{"_index":298,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["de",{"_index":1593,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/role.decorator",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"classes/Role.html":{},"controllers/StatsController.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{}}}],["default",{"_index":301,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Poi.html":{},"classes/Tag.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":51,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":430,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["delete",{"_index":379,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":422,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apiforbiddenresponse()@apinotfoundresponse()@apibearerauth()@useguards(roleguard)@roles('admin')@usepipes(new",{"_index":852,"title":{},"body":{"controllers/PoiController.html":{}}}],["delete(':id')@usepipes(new",{"_index":1399,"title":{},"body":{"controllers/UserController.html":{}}}],["deletecompany",{"_index":363,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletecompany(@param('id",{"_index":423,"title":{},"body":{"controllers/CompanyController.html":{}}}],["deletecompany(idcompany",{"_index":376,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletepercentgcandpoi(@param('id",{"_index":721,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["deletepercenttypegreenscore(idpercentgcandpoi",{"_index":777,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["deletepoi",{"_index":840,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["deletepoi(@param('id",{"_index":886,"title":{},"body":{"controllers/PoiController.html":{}}}],["deletepoi(idpoi",{"_index":851,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["deletetag",{"_index":1172,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetag(@param('id",{"_index":1194,"title":{},"body":{"controllers/TagsController.html":{}}}],["deletetag(idtag",{"_index":1180,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetype",{"_index":1348,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetype(idtype",{"_index":1353,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetypegreenscore",{"_index":1280,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deletetypegreenscore(@param('id",{"_index":1302,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["deletetypegreenscore(idtypegreenscore",{"_index":1287,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deleteuer",{"_index":1394,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(@param('id",{"_index":1407,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(iduser",{"_index":1398,"title":{},"body":{"controllers/UserController.html":{}}}],["deletuser",{"_index":1408,"title":{},"body":{"controllers/UserController.html":{}}}],["deltetype",{"_index":1244,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(@param('id",{"_index":1266,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(idtype",{"_index":1251,"title":{},"body":{"controllers/TypeController.html":{}}}],["demo",{"_index":216,"title":{},"body":{"injectables/AppService.html":{}}}],["dependencies",{"_index":125,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/TagsDto.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["dev",{"_index":1597,"title":{},"body":{"index.html":{}}}],["different",{"_index":1571,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doc",{"_index":699,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["documentation",{"_index":1461,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":315,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["domainmail",{"_index":287,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["donnée",{"_index":1608,"title":{},"body":{"index.html":{}}}],["drink",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["du",{"_index":1591,"title":{},"body":{"index.html":{}}}],["ecole",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["email",{"_index":1416,"title":{},"body":{"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["employees",{"_index":317,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["en",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":321,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["enddeal",{"_index":288,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["entities",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":282,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["entitytypeinterceptor",{"_index":400,"title":{"injectables/EntityTypeInterceptor.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["enum",{"_index":457,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["enum/price.enum",{"_index":917,"title":{},"body":{"injectables/PoiDto.html":{}}}],["enum/type.enum",{"_index":471,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["enum/typepoienum",{"_index":920,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{}}}],["enumeration",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumeration[n",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1543,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["etc",{"_index":355,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["etc...)'})@isstring",{"_index":1203,"title":{},"body":{"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["ex",{"_index":318,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["exadecimalcode",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example.com",{"_index":319,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["example.com)'})@isoptional()@isstring",{"_index":441,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["exatorgbaobject",{"_index":545,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exatorgbaobject(tag.colortag",{"_index":555,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"injectables/TagsService.html":{}}}],["exception",{"_index":501,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["executioncontext",{"_index":533,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["exist",{"_index":517,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["expect",{"_index":346,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["expect'})@isoptional()@isnumber",{"_index":453,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["expiresin",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1505,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":654,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":650,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":658,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":690,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["fashion",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filterint",{"_index":546,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterint(elem",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[0].trim",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[1].trim",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[2].trim",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[3].replace",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(idpoi",{"_index":881,"title":{},"body":{"controllers/PoiController.html":{}}}],["filterint(idtags",{"_index":1046,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.idtype",{"_index":1051,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.percent",{"_index":1053,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(value.idpoi",{"_index":799,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.idtypegreenscore",{"_index":801,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.percent",{"_index":803,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["findbypoi(idpoi",{"_index":772,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["first",{"_index":1411,"title":{},"body":{"classes/UserDto.html":{}}}],["firstname",{"_index":1373,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["food",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formattopercenttgcandpoi",{"_index":934,"title":{},"body":{"injectables/PoiService.html":{}}}],["formattopercenttgcandpoi(poi",{"_index":950,"title":{},"body":{"injectables/PoiService.html":{}}}],["forwardref",{"_index":736,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["found",{"_index":503,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1568,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generaterandexadecimalcolor",{"_index":1227,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/one/:id",{"_index":1298,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["get('one/:id",{"_index":414,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["get('order/date",{"_index":427,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["get('order/name",{"_index":883,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('percent/:id",{"_index":718,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["get('profile",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('admin",{"_index":381,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getallcompany",{"_index":364,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["getallcompanytag",{"_index":597,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallcompanytag(poitofind",{"_index":612,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallpercenttypeandpoi",{"_index":713,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getallpercenttypegreenscoreandpoi",{"_index":770,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getallpoi",{"_index":841,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["getallpoiandtag",{"_index":598,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getalltag",{"_index":1173,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getalltype",{"_index":1316,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["getalltypegreenscore",{"_index":1281,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getbyids",{"_index":1317,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyids(idtypes",{"_index":1326,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyidtypgcandpoi",{"_index":741,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getbyidtypgcandpoi(poi",{"_index":753,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getcompanyandtags",{"_index":842,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(@param('id",{"_index":877,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(idpoi",{"_index":856,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyorderbydate",{"_index":365,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getcount",{"_index":789,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getenumkey",{"_index":965,"title":{},"body":{"injectables/PoiService.html":{},"injectables/TypeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenumkey(typeenum",{"_index":1367,"title":{},"body":{"injectables/TypeService.html":{}}}],["getenumkey(typepoienum",{"_index":1039,"title":{},"body":{"injectables/PoiService.html":{}}}],["getgreenscore",{"_index":1129,"title":{},"body":{"injectables/StatsService.html":{}}}],["getgreenscorepassmark",{"_index":742,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getgreenscorepassmark(poi",{"_index":755,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["gethello",{"_index":219,"title":{},"body":{"injectables/AppService.html":{}}}],["getinfrole",{"_index":1089,"title":{},"body":{"injectables/RoleService.html":{}}}],["getinfrole(idrole",{"_index":1095,"title":{},"body":{"injectables/RoleService.html":{}}}],["getone",{"_index":485,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getone(idcompany",{"_index":499,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getonecompany",{"_index":366,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(@param('id",{"_index":416,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(id",{"_index":385,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getoneorfailbyrole",{"_index":1090,"title":{},"body":{"injectables/RoleService.html":{}}}],["getoneorfailbyrole(roletype",{"_index":1098,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonepercenttypeandpoi(@param('id",{"_index":715,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getonepercenttypegreenscoreandpoi(idpercent",{"_index":774,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getonetag",{"_index":1174,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetag(@param('id",{"_index":1197,"title":{},"body":{"controllers/TagsController.html":{}}}],["getonetag(idtag",{"_index":1185,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetype",{"_index":1245,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetype(@param('id",{"_index":1264,"title":{},"body":{"controllers/TypeController.html":{}}}],["getonetype(idtype",{"_index":1253,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetypegreenscore",{"_index":1282,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(@param('id",{"_index":1299,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(idtypegreenscore",{"_index":1292,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonlyrole",{"_index":1091,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonlyrole(roles",{"_index":1101,"title":{},"body":{"injectables/RoleService.html":{}}}],["getpercentofpoi(@param('id",{"_index":719,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getpoi",{"_index":935,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoi(idpoi",{"_index":954,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags",{"_index":936,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags(idpoi",{"_index":956,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoibyname",{"_index":843,"title":{},"body":{"controllers/PoiController.html":{}}}],["getpoiorderbydate",{"_index":844,"title":{},"body":{"controllers/PoiController.html":{}}}],["getprofile",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["getrawmany",{"_index":635,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/RoleService.html":{}}}],["getschemapath",{"_index":918,"title":{},"body":{"injectables/PoiDto.html":{}}}],["getstat",{"_index":1116,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["gettags",{"_index":1214,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettags(idstags",{"_index":1223,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagscompany",{"_index":599,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagscompany(poitofind",{"_index":616,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagsname",{"_index":1215,"title":{},"body":{"injectables/TagsService.html":{}}}],["getting",{"_index":1586,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":1318,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["gettype(idtype",{"_index":1329,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["gettypepoi",{"_index":937,"title":{},"body":{"injectables/PoiService.html":{}}}],["gettypepoipromise",{"_index":1154,"title":{},"body":{"injectables/StatsService.html":{}}}],["gettypes",{"_index":1246,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["gettypes(idstypes",{"_index":1358,"title":{},"body":{"injectables/TypeService.html":{}}}],["getuser",{"_index":1437,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1444,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail",{"_index":1438,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail(email",{"_index":1446,"title":{},"body":{"injectables/UserService.html":{}}}],["getvaluerba",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grand",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["green",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["greenscore",{"_index":806,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/StatsService.html":{}}}],["greenscorecontroller",{"_index":557,"title":{"controllers/GreenScoreController.html":{}},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"coverage.html":{}}}],["greenscoremodule",{"_index":136,"title":{"modules/GreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["greenscoreservice",{"_index":563,"title":{"injectables/GreenScoreService.html":{}},"body":{"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":1062,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/role.guard",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["guards",{"_index":1063,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guess",{"_index":447,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["guillaume",{"_index":1598,"title":{},"body":{"index.html":{}}}],["haller",{"_index":1596,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":1439,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":1448,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":1077,"title":{},"body":{"guards/RoleGuard.html":{}}}],["header",{"_index":639,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["headers",{"_index":1582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hello",{"_index":221,"title":{},"body":{"injectables/AppService.html":{}}}],["helloo",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["helmet",{"_index":1526,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["helps",{"_index":1576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":328,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["hex",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["hexadecimal",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hexatorgba",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hexatorgba.split('(')[1].split(',').filter((elem",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hextorgba",{"_index":542,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["hextorgba(exadecimalcode",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["high",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":1581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/techniques/authentication",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":289,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{}}}],["idcompany",{"_index":380,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["identifier",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["idpercent",{"_index":716,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["idpoi",{"_index":633,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["idrole",{"_index":1097,"title":{},"body":{"injectables/RoleService.html":{}}}],["idstags",{"_index":1225,"title":{},"body":{"injectables/TagsService.html":{}}}],["idstypes",{"_index":1360,"title":{},"body":{"injectables/TypeService.html":{}}}],["idsup",{"_index":1110,"title":{},"body":{"injectables/RoleService.html":{}}}],["idtag",{"_index":631,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["idtype",{"_index":681,"title":{},"body":{"classes/PercentAndIdTag.html":{},"controllers/TypeController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["idtypegreenscore",{"_index":693,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["idtypes",{"_index":1328,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["iduser",{"_index":1401,"title":{},"body":{"controllers/UserController.html":{}}}],["ignoreexpiration",{"_index":659,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imateapotexception",{"_index":671,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"injectables/CompanyDto.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["incubateur",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["informations",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["infra/server",{"_index":1600,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":213,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":214,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":509,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["injectrepository(company",{"_index":510,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(jointagpoientity",{"_index":621,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["injectrepository(percenttypegreenscoreandpoi",{"_index":760,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["injectrepository(poi",{"_index":968,"title":{},"body":{"injectables/PoiService.html":{}}}],["injectrepository(role",{"_index":1103,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(tag",{"_index":1228,"title":{},"body":{"injectables/TagsService.html":{}}}],["injectrepository(type",{"_index":1361,"title":{},"body":{"injectables/TypeService.html":{}}}],["injectrepository(typegreenscore",{"_index":1332,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["injectrepository(user",{"_index":1450,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect('tag",{"_index":630,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["inserttoobject",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.a",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.b",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.g",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.r",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integer",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":531,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["intercept(context",{"_index":532,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["interceptor/entity",{"_index":401,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["interest",{"_index":838,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["interface",{"_index":35,"title":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/company.interface",{"_index":461,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["interface/type.interface",{"_index":1272,"title":{},"body":{"classes/TypeDto.html":{}}}],["interfaces",{"_index":48,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":37,"title":{},"body":{"classes/AccessToken.html":{}}}],["interfaces/percent",{"_index":729,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["interfaces/poi.interface",{"_index":913,"title":{},"body":{"injectables/PoiDto.html":{}}}],["interfaces/tags.interface",{"_index":1205,"title":{},"body":{"classes/TagsDto.html":{}}}],["interfaces/type",{"_index":1307,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["interfaces/user.interface",{"_index":1423,"title":{},"body":{"classes/UserDto.html":{}}}],["isarray",{"_index":914,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isdate",{"_index":462,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isdatestring",{"_index":463,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isemail",{"_index":678,"title":{},"body":{"classes/LoginDto.html":{},"classes/UserDto.html":{}}}],["isenum",{"_index":464,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["isenum(priceenum",{"_index":923,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isenum(roleenum",{"_index":1426,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(typeenum",{"_index":474,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isenum(typepoienum",{"_index":922,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isnan(percentandtypegc.idtype",{"_index":1054,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnan(percentandtypegc.percent",{"_index":1055,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnumber",{"_index":465,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{}}}],["isnumberstring",{"_index":466,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isoptional",{"_index":467,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isstring",{"_index":468,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["join",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["joincolumn",{"_index":581,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["jointagpoi",{"_index":622,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoientity",{"_index":180,"title":{"classes/JoinTagPoiEntity.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"coverage.html":{}}}],["jointagpoimodule",{"_index":137,"title":{"modules/JoinTagPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["jointagpoirepository",{"_index":603,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoiservice",{"_index":589,"title":{"injectables/JoinTagPoiService.html":{}},"body":{"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["json",{"_index":1603,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":657,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":227,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":644,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["keysenum",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keysenum.push(enumeration[n",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":54,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["last",{"_index":1414,"title":{},"body":{"classes/UserDto.html":{}}}],["lastname",{"_index":1374,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["lat",{"_index":290,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["latitude",{"_index":327,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["legend",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":336,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["limit",{"_index":1524,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["line:no",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["line:variable",{"_index":42,"title":{},"body":{"classes/AccessToken.html":{}}}],["local",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":228,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":82,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logo",{"_index":807,"title":{},"body":{"classes/Poi.html":{},"interfaces/PoiInterface.html":{}}}],["long",{"_index":291,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["longitude",{"_index":334,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["longtext",{"_index":813,"title":{},"body":{"classes/Poi.html":{}}}],["low",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["madu",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["maduequipe",{"_index":1594,"title":{},"body":{"index.html":{}}}],["mail",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["main",{"_index":1570,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":360,"title":{},"body":{"controllers/CompanyController.html":{}}}],["many",{"_index":344,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["manytoone",{"_index":582,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(type",{"_index":583,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":571,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["map",{"_index":540,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":793,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"dependencies.html":{}}}],["method",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":1573,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":1542,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":122,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":124,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["mysql",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["n",{"_index":1369,"title":{},"body":{"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["nan",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nbcompany",{"_index":1142,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore",{"_index":1135,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore.push(await",{"_index":1138,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbpoi",{"_index":1140,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbtype",{"_index":1150,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbworker",{"_index":292,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["nest",{"_index":218,"title":{},"body":{"injectables/AppService.html":{}}}],["nestinterceptor",{"_index":538,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["nestjs",{"_index":1602,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1072,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"controllers/StatsController.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["network",{"_index":433,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["new",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newvalue",{"_index":797,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["newvalue.idpoi",{"_index":798,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.idtypegreenscore",{"_index":800,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.percent",{"_index":802,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.tags",{"_index":1044,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.typegreenscore",{"_index":1047,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["next",{"_index":41,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["next.handle().pipe(map(data",{"_index":548,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["notfoundexception",{"_index":508,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`company",{"_index":524,"title":{},"body":{"injectables/CompanyService.html":{}}}],["notfoundexception(`percenttypegreenscoreandpoi",{"_index":776,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["notfoundexception(`poi",{"_index":994,"title":{},"body":{"injectables/PoiService.html":{}}}],["notfoundexception(`role",{"_index":1105,"title":{},"body":{"injectables/RoleService.html":{}}}],["notfoundexception(`tag",{"_index":1235,"title":{},"body":{"injectables/TagsService.html":{}}}],["notfoundexception(`type",{"_index":1336,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["notfoundexception(`user",{"_index":1458,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":502,"title":{},"body":{"injectables/CompanyService.html":{}}}],["null",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Poi.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":308,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{}}}],["number",{"_index":322,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["number(value",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyDto.html":{}}}],["observable",{"_index":537,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["office",{"_index":1592,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":572,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["one",{"_index":388,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["onupdate",{"_index":574,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["option",{"_index":643,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":527,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbydate",{"_index":486,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbyname",{"_index":938,"title":{},"body":{"injectables/PoiService.html":{}}}],["orwhere('id",{"_index":1109,"title":{},"body":{"injectables/RoleService.html":{}}}],["os",{"_index":1259,"title":{},"body":{"controllers/TypeController.html":{}}}],["out",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":432,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["overview",{"_index":1613,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1501,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parseintpipe",{"_index":393,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":652,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":649,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":655,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":661,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["percent",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["percent.percent",{"_index":785,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentandidtag",{"_index":679,"title":{"classes/PercentAndIdTag.html":{}},"body":{"classes/PercentAndIdTag.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["percentandtypegc",{"_index":1057,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.idtype",{"_index":1050,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.percent",{"_index":1052,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentgc",{"_index":778,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentgcanddto",{"_index":988,"title":{},"body":{"injectables/PoiService.html":{}}}],["percentpoiantypegcpromise",{"_index":969,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegcandpoi",{"_index":748,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegcandpoiaddedpromise",{"_index":986,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoi",{"_index":191,"title":{"classes/PercentTypeGreenScoreAndPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoicontroller",{"_index":696,"title":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoidto",{"_index":701,"title":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoientity",{"_index":702,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiinterface",{"_index":724,"title":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{}},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoimodule",{"_index":138,"title":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoirepository",{"_index":745,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservice",{"_index":700,"title":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoiservicedto",{"_index":763,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservicedto.percent",{"_index":768,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoitoadd",{"_index":984,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitoadd.map(async",{"_index":987,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitransformationpipe",{"_index":703,"title":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["pipe/percent",{"_index":704,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["pipe/poi.transformation.pipe",{"_index":869,"title":{},"body":{"controllers/PoiController.html":{}}}],["pipetransform",{"_index":796,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["pme",{"_index":1270,"title":{},"body":{"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["poi",{"_index":173,"title":{"classes/Poi.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi'})@isnumberstring",{"_index":900,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring",{"_index":889,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring()@isoptional",{"_index":893,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi.address",{"_index":1020,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.city",{"_index":1022,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.controller",{"_index":737,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["poi.controller.ts",{"_index":697,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"coverage.html":{}}}],["poi.description",{"_index":1024,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.greenscore",{"_index":997,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.id",{"_index":585,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi.interface",{"_index":730,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi.interface.ts",{"_index":732,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi.lat",{"_index":1034,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.long",{"_index":1036,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["poi.module.ts",{"_index":590,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["poi.name",{"_index":1026,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.postalcode",{"_index":1028,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.price",{"_index":1030,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.service",{"_index":591,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["poi.service.ts",{"_index":593,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["poi.service.ts:107",{"_index":751,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:15",{"_index":744,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:24",{"_index":606,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:29",{"_index":747,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:35",{"_index":615,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:45",{"_index":619,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:55",{"_index":617,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:67",{"_index":613,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:77",{"_index":756,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:80",{"_index":611,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:88",{"_index":609,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:9",{"_index":602,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:98",{"_index":754,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.transformation.pipe",{"_index":705,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["poi.transformation.pipe.ts",{"_index":791,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi.transformation.pipe.ts:12",{"_index":795,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["poi.type",{"_index":1032,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi/interfaces/percent",{"_index":731,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi/join",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/jointagpoientity",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"classes/PoiAndTags.html":{}}}],["poi/jointagpoientity.ts",{"_index":569,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"coverage.html":{}}}],["poi/jointagpoientity.ts:18",{"_index":580,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:27",{"_index":577,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:8",{"_index":570,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/percent",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/percentandidtag",{"_index":1331,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts",{"_index":723,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:12",{"_index":727,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:16",{"_index":728,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:8",{"_index":726,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoientity",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"injectables/PoiService.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts",{"_index":685,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:10",{"_index":687,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:14",{"_index":689,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:25",{"_index":694,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:35",{"_index":691,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/pipe/percent",{"_index":790,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi/poi.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/StatsModule.html":{}}}],["poi/poi.service",{"_index":758,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/StatsService.html":{}}}],["poi/poientity",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiadded",{"_index":992,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiandtags",{"_index":827,"title":{"classes/PoiAndTags.html":{}},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["poicontroller",{"_index":835,"title":{"controllers/PoiController.html":{}},"body":{"controllers/PoiController.html":{},"modules/PoiModule.html":{},"coverage.html":{}}}],["poidto",{"_index":847,"title":{"injectables/PoiDto.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poidto.address",{"_index":1021,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.city",{"_index":1023,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.description",{"_index":1025,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.idpoi",{"_index":1018,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.lat",{"_index":1035,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.long",{"_index":1037,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.name",{"_index":1027,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.postalcode",{"_index":1029,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.price",{"_index":1031,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.tags.map(async",{"_index":1013,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.type",{"_index":1033,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.typegreenscore",{"_index":977,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.typegreenscore.map((type",{"_index":980,"title":{},"body":{"injectables/PoiService.html":{}}}],["poientity",{"_index":832,"title":{},"body":{"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poifind",{"_index":766,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiid",{"_index":576,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poiinterface",{"_index":912,"title":{"interfaces/PoiInterface.html":{}},"body":{"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["poimodule",{"_index":139,"title":{"modules/PoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["point",{"_index":837,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["poirepository",{"_index":944,"title":{},"body":{"injectables/PoiService.html":{}}}],["pois",{"_index":332,"title":{},"body":{"classes/Company.html":{}}}],["poiservice",{"_index":757,"title":{"injectables/PoiService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["poitoadd",{"_index":607,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind",{"_index":614,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind.id",{"_index":634,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitransformationpipe",{"_index":868,"title":{"injectables/PoiTransformationPipe.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poiwithtype",{"_index":1007,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.greenscore",{"_index":1009,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.tags",{"_index":1008,"title":{},"body":{"injectables/PoiService.html":{}}}],["port",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["post('and",{"_index":710,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["post('auth/login",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["post()@usepipes(new",{"_index":1177,"title":{},"body":{"controllers/TagsController.html":{},"controllers/UserController.html":{}}}],["postal",{"_index":349,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["postalcode",{"_index":293,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["prefix",{"_index":359,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["preset",{"_index":1420,"title":{},"body":{"classes/UserDto.html":{}}}],["price",{"_index":808,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["priceenum",{"_index":916,"title":{},"body":{"injectables/PoiDto.html":{},"miscellaneous/enumerations.html":{}}}],["priceenum})@isenum(priceenum",{"_index":902,"title":{},"body":{"injectables/PoiDto.html":{}}}],["primarygeneratedcolumn",{"_index":323,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["private",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["process.env.db_host",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_token",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["profile",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["promise",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["promise.all(allpoiwithtagsandtypespromise",{"_index":1010,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(companytypepromise",{"_index":1160,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(gettypepoipromise",{"_index":1159,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(percentpoiantypegcpromise",{"_index":974,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(percenttypegcandpoiaddedpromise",{"_index":990,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(tagaddedpromise",{"_index":991,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(tagaddpromise",{"_index":1019,"title":{},"body":{"injectables/PoiService.html":{}}}],["properly",{"_index":1575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/JoinTagPoiEntity.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["property",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{}}}],["providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":394,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["put(':id",{"_index":420,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["random",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":329,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{},"injectables/StatsService.html":{}}}],["rangem",{"_index":788,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemax",{"_index":752,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemin",{"_index":750,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rate",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["recover",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["refacto",{"_index":975,"title":{},"body":{"injectables/PoiService.html":{}}}],["reflect",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1067,"title":{},"body":{"guards/RoleGuard.html":{}}}],["relations",{"_index":625,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/UserService.html":{}}}],["repeated",{"_index":1583,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":489,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["request",{"_index":56,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{}}}],["request.user",{"_index":1076,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requests",{"_index":1584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require('hex",{"_index":543,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["reset",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["rest",{"_index":1590,"title":{},"body":{"index.html":{}}}],["restaurant",{"_index":921,"title":{},"body":{"injectables/PoiDto.html":{}}}],["restaurant)'})@isenum(typepoienum",{"_index":908,"title":{},"body":{"injectables/PoiDto.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rgba",{"_index":544,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":162,"title":{"classes/Role.html":{}},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.id",{"_index":1384,"title":{},"body":{"classes/User.html":{}}}],["role.role",{"_index":1112,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.service",{"_index":1085,"title":{},"body":{"modules/RoleModule.html":{}}}],["role/enum/role.enum",{"_index":1425,"title":{},"body":{"classes/UserDto.html":{}}}],["role/role.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":653,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["role/roleentity",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["roleentity",{"_index":1086,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["roleenum",{"_index":1424,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum})@isenum(roleenum",{"_index":1421,"title":{},"body":{"classes/UserDto.html":{}}}],["roleguard",{"_index":97,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["roleid",{"_index":1382,"title":{},"body":{"classes/User.html":{}}}],["rolemodule",{"_index":140,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerolerepository",{"_index":1094,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":409,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["roles.includes(role",{"_index":1079,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roles.map((role",{"_index":1111,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleservice",{"_index":641,"title":{"injectables/RoleService.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":1100,"title":{},"body":{"injectables/RoleService.html":{}}}],["root",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":58,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["router",{"_index":1572,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routes",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":539,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":541,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["saltrounds",{"_index":1451,"title":{},"body":{"injectables/UserService.html":{}}}],["school",{"_index":354,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["score",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score'})@validatenested()@isoptional",{"_index":910,"title":{},"body":{"injectables/PoiDto.html":{}}}],["score.controller",{"_index":566,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.controller.ts",{"_index":559,"title":{},"body":{"controllers/GreenScoreController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"coverage.html":{}}}],["score.controller.ts:35",{"_index":1285,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:46",{"_index":1294,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:56",{"_index":1291,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:68",{"_index":1290,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.interface",{"_index":1308,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score.interface.ts",{"_index":1310,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score.module",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["score.module.ts",{"_index":564,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service",{"_index":565,"title":{},"body":{"modules/GreenScoreModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service.ts",{"_index":567,"title":{},"body":{"injectables/GreenScoreService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score.service.ts:23",{"_index":1323,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:30",{"_index":1325,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:38",{"_index":1330,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:49",{"_index":1324,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:58",{"_index":1327,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:8",{"_index":1320,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score/green",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["score/interfaces/type",{"_index":1309,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score/type",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts",{"_index":1304,"title":{},"body":{"classes/TypeGreenScoreDto.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts:8",{"_index":1306,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score/typegreenscoreentity",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["score/typegreenscoreentity.ts",{"_index":1274,"title":{},"body":{"classes/TypeGreenScore.html":{},"coverage.html":{}}}],["score/typegreenscoreentity.ts:14",{"_index":1277,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["score/typegreenscoreentity.ts:8",{"_index":1275,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["searchbyname",{"_index":487,"title":{},"body":{"injectables/CompanyService.html":{}}}],["searchbyname(name",{"_index":505,"title":{},"body":{"injectables/CompanyService.html":{}}}],["secret",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":660,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select",{"_index":629,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["select('role",{"_index":1107,"title":{},"body":{"injectables/RoleService.html":{}}}],["send",{"_index":55,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["sent",{"_index":431,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["serializetags",{"_index":999,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetags.foreach((tag",{"_index":1001,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetagsdata",{"_index":600,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagsdata(tags",{"_index":618,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagswithrgb",{"_index":1002,"title":{},"body":{"injectables/PoiService.html":{}}}],["service",{"_index":217,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["set",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadowed",{"_index":1136,"title":{},"body":{"injectables/StatsService.html":{}}}],["shopping",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["short",{"_index":892,"title":{},"body":{"injectables/PoiDto.html":{}}}],["show",{"_index":331,"title":{},"body":{"classes/Company.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../function.utils.ts",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1569,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../price.enum.ts",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.enum.ts",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typepoienum.ts",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:28",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:43",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":215,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":220,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/access",{"_index":49,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":638,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":642,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:32",{"_index":646,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":665,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:10",{"_index":668,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:24",{"_index":670,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/company/company.controller.ts",{"_index":358,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:107",{"_index":384,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:33",{"_index":373,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:49",{"_index":387,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:61",{"_index":382,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:77",{"_index":391,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:93",{"_index":378,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":479,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":482,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:10",{"_index":490,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:20",{"_index":506,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:37",{"_index":492,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:51",{"_index":500,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:62",{"_index":498,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:71",{"_index":497,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:75",{"_index":494,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:79",{"_index":496,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:87",{"_index":504,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/companydto.ts",{"_index":429,"title":{},"body":{"injectables/CompanyDto.html":{},"coverage.html":{}}}],["src/company/companydto.ts:104",{"_index":449,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:114",{"_index":454,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:18",{"_index":445,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:27",{"_index":436,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:36",{"_index":440,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:46",{"_index":442,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:55",{"_index":456,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:65",{"_index":459,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:74",{"_index":439,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:83",{"_index":451,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:92",{"_index":443,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:98",{"_index":450,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companyentity.ts",{"_index":281,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/company/companyentity.ts:100",{"_index":304,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:109",{"_index":320,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:112",{"_index":312,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:12",{"_index":324,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:20",{"_index":296,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:29",{"_index":338,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:35",{"_index":348,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:45",{"_index":310,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:55",{"_index":314,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:63",{"_index":351,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:73",{"_index":333,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:83",{"_index":326,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:91",{"_index":341,"title":{},"body":{"classes/Company.html":{}}}],["src/company/enum/type.enum.ts",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/company/interface/company.interface.ts",{"_index":475,"title":{},"body":{"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["src/decorator/role.decorator.ts",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/green",{"_index":558,"title":{},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts",{"_index":1064,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts:20",{"_index":1070,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role.guard.ts:9",{"_index":1068,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/interceptor/entity",{"_index":529,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["src/join",{"_index":568,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"coverage.html":{}}}],["src/logindto.ts",{"_index":673,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/logindto.ts:11",{"_index":675,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/logindto.ts:7",{"_index":677,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/main.ts",{"_index":1485,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/percent",{"_index":684,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/enum/price.enum.ts",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/enum/typepoienum.ts",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/interfaces/poi.interface.ts",{"_index":924,"title":{},"body":{"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts",{"_index":680,"title":{},"body":{"classes/PercentAndIdTag.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts:2",{"_index":682,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/percentandidtag.ts:3",{"_index":683,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts",{"_index":1041,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts:8",{"_index":1042,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["src/poi/poi.controller.ts",{"_index":836,"title":{},"body":{"controllers/PoiController.html":{},"coverage.html":{}}}],["src/poi/poi.controller.ts:103",{"_index":861,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:115",{"_index":863,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:130",{"_index":853,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:48",{"_index":850,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:62",{"_index":859,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:75",{"_index":855,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:90",{"_index":867,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.module.ts",{"_index":929,"title":{},"body":{"modules/PoiModule.html":{}}}],["src/poi/poi.service.ts",{"_index":931,"title":{},"body":{"injectables/PoiService.html":{},"coverage.html":{}}}],["src/poi/poi.service.ts:101",{"_index":953,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:113",{"_index":946,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:117",{"_index":960,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:125",{"_index":959,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:133",{"_index":948,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:141",{"_index":962,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:164",{"_index":958,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:168",{"_index":949,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:17",{"_index":943,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:39",{"_index":952,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:51",{"_index":945,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:80",{"_index":955,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:87",{"_index":957,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poiandtags.ts",{"_index":828,"title":{},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["src/poi/poiandtags.ts:6",{"_index":831,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poiandtags.ts:7",{"_index":830,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poidto.ts",{"_index":888,"title":{},"body":{"injectables/PoiDto.html":{},"coverage.html":{}}}],["src/poi/poidto.ts:102",{"_index":911,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:108",{"_index":909,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:115",{"_index":903,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:22",{"_index":890,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:31",{"_index":891,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:41",{"_index":894,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:46",{"_index":896,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:56",{"_index":897,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:63",{"_index":898,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:69",{"_index":899,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:75",{"_index":901,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:83",{"_index":907,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poientity.ts",{"_index":804,"title":{},"body":{"classes/Poi.html":{},"coverage.html":{}}}],["src/poi/poientity.ts:12",{"_index":822,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:17",{"_index":825,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:22",{"_index":814,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:27",{"_index":810,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:32",{"_index":811,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:37",{"_index":824,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:44",{"_index":826,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:51",{"_index":820,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:58",{"_index":818,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:6",{"_index":817,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:64",{"_index":816,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:70",{"_index":819,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:73",{"_index":812,"title":{},"body":{"classes/Poi.html":{}}}],["src/role/enum/role.enum.ts",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/role/role.module.ts",{"_index":1084,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1088,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:10",{"_index":1093,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:24",{"_index":1099,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:38",{"_index":1096,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:50",{"_index":1102,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/roleentity.ts",{"_index":1058,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/role/roleentity.ts:11",{"_index":1061,"title":{},"body":{"classes/Role.html":{}}}],["src/role/roleentity.ts:6",{"_index":1059,"title":{},"body":{"classes/Role.html":{}}}],["src/stats/stats.controller.ts",{"_index":1114,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":1117,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":1126,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":1128,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:10",{"_index":1131,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:20",{"_index":1132,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:29",{"_index":1133,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/tags/interfaces/tags.interface.ts",{"_index":1206,"title":{},"body":{"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts",{"_index":1161,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts:14",{"_index":1168,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:19",{"_index":1164,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:8",{"_index":1165,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tags.controller.ts",{"_index":1170,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:19",{"_index":1178,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:27",{"_index":1182,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:36",{"_index":1187,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:43",{"_index":1184,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1210,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1213,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:14",{"_index":1219,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:19",{"_index":1220,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:23",{"_index":1221,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:31",{"_index":1222,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:38",{"_index":1224,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:42",{"_index":1226,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:8",{"_index":1217,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tagsdto.ts",{"_index":1199,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/tags/tagsdto.ts:10",{"_index":1204,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/type",{"_index":1273,"title":{},"body":{"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["src/type/interface/type.interface.ts",{"_index":1340,"title":{},"body":{"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["src/type/type.controller.ts",{"_index":1242,"title":{},"body":{"controllers/TypeController.html":{},"coverage.html":{}}}],["src/type/type.controller.ts:34",{"_index":1250,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:46",{"_index":1254,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:56",{"_index":1255,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:68",{"_index":1252,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.module.ts",{"_index":1344,"title":{},"body":{"modules/TypeModule.html":{}}}],["src/type/type.service.ts",{"_index":1347,"title":{},"body":{"injectables/TypeService.html":{},"coverage.html":{}}}],["src/type/type.service.ts:23",{"_index":1352,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:31",{"_index":1356,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:41",{"_index":1355,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:49",{"_index":1354,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:57",{"_index":1359,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:61",{"_index":1357,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:9",{"_index":1350,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/typedto.ts",{"_index":1268,"title":{},"body":{"classes/TypeDto.html":{},"coverage.html":{}}}],["src/type/typedto.ts:11",{"_index":1271,"title":{},"body":{"classes/TypeDto.html":{}}}],["src/type/typeentity.ts",{"_index":1238,"title":{},"body":{"classes/Type.html":{},"coverage.html":{}}}],["src/type/typeentity.ts:15",{"_index":1240,"title":{},"body":{"classes/Type.html":{}}}],["src/type/typeentity.ts:9",{"_index":1239,"title":{},"body":{"classes/Type.html":{}}}],["src/user",{"_index":1388,"title":{},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":1427,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":1392,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":1397,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":1400,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1432,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1436,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":1441,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":1449,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:35",{"_index":1443,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":1447,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:60",{"_index":1445,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/userdto.ts",{"_index":1409,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/userdto.ts:11",{"_index":1413,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:17",{"_index":1415,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:23",{"_index":1418,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:29",{"_index":1419,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:36",{"_index":1422,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userentity.ts",{"_index":1372,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/userentity.ts:13",{"_index":1379,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:18",{"_index":1375,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:23",{"_index":1377,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:28",{"_index":1381,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:37",{"_index":1383,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:7",{"_index":1376,"title":{},"body":{"classes/User.html":{}}}],["src/utils/function.utils.ts",{"_index":1498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":437,"title":{},"body":{"injectables/CompanyDto.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1587,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":1115,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":1127,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":1119,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/stats.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["statscontroller",{"_index":1113,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodule",{"_index":141,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":1118,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["stock",{"_index":297,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["strategy",{"_index":651,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stringtype",{"_index":1368,"title":{},"body":{"injectables/TypeService.html":{}}}],["stringtype.push(types[n",{"_index":1371,"title":{},"body":{"injectables/TypeService.html":{}}}],["success",{"_index":426,"title":{},"body":{"controllers/CompanyController.html":{}}}],["super",{"_index":656,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1610,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1611,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1538,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":171,"title":{"classes/Tag.html":{}},"body":{"modules/AppModule.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tag.id",{"_index":584,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{}}}],["tag.tag",{"_index":627,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tagaddpromise",{"_index":1012,"title":{},"body":{"injectables/PoiService.html":{}}}],["tagdto",{"_index":1179,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tagdto.colortag",{"_index":1229,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagentity",{"_index":1189,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{}}}],["tagid",{"_index":579,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PoiService.html":{}}}],["tagrepository",{"_index":1218,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags",{"_index":620,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tags'})@isoptional()@isarray",{"_index":906,"title":{},"body":{"injectables/PoiDto.html":{}}}],["tags.controller",{"_index":1211,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.foreach((tag",{"_index":1233,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags.map((tag",{"_index":626,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tags.service",{"_index":1188,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tagentity",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{}}}],["tags/tags.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["tags/tags.service",{"_index":963,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["tagscontroller",{"_index":1169,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsdto",{"_index":1176,"title":{"classes/TagsDto.html":{}},"body":{"controllers/TagsController.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsinterface",{"_index":1200,"title":{"interfaces/TagsInterface.html":{}},"body":{"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":142,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":941,"title":{"injectables/TagsService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagtoadd",{"_index":605,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["techno",{"_index":1601,"title":{},"body":{"index.html":{}}}],["this.access_token",{"_index":44,"title":{},"body":{"classes/AccessToken.html":{}}}],["this.authservice.login(req.user",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(mail",{"_index":672,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companyrepository.count",{"_index":526,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.delete(idcompany",{"_index":525,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.find",{"_index":511,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneorfail(idcompany",{"_index":522,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.save(companydata",{"_index":521,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice.addcompany(companydto",{"_index":413,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.countcompany",{"_index":1143,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.countnbtype(type",{"_index":1151,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.deletecompany(idcompany",{"_index":425,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getallcompany",{"_index":419,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(id",{"_index":417,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(idcompany",{"_index":424,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.orderbydate",{"_index":428,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.formattopercenttgcandpoi(poiadded",{"_index":985,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.getalltag",{"_index":1237,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.getgreenscore",{"_index":1146,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.getonepercenttypegreenscoreandpoi(idpercentgcandpoi",{"_index":779,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.getpoi(idpoi",{"_index":995,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.gettype(idtypegreenscore",{"_index":1337,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.hashpassword(user.password",{"_index":1453,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jointagpoirepository.count",{"_index":636,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.createquerybuilder('g",{"_index":628,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.find",{"_index":624,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.findone",{"_index":637,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.save(jointagpoi",{"_index":623,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poi",{"_index":1017,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poiadded",{"_index":983,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.checktag(tag",{"_index":1016,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.getallcompanytag(poi",{"_index":996,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.serializetagsdata(tags",{"_index":1000,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.percenttypegreenscoreandpoirepository.createquerybuilder",{"_index":786,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.delete(percentgc",{"_index":780,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.find",{"_index":771,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.findoneorfail(idpercent",{"_index":775,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegcandpoi",{"_index":761,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegreenscoreandpoi",{"_index":769,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegcandpoi(percentgcanddto",{"_index":989,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegreenscoreandpoiservice(percenttypegreenscoreandpoidto",{"_index":709,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.countranggreenscore(range",{"_index":1139,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.percenttypegreenscoreandpoiservice.deletepercenttypegreenscore(idpercent",{"_index":722,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.findbypoi(idpoi",{"_index":720,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getallpercenttypegreenscoreandpoi",{"_index":714,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getgreenscorepassmark(poi",{"_index":998,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.getonepercenttypegreenscoreandpoi(idpercent",{"_index":717,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.poi",{"_index":833,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.poirepository.count",{"_index":1011,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.delete(idpoi",{"_index":1040,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.find",{"_index":1004,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.findoneorfail(idpoi",{"_index":993,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.save(poi",{"_index":1038,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poiservice.addpoi(poidto",{"_index":876,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.countpoi",{"_index":1141,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.counttype(typepoi",{"_index":1158,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.deletepoi(idpoi",{"_index":887,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getallpoi",{"_index":879,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getpoi(idpoi",{"_index":773,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoi(percenttypegreenscoreandpoiservicedto.idpoi",{"_index":767,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoiandtags(idpoi",{"_index":878,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.gettypepoi",{"_index":1153,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.orderbydate",{"_index":885,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.orderbyname",{"_index":884,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.updatepoi(poidto",{"_index":882,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.reflector.get('roles",{"_index":1073,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.rolerolerepository.createquerybuilder",{"_index":1106,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerolerepository.findoneorfail",{"_index":1104,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.getinfrole(result.role.id",{"_index":663,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.roleservice.getoneorfailbyrole(user.role",{"_index":1455,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getonlyrole(roles",{"_index":664,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.searchbyname(companydto.name",{"_index":518,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.statsservice.getstat",{"_index":1122,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.tagrepository.delete(idtag",{"_index":1231,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.find",{"_index":1232,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findbyids(idstags",{"_index":1236,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findoneorfail(idtag",{"_index":1234,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.save(tagdto",{"_index":1230,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tags",{"_index":834,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.tagsservice.addtag(tagdto",{"_index":1193,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.deletetag(idtag",{"_index":1196,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getalltag",{"_index":1198,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(idtag",{"_index":1195,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(tagid",{"_index":1014,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.tagsservice.gettags(poidto.tags",{"_index":976,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscorerepository.delete(typegreenscore",{"_index":1338,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.find",{"_index":1334,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findbyids(idtypes",{"_index":1339,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findoneorfail(idtype",{"_index":1335,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.save(typegreenscoredto",{"_index":1333,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscoreservice.addgreenscore(typegreenscoreandpoidto",{"_index":1297,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.deletetypegreenscore(idtypegreenscore",{"_index":1303,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getalltype",{"_index":1301,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getbyids",{"_index":979,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscoreservice.gettype(idtypegreenscore",{"_index":1300,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.gettype(percenttypegreenscoreandpoiservicedto.idtypegreenscore",{"_index":765,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.typegreenscoreservice.gettype(typepercent.idtype",{"_index":973,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typerepository.delete(idtype",{"_index":1365,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.find",{"_index":1364,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findbyids(idstypes",{"_index":1366,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findoneorfail(idtype",{"_index":1363,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.save(typedto",{"_index":1362,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typeservice.addtype(typedto",{"_index":1263,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.deletetype(idtype",{"_index":1267,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.getonetype(idtype",{"_index":1265,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.gettype",{"_index":1145,"title":{},"body":{"injectables/StatsService.html":{},"controllers/TypeController.html":{}}}],["this.userrepository.findoneorfail",{"_index":1457,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail(userid",{"_index":1459,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1456,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduser(userdto",{"_index":1406,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(payload.userid",{"_index":662,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.getuserbymail(mail",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":514,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["todo",{"_index":698,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PoiService.html":{}}}],["token",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["token.interfaces",{"_index":38,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.interfaces.ts",{"_index":50,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.ts:11",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{}}}],["tostring(16",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":783,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["toto",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["transform",{"_index":415,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["transform(value",{"_index":792,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["transformer",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["true})@joincolumn({name",{"_index":578,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["try",{"_index":666,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["tslint",{"_index":967,"title":{},"body":{"injectables/PoiService.html":{}}}],["tslint:disable",{"_index":40,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"injectables/StatsService.html":{}}}],["type",{"_index":32,"title":{"classes/Type.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type.controller",{"_index":1345,"title":{},"body":{"modules/TypeModule.html":{}}}],["type.idtype",{"_index":981,"title":{},"body":{"injectables/PoiService.html":{}}}],["type.interceptor",{"_index":402,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["type.interceptor.ts",{"_index":530,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["type.interceptor.ts:14",{"_index":535,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["type.service",{"_index":1256,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{}}}],["type/type.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["type/type.service",{"_index":964,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["type/typeentity",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["typeandpercent",{"_index":951,"title":{},"body":{"injectables/PoiService.html":{}}}],["typeandpercent.map(async",{"_index":970,"title":{},"body":{"injectables/PoiService.html":{}}}],["typecontroller",{"_index":1241,"title":{"controllers/TypeController.html":{}},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"coverage.html":{}}}],["typedto",{"_index":1248,"title":{"classes/TypeDto.html":{}},"body":{"controllers/TypeController.html":{},"classes/TypeDto.html":{},"injectables/TypeService.html":{},"coverage.html":{}}}],["typeentity",{"_index":1257,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{}}}],["typeenum",{"_index":470,"title":{},"body":{"injectables/CompanyDto.html":{},"controllers/TypeController.html":{},"injectables/TypeService.html":{},"miscellaneous/enumerations.html":{}}}],["typeenum})@isenum(typeenum",{"_index":458,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["typegreenscore",{"_index":189,"title":{"classes/TypeGreenScore.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscore.id",{"_index":695,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["typegreenscoreandpoidto",{"_index":1286,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["typegreenscorecontroller",{"_index":1278,"title":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"coverage.html":{}}}],["typegreenscoredto",{"_index":1284,"title":{"classes/TypeGreenScoreDto.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscoreentity",{"_index":1295,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{}}}],["typegreenscorefind",{"_index":764,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["typegreenscoreinterface",{"_index":1305,"title":{"interfaces/TypeGreenScoreInterface.html":{}},"body":{"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["typegreenscoremodule",{"_index":143,"title":{"modules/TypeGreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["typegreenscorerepository",{"_index":1321,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["typegreenscoreservice",{"_index":759,"title":{"injectables/TypeGreenScoreService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["typeinterface",{"_index":1269,"title":{"interfaces/TypeInterface.html":{}},"body":{"classes/TypeDto.html":{},"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["typemodule",{"_index":144,"title":{"modules/TypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TypeModule.html":{},"modules.html":{},"overview.html":{}}}],["typename",{"_index":1157,"title":{},"body":{"injectables/StatsService.html":{}}}],["typeof",{"_index":551,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":356,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([company",{"_index":481,"title":{},"body":{"modules/CompanyModule.html":{}}}],["typeormmodule.forfeature([jointagpoientity",{"_index":592,"title":{},"body":{"modules/JoinTagPoiModule.html":{}}}],["typeormmodule.forfeature([percenttypegreenscoreandpoi",{"_index":738,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["typeormmodule.forfeature([poi",{"_index":930,"title":{},"body":{"modules/PoiModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1087,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":1212,"title":{},"body":{"modules/TagsModule.html":{}}}],["typeormmodule.forfeature([type",{"_index":1346,"title":{},"body":{"modules/TypeModule.html":{}}}],["typeormmodule.forfeature([typegreenscore",{"_index":1314,"title":{},"body":{"modules/TypeGreenScoreModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1435,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["typepercent",{"_index":971,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepercent.percent",{"_index":972,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepoi",{"_index":1156,"title":{},"body":{"injectables/StatsService.html":{}}}],["typepoienum",{"_index":919,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"miscellaneous/enumerations.html":{}}}],["typerepository",{"_index":1351,"title":{},"body":{"injectables/TypeService.html":{}}}],["types",{"_index":1144,"title":{},"body":{"injectables/StatsService.html":{},"injectables/TypeService.html":{}}}],["types.map(async",{"_index":1148,"title":{},"body":{"injectables/StatsService.html":{}}}],["types/bcrypt",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["types/compression",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["types[n",{"_index":1370,"title":{},"body":{"injectables/TypeService.html":{}}}],["typeservice",{"_index":942,"title":{"injectables/TypeService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"coverage.html":{},"overview.html":{}}}],["typespoi",{"_index":1152,"title":{},"body":{"injectables/StatsService.html":{}}}],["typespoi.map(async",{"_index":1155,"title":{},"body":{"injectables/StatsService.html":{}}}],["typetocheck",{"_index":978,"title":{},"body":{"injectables/PoiService.html":{}}}],["typetocheck.length",{"_index":982,"title":{},"body":{"injectables/PoiService.html":{}}}],["ui",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["uml",{"_index":1606,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":648,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":309,"title":{},"body":{"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"classes/User.html":{}}}],["undefined})@useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":371,"title":{},"body":{"controllers/CompanyController.html":{}}}],["unique",{"_index":325,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/User.html":{}}}],["up",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":392,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["updatecompany",{"_index":367,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(@param('id",{"_index":421,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(id",{"_index":389,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatepoi",{"_index":845,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["updatepoi(@param('id",{"_index":880,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(idpoi",{"_index":864,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(poidto",{"_index":961,"title":{},"body":{"injectables/PoiService.html":{}}}],["use",{"_index":493,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/functions.html":{}}}],["useguards",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(authguard('local",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(roleguard",{"_index":118,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":1181,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@get",{"_index":1183,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('/one/:id",{"_index":1293,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":1186,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":1249,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@usepipes(new",{"_index":1288,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useinterceptors",{"_index":395,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useinterceptors(entitytypeinterceptor",{"_index":418,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useless",{"_index":446,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["usepipes",{"_index":396,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":410,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(percenttypegreenscoreandpoitransformationpipe",{"_index":707,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["usepipes(poitransformationpipe",{"_index":874,"title":{},"body":{"controllers/PoiController.html":{}}}],["user",{"_index":164,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'})@isemail",{"_index":1417,"title":{},"body":{"classes/UserDto.html":{}}}],["user'})@isstring",{"_index":1412,"title":{},"body":{"classes/UserDto.html":{}}}],["user.controller",{"_index":1433,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.mail",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":1454,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1080,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.roles.some((role",{"_index":1078,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.service",{"_index":1402,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user/userentity",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["userappmodule",{"_index":145,"title":{"modules/UserAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"modules.html":{},"overview.html":{}}}],["userappservice",{"_index":1387,"title":{"injectables/UserAppService.html":{}},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":1391,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":1396,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":1434,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userinterface",{"_index":1410,"title":{"interfaces/UserInterface.html":{}},"body":{"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["usermodule",{"_index":146,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"classes/LoginDto.html":{}}}],["userrepository",{"_index":1442,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":345,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["userservice",{"_index":253,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/function.utils",{"_index":547,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/TagsService.html":{},"injectables/TypeService.html":{}}}],["validate",{"_index":640,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(mail",{"_index":669,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":645,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":915,"title":{},"body":{"injectables/PoiDto.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(mail",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":372,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["validationpipe())@delete(':id",{"_index":1289,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["validationpipe())@roles('admin",{"_index":866,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@useguards(roleguard)@roles('admin",{"_index":858,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@usepipes(poitransformationpipe)@useguards(roleguard)@roles('admin",{"_index":849,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe({transform",{"_index":411,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["validator",{"_index":469,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["validity",{"_index":647,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"miscellaneous/variables.html":{}}}],["value.tags.map((idtags",{"_index":1045,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["value.typegreenscore.map((percentandtypegc",{"_index":1049,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["variable",{"_index":1137,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["variables",{"_index":1619,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vegan",{"_index":1202,"title":{},"body":{"classes/TagsDto.html":{}}}],["web",{"_index":1604,"title":{},"body":{"index.html":{}}}],["where('idpoi",{"_index":632,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["where('percent",{"_index":787,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["where(`id",{"_index":1108,"title":{},"body":{"injectables/RoleService.html":{}}}],["without",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["work",{"_index":343,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/functions.html":{}}}],["worker",{"_index":342,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["working",{"_index":353,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token.ts\n        \n\n            \n                Description\n            \n            \n                This controller allows to create a new jwt token\n\n            \n\n\n            \n                Implements\n            \n            \n                            AccessTokenInterfaces\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                            Set the access token to the access_token properties\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                value will be set to access_token property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                        Cf interface\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenInterfaces } from './interfaces/access-token.interfaces';\n\n/**\n * This controller allows to create a new jwt token\n */\nexport class AccessToken implements AccessTokenInterfaces {\n  /**\n   * Cf interface\n   */\n    // tslint:disable-next-line:variable-name\n  access_token: string;\n\n  /**\n   * Set the access token to the access_token properties\n   * @param accessToken {string} value will be set to access_token property\n   */\n  constructor(accessToken) {\n    this.access_token = accessToken;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenInterfaces.html":{"url":"interfaces/AccessTokenInterfaces.html","title":"interface - AccessTokenInterfaces","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccessTokenInterfaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                this interface define the value attempt in a jwt token\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    this data allows to know who send the request and authorize or not the access to some route\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenInterfaces {\n   /**\n    * this data allows to know who send the request and authorize or not the access to some route\n    */\n   access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This controller contains the routes to connect and retrieve your profile\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiUnauthorizedResponse()@ApiOkResponse()@UseGuards(undefined)@UseGuards(RoleGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:43\n                \n            \n\n\n            \n                \n                    This method allows get account information from jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, toto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:28\n                \n            \n\n\n            \n                \n                    the call of this method allows to recover a jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Get, Body } from '@nestjs/common';\nimport {AuthService} from './auth/auth.service';\nimport {AuthGuard} from '@nestjs/passport';\nimport { AccessToken } from './auth/access-token';\nimport { RoleGuard } from './guard/role.guard';\nimport { Roles } from './decorator/role.decorator';\nimport { ApiBasicAuth, ApiBearerAuth, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { LoginDto } from './loginDto';\n\n/**\n * This controller contains the routes to connect and retrieve your profile\n */\n@ApiTags('login')\n@Controller()\nexport class AppController {\n  constructor(readonly authService: AuthService) {}\n\n  /**\n   * the call of this method allows to recover a jwt token\n   * @param req {Request}\n   * @param toto\n   * @return {AccessToken}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req, @Body() toto: LoginDto): Promise {\n    // tslint:disable-next-line:no-console\n    return await this.authService.login(req.user);\n  }\n\n  /**\n   * This method allows get account information from jwt token\n   * @param req {Request}\n   */\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @ApiOkResponse()\n  @UseGuards(AuthGuard('jwt'))\n  @UseGuards(RoleGuard)\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            GreenScoreModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                        \n                            UserAppModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\nimport { PoiModule } from './poi/poi.module';\nimport { CompanyModule } from './company/company.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role/roleEntity';\nimport { User } from './user/userEntity';\nimport { Company } from './company/companyEntity';\nimport { TypeModule } from './type/type.module';\nimport { TagsModule } from './tags/tags.module';\nimport { Type } from './type/typeEntity';\nimport { Tag } from './tags/tagEntity';\nimport { Poi } from './poi/poiEntity';\nimport { JoinTagPoiModule } from './join-tag-poi/join-tag-poi.module';\nimport { UserAppModule } from './user-app/user-app.module';\nimport { JoinTagPoiEntity } from './join-tag-poi/joinTagPoiEntity';\nimport { GreenScoreModule } from './green-score/green-score.module';\nimport { TypeGreenScoreModule } from './type-green-score/type-green-score.module';\nimport { PercentTypeGreenScoreAndPoiModule } from './percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScore } from './type-green-score/typeGreenScoreEntity';\nimport { PercentTypeGreenScoreAndPoi } from './percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { StatsModule } from './stats/stats.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST || 'localhost',\n      port: 3306,\n      username: process.env.DB_USER || 'admin',\n      password: process.env.DB_PASSWORD || 'root',\n      database: process.env.DB_NAME || 'madu',\n      entities: [\n        Role,\n        User,\n        Company,\n        Type,\n        Tag,\n        Poi,\n        JoinTagPoiEntity,\n        TypeGreenScore,\n        PercentTypeGreenScoreAndPoi,\n      ],\n      synchronize: true,\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    PoiModule,\n    CompanyModule,\n    TypeModule,\n    TagsModule,\n    JoinTagPoiModule,\n    UserAppModule,\n    GreenScoreModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n    StatsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Demo service nest\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    demo method nest\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Demo service nest\n */\n@Injectable()\nexport class AppService {\n  /**\n   * demo method nest\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    PassportModule.register({defaultStrategy: 'local'}),\n    RoleModule,\n    JwtModule.register({\n      secret: process.env.JWT_TOKEN || 'Helloo',\n      signOptions: {expiresIn: '3600s'},\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            set userService and jwtService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Method who create en send a jwt\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Method who check if the login password is correct and return the result without password return null if not\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        || null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { AccessToken } from './access-token';\n\n/**\n * Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * set userService and jwtService\n   * @param userService {UserService}\n   * @param jwtService {JwtService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   *  Method who check if the login password is correct and return the result without password return null if not\n   * @param mail {string}\n   * @param pass {string}\n   * @returns {object} || null\n   */\n  async validateUser(mail: string, pass: string) {\n    const user = await this.userService.getUserByMail(mail);\n    if (user &&  await bcrypt.compare(pass, user.password)) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  /**\n   * Method who create en send a jwt\n   * @param user\n   * @returns {AccessToken}\n   */\n  async login(user): Promise {\n    const payload = { userId: user.id, mail: user.mail };\n    const token = await this.jwtService.signAsync(payload);\n    return new AccessToken(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyEntity.ts\n        \n\n            \n                Description\n            \n            \n                Company entity from the database\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                beginDeal\n                            \n                            \n                                city\n                            \n                            \n                                createDate\n                            \n                            \n                                domainMail\n                            \n                            \n                                endDeal\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                nbWorker\n                            \n                            \n                                postalCode\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:20\n                            \n                        \n\n                \n                    \n                        address of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:100\n                            \n                        \n\n                \n                    \n                        Date when the contract begin\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 40, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:45\n                            \n                        \n\n                \n                    \n                        city of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 75, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:55\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:109\n                            \n                        \n\n                \n                    \n                        Date when the contract end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:12\n                            \n                        \n\n                \n                    \n                        Unique id to a entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:83\n                            \n                        \n\n                \n                    \n                        Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:73\n                            \n                        \n\n                \n                    \n                        Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:29\n                            \n                        \n\n                \n                    \n                        name of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:91\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:35\n                            \n                        \n\n                \n                    \n                        postal code of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:63\n                            \n                        \n\n                \n                    \n                        Type of company entity stock in db (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Company entity from the database\n */\n@Entity()\nexport class Company {\n  /**\n   * Unique id to a entity stock in db\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * address of company entity stock in db\n   */\n  @Column({\n    length: 100,\n  })\n  address: string;\n\n  /**\n   * name of company entity stock in db\n   */\n  @Column({\n    unique: true,\n    length: 50,\n  })\n  name: string;\n\n  /**\n   * postal code of company entity stock in db\n   */\n  @Column()\n  postalCode: string;\n\n  /**\n   * city of company entity stock in db\n   */\n  @Column({\n    length: 40,\n    nullable: true,\n    default: null,\n  })\n  city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com)\n   */\n  @Column({\n    length: 75,\n    nullable: true,\n    default: null,\n  })\n  domainMail: string;\n\n  /**\n   * Type of company entity stock in db (ex: co-working, school etc)\n   */\n  @Column({\n    length: 50,\n  })\n  type: string;\n\n  /**\n   * Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  /**\n   * Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: true,\n  })\n  lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @Column({\n    default: 1,\n  })\n  nbWorker: number;\n\n  /**\n   * Date when the contract begin\n   */\n  @Column({\n    type: 'date',\n    default: '2020-10-10',\n  })\n  beginDeal: string;\n\n  /**\n   * Date when the contract end\n   */\n  @Column({\n     type: 'date',\n    default: '2020-10-10',\n  })\n  endDeal: string;\n\n  @CreateDateColumn()\n  createDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n            \n                Description\n            \n            \n                Controller to manage the companys data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getCompanyOrderByDate\n                            \n                            \n                                    Async\n                                getOneCompany\n                            \n                            \n                                    Async\n                                updateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiUnauthorizedResponse()@ApiBody({type: undefined})@UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:33\n                \n            \n\n\n            \n                \n                    method call method to check and add a new company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        information to add a new company\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Data was added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:93\n                \n            \n\n\n            \n                \n                    This method call method to delete a company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:61\n                \n            \n\n\n            \n                \n                    This method return all company in database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneCompany(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:49\n                \n            \n\n\n            \n                \n                    this method return one company entity with an id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCompany(id: number, companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Put(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:77\n                \n            \n\n\n            \n                \n                    This method update one company data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CompanyDto } from './companyDto';\nimport { CompanyService } from './company.service';\nimport { Company } from './companyEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { ApiBearerAuth, ApiBody, ApiCreatedResponse, ApiNotFoundResponse, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\n\n/**\n * Controller to manage the companys data\n */\n@ApiBearerAuth()\n@ApiTags('company')\n@Controller('company')\n@UseGuards(AuthGuard('jwt'))\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  /**\n   * method call method to check and add a new company\n   * @param {CompanyDto} companyDto information to add a new company\n   * @returns Data was added\n   */\n  @ApiCreatedResponse()\n  @ApiUnauthorizedResponse()\n  @ApiBody({ type: [CompanyDto] })\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addCompany(@Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto);\n  }\n\n  /**\n   * this method return one company entity with an id\n   * @param id {number}\n   * @returns {Company}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneCompany(@Param('id', new ParseIntPipe()) id: number): Promise {\n    return await this.companyService.getOne(id);\n  }\n\n  /**\n   * This method return all company in database\n   * @returns {Company[]}\n   */\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllCompany(): Promise {\n    return await this.companyService.getAllCompany();\n  }\n\n  /**\n   * This method update one company data\n   * @param id\n   * @param companyDto\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Put(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async updateCompany(@Param('id', new ParseIntPipe()) id: number, @Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto, id);\n  }\n\n  /**\n   * This method call method to delete a company from the database\n   * @param idCompany {number}\n   * @returns string\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({  transform: true }))\n  async deleteCompany(@Param('id', new ParseIntPipe()) idCompany: number): Promise {\n    await this.companyService.getOne(idCompany);\n    await this.companyService.deleteCompany(idCompany);\n    return 'delete success';\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getCompanyOrderByDate(): Promise {\n    return await this.companyService.orderByDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyDto.html":{"url":"injectables/CompanyDto.html","title":"injectable - CompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyDto.ts\n        \n\n            \n                Description\n            \n            \n                Object that defines how the data will be sent over the network to add a new Company\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                beginDeal\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                domainMail\n                            \n                            \n                                    Readonly\n                                endDeal\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                nbWorker\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:27\n                            \n                        \n\n                \n                    \n                        Address Of Client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract start date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:74\n                            \n                        \n\n                \n                    \n                        contract start date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:36\n                            \n                        \n\n                \n                    \n                        City of client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'domain mail of client to authorize only employees of this client (ex: @example.com)'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:46\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract end date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:92\n                            \n                        \n\n                \n                    \n                        contract end date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:18\n                            \n                        \n\n                \n                    \n                        Data useless i guess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'latitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'longitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:83\n                            \n                        \n\n                \n                    \n                        Name of client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'number of worker who work in this company. This data is here to know how many users to expect'})@IsOptional()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:114\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postal code of the client'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:55\n                            \n                        \n\n                \n                    \n                        postal code of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of Client', enum: TypeEnum})@IsEnum(TypeEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:65\n                            \n                        \n\n                \n                    \n                        Type of client (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CompanyInterface } from './interface/company.interface';\nimport { IsDate, IsDateString, IsEnum, IsNumber, IsNumberString, IsOptional, IsString } from 'class-validator';\nimport { TypeEnum } from './enum/type.enum';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * Object that defines how the data will be sent over the network to add a new Company\n */\n@Injectable()\nexport class CompanyDto implements CompanyInterface {\n\n  /**\n   * Data useless i guess\n   */\n  @ApiPropertyOptional()\n  @IsOptional()\n  readonly id?: number;\n\n  /**\n   * Address Of Client stock in db\n   */\n  @ApiProperty({\n    description: 'Address Of Client',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of client stock in db\n   */\n  @ApiProperty({\n    description: 'City of client',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com\n   */\n  @ApiProperty({\n    description: 'domain mail of client to authorize only employees of this client (ex: @example.com)',\n  })\n  @IsOptional()\n  @IsString()\n  readonly domainMail: string;\n\n  /**\n   * postal code of the client\n   */\n  @ApiProperty({\n    description: 'postal code of the client',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  /**\n   * Type of client (ex: co-working, school etc)\n   */\n  @ApiProperty({\n    description: 'Type of Client',\n    enum: TypeEnum,\n  })\n  @IsEnum(TypeEnum)\n  readonly type: string;\n\n  /**\n   * contract start date\n   */\n  @ApiProperty({\n    description: 'contract start date',\n  })\n  @IsString()\n  readonly beginDeal: string;\n\n  /**\n   * Name of client\n   */\n  @ApiProperty({\n    description: 'Name of client',\n  })\n  @IsString()\n  readonly name: string;\n\n  /**\n   * contract end date\n   */\n  @ApiProperty({\n    description: 'contract end date',\n  })\n  @IsString()\n  readonly endDeal: string;\n\n  @ApiProperty({\n    description: 'longitude of company',\n  })\n  @IsString()\n  readonly long: string;\n\n  @ApiProperty({\n    description: 'latitude of company',\n  })\n  @IsString()\n  readonly lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @ApiPropertyOptional({\n    description: 'number of worker who work in this company. This data is here to know how many users to expect',\n  })\n  @IsOptional()\n  @IsNumber()\n  readonly nbWorker: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyInterface.html":{"url":"interfaces/CompanyInterface.html","title":"interface - CompanyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompanyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/interface/company.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        beginDeal\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        domainMail\n                                \n                                \n                                        endDeal\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nbWorker\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beginDeal\n                                    \n                                \n                                \n                                    \n                                        beginDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainMail\n                                    \n                                \n                                \n                                    \n                                        domainMail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDeal\n                                    \n                                \n                                \n                                    \n                                        endDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbWorker\n                                    \n                                \n                                \n                                    \n                                        nbWorker:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyInterface {\n  readonly address: string;\n  readonly name: string;\n  readonly postalCode: string;\n  readonly city: string;\n  readonly domainMail?: string;\n  readonly type: string;\n  readonly nbWorker?: number;\n  readonly beginDeal: string;\n  readonly endDeal: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService \n\nCompanyService \n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Company]),\n  ],\n  providers: [CompanyService],\n  controllers: [CompanyController],\n  exports: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n            \n                Description\n            \n            \n                This class is the service to entity company\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                countCompany\n                            \n                            \n                                    Async\n                                countNbType\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                            \n                                    Async\n                                searchByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:10\n                            \n                        \n\n                \n                    \n                            set the company repository\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto, id: null)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:37\n                \n            \n\n\n            \n                \n                    This method use to add or update a company in database\nif the id is not null is for update else is for add\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        | null}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countNbType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countNbType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:71\n                \n            \n\n\n            \n                \n                    This method delete one company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the delete data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:62\n                \n            \n\n\n            \n                \n                    This method returns all company from database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:51\n                \n            \n\n\n            \n                \n                    this method return one company from database and send an exception when nothing has found\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * This class is the service to entity company\n */\n@Injectable()\nexport class CompanyService {\n  /**\n   * set the company repository\n   * @param companyRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Company)\n    private readonly companyRepository: Repository,\n  ) {}\n\n  async searchByName(name: string) {\n    const company =  await this.companyRepository.find({\n      where: {\n        name,\n      },\n    });\n    if (company.length > 0) {\n      throw new ConflictException(`Client with ${name} already exist`);\n    }\n  }\n\n  /**\n   * This method use to add or update a company in database\n   * if the id is not null is for update else is for add\n   * @param companyDto {CompanyDto}\n   * @param id {number} | null}\n   */\n  async addCompany(companyDto, id = null) {\n    await this.searchByName(companyDto.name);\n    const companyData = companyDto;\n    if (id) {\n      companyData.id = id;\n    }\n    return await this.companyRepository.save(companyData);\n  }\n\n  /**\n   * this method return one company from database and send an exception when nothing has found\n   * @param idCompany {number}\n   * @returns Company\n   */\n  async getOne(idCompany: number): Promise {\n    return await this.companyRepository.findOneOrFail(idCompany)\n      .catch(() => {\n        throw new NotFoundException(`Company with id ${idCompany} not found`);\n      });\n  }\n\n  /**\n   * This method returns all company from database\n   * @returns Company[]\n   */\n  async getAllCompany(): Promise {\n    return await this.companyRepository.find();\n  }\n\n  /**\n   * This method delete one company from the database\n   * @param idCompany {number}\n   * @returns the delete data\n   */\n  async deleteCompany(idCompany: number) {\n    return await this.companyRepository.delete(idCompany);\n  }\n\n  async countCompany(): Promise {\n    return await this.companyRepository.count();\n  }\n\n  async countNbType(type: string) {\n    return await this.companyRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.companyRepository.find({\n      order: {\n        createDate: 'ASC',\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityTypeInterceptor.html":{"url":"injectables/EntityTypeInterceptor.html","title":"injectable - EntityTypeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntityTypeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/entity-type.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/entity-type.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport hexToRgba = require('hex-to-rgba');\nimport { exaToRgbaObject, filterInt } from '../utils/function.utils';\n\n@Injectable()\nexport class EntityTypeInterceptor implements NestInterceptor {\n  /**\n   *\n   * @param context\n   * @param next\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n    return next.handle().pipe(map(data => {\n      data = data.map((d) => {\n        d.isPoi = typeof d.domainMail === 'undefined' ? 1 : 0;\n        if (d.isPoi) {\n          d.tags =  d.tags.map((tag) => {\n            exaToRgbaObject(tag.colorTag, tag);\n            return tag;\n          });\n        }\n        return d;\n      });\n      return data;\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GreenScoreController.html":{"url":"controllers/GreenScoreController.html","title":"controller - GreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                green-score\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('green-score')\nexport class GreenScoreController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GreenScoreModule.html":{"url":"modules/GreenScoreModule.html","title":"module - GreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    GreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/green-score/green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GreenScoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GreenScoreService } from './green-score.service';\nimport { GreenScoreController } from './green-score.controller';\n\n@Module({\n  providers: [GreenScoreService],\n  controllers: [GreenScoreController]\n})\nexport class GreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GreenScoreService.html":{"url":"injectables/GreenScoreService.html","title":"injectable - GreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GreenScoreService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinTagPoiEntity.html":{"url":"classes/JoinTagPoiEntity.html","title":"class - JoinTagPoiEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinTagPoiEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/joinTagPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tag\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'tagId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Tag } from '../tags/tagEntity';\nimport { Poi } from '../poi/poiEntity';\n\n@Entity()\nexport class JoinTagPoiEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => Tag, (tag) => tag.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n    nullable: true,\n  })\n  @JoinColumn({\n    name: 'tagId',\n  })\n  tag: Tag;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinTagPoiModule.html":{"url":"modules/JoinTagPoiModule.html","title":"module - JoinTagPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinTagPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinTagPoiService } from './join-tag-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinTagPoiEntity]),\n  ],\n  providers: [JoinTagPoiService],\n  exports: [JoinTagPoiService],\n})\nexport class JoinTagPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinTagPoiService.html":{"url":"injectables/JoinTagPoiService.html","title":"injectable - JoinTagPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinTagPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinTagPoi\n                            \n                            \n                                    Async\n                                checkTag\n                            \n                            \n                                    Async\n                                countTags\n                            \n                            \n                                    Async\n                                getAllCompanyTag\n                            \n                            \n                                    Async\n                                getAllPoiAndTag\n                            \n                            \n                                    Async\n                                getTagsCompany\n                            \n                            \n                                    Async\n                                serializeTagsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-tag-poi/join-tag-poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinTagPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToAdd\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tagToAdd\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkTag(tag: Tag, poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countTags(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompanyTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompanyTag(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoiAndTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoiAndTag()\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsCompany(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serializeTagsData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeTagsData(tags: JoinTagPoiEntity[])\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                            JoinTagPoiEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Injectable()\nexport class JoinTagPoiService {\n  /**\n   *\n   * @param joinTagPoiRepository\n   */\n  constructor(\n    @InjectRepository(JoinTagPoiEntity)\n    private readonly joinTagPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param poiToAdd\n   * @param tagToAdd\n   */\n  async addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag) {\n    const joinTagPoi = {\n      poi: poiToAdd,\n      tag: tagToAdd,\n    };\n    return await this.joinTagPoiRepository.save(joinTagPoi);\n  }\n\n  /**\n   *\n   */\n  async getAllPoiAndTag(): Promise {\n    return await this.joinTagPoiRepository.find({\n      relations: ['poi', 'tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tags\n   */\n  async serializeTagsData(tags: JoinTagPoiEntity[]) {\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getTagsCompany(poiToFind: Poi) {\n    return await this.joinTagPoiRepository.createQueryBuilder('g')\n      .select()\n      .innerJoinAndSelect('tag', 'tag.id = :idTag')\n      .where('idPoi = :idPoi', { idPoi: poiToFind.id })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getAllCompanyTag(poiToFind: Poi): Promise {\n    return await this.joinTagPoiRepository.find({\n      where: {\n        poi: poiToFind,\n      },\n      relations: ['tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tagId\n   */\n  async countTags(tag: Tag): Promise {\n    return await this.joinTagPoiRepository.count({\n      where: {\n        tag,\n      },\n    });\n  }\n\n  async checkTag(tag: Tag, poi: Poi) {\n    return await this.joinTagPoiRepository.findOne({\n      where: {\n        poi,\n        tag,\n      },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when the client send request with a jwt in request header\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            set the option for jwt and set the jwt secret key,\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:32\n                \n            \n\n\n            \n                \n                    Check the validity of data contains in jwt and return  and set in req.user user info without password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '../user/user.service';\nimport { RoleService } from '../role/role.service';\n\n/**\n * Class use when the client send request with a jwt in request header\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set the option for jwt and set the jwt secret key,\n   * @param userService {UserService}\n   * @param roleService {RoleService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly roleService: RoleService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: process.env.JWT_TOKEN || 'helloo',\n    });\n  }\n\n  /**\n   * Check the validity of data contains in jwt and return  and set in req.user user info without password\n   * @param payload\n   */\n  async validate(payload) {\n    if (!payload.userId) {\n      throw new UnauthorizedException();\n    }\n    const {password, ...result} =  await this.userService.getUser(payload.userId);\n    // tslint:disable-next-line:no-console\n    const roles = await this.roleService.getInfRole(result.role.id);\n   // return result;\n    return {\n      user: result,\n      roles: await this.roleService.getOnlyRole(roles),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when client try to connect to their account\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            set authService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:24\n                \n            \n\n\n            \n                \n                    check if user exist and return them else send an exception\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ImATeapotException, Injectable, UnauthorizedException} from '@nestjs/common';\nimport {PassportStrategy} from '@nestjs/passport';\nimport {AuthService} from './auth.service';\nimport {Strategy} from 'passport-local';\n\n/**\n * Class use when client try to connect to their account\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set authService\n   * @param authService {AuthService}\n   */\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  /**\n   * check if user exist and return them else send an exception\n   * @param mail {string}\n   * @param password {string}\n   */\n  async validate(mail: string, password: string) {\n    const user = await this.authService.validateUser(mail, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loginDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsEmail()\n  readonly username: string;\n\n  @ApiProperty()\n  @IsString()\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentAndIdTag.html":{"url":"classes/PercentAndIdTag.html","title":"class - PercentAndIdTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentAndIdTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/percentAndIdTag.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idType\n                            \n                            \n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PercentAndIdTag {\n  idType: number;\n  percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoi.html":{"url":"classes/PercentTypeGreenScoreAndPoi.html","title":"class - PercentTypeGreenScoreAndPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                            \n                                    Readonly\n                                poi\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'idPoi'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeGreenScore\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@ManyToOne(undefined, undefined, {nullable: false, onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'idTypeGreenScore'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { Poi } from '../poi/poiEntity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class PercentTypeGreenScoreAndPoi {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id?: number;\n\n  @ApiProperty()\n  @Column()\n  readonly percent: number;\n\n  @ApiProperty()\n  @ManyToOne(type => TypeGreenScore, (typeGreenScore) => typeGreenScore.id, {\n    nullable: false,\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'idTypeGreenScore',\n  })\n  readonly typeGreenScore: TypeGreenScore;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    nullable: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'idPoi',\n  })\n  readonly poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PercentTypeGreenScoreAndPoiController.html":{"url":"controllers/PercentTypeGreenScoreAndPoiController.html","title":"controller - PercentTypeGreenScoreAndPoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PercentTypeGreenScoreAndPoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                percent-type-green-score-and-poi\n            \n\n            \n                Description\n            \n            \n                Percent green score controller // todo doc\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PercentTypeGreenScoreAndPoiTransformationPipe } from './Pipe/percent-type-green-score-and-poi.transformation.pipe';\nimport { Role } from '../role/roleEntity';\n\n/**\n * Percent green score controller // todo doc\n */\n@Controller('percent-type-green-score-and-poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PercentTypeGreenScoreAndPoiController {\n  //\n  //\n  // /**\n  //  * todo doc\n  //  * @param percentTypeGreenScoreAndPoiService\n  //  */\n  // constructor(readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService) {}\n  //\n  // /**\n  //  *  todo doc\n  //  * @param percentTypeGreenScoreAndPoiDto\n  //  */\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post()\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @UsePipes(PercentTypeGreenScoreAndPoiTransformationPipe)\n  // async addNewPercentTypeGCAndPoi(@Body() percentTypeGreenScoreAndPoiDto: PercentTypeGreenScoreAndPoiDto) {\n  //   return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGreenScoreAndPoiService(percentTypeGreenScoreAndPoiDto);\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post('and-type')\n  // async addManyPercentTypeDcAndNewType(@Body() dataPercentAndTypeGc) {\n  //   return 'many';\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Get()\n  // async getAllPercentTypeAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getAllPercentTypeGreenScoreAndPoi();\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Get('one/:id')\n  // async getOnePercentTypeAndPoi(@Param('id', new ParseIntPipe()) idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getOnePercentTypeGreenScoreAndPoi(idPercent);\n  // }\n  //\n  // /*\n  // @Get('percent/:id')\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // async getPercentOfPoi(@Param('id', new ParseIntPipe()) idPoi: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.findByPoi(idPoi);\n  // }\n  // */\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Delete(':id')\n  // async deletePercentGcAndPoi(@Param('id', new ParseIntPipe()) idPercent: number) {\n  //   return await this.percentTypeGreenScoreAndPoiService.deletePercentTypeGreenScore(idPercent);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoiDto.html":{"url":"classes/PercentTypeGreenScoreAndPoiDto.html","title":"class - PercentTypeGreenScoreAndPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PercentTypeGreenScoreAndPoiInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                idPoi\n                            \n                            \n                                    Readonly\n                                idTypeGreenScore\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idPoi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idTypeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PercentTypeGreenScoreAndPoiInterface } from './interfaces/percent-type-green-score-and-poi.interface';\nimport { IsNumber } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PercentTypeGreenScoreAndPoiDto implements PercentTypeGreenScoreAndPoiInterface{\n  @ApiProperty()\n  @IsNumber()\n  readonly idPoi: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly idTypeGreenScore: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{"url":"interfaces/PercentTypeGreenScoreAndPoiInterface.html","title":"interface - PercentTypeGreenScoreAndPoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentTypeGreenScoreAndPoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idPoi\n                                \n                                \n                                        idTypeGreenScore\n                                \n                                \n                                        percent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPoi\n                                    \n                                \n                                \n                                    \n                                        idPoi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTypeGreenScore\n                                    \n                                \n                                \n                                    \n                                        idTypeGreenScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                    \n                                \n                                \n                                    \n                                        percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PercentTypeGreenScoreAndPoiInterface {\n  readonly percent: number;\n  readonly idTypeGreenScore: number;\n  readonly idPoi: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PercentTypeGreenScoreAndPoiModule.html":{"url":"modules/PercentTypeGreenScoreAndPoiModule.html","title":"module - PercentTypeGreenScoreAndPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PercentTypeGreenScoreAndPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiController } from './percent-type-green-score-and-poi.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PoiModule } from '../poi/poi.module';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([PercentTypeGreenScoreAndPoi]),\n  ],\n  providers: [PercentTypeGreenScoreAndPoiService],\n  controllers: [PercentTypeGreenScoreAndPoiController],\n  exports: [PercentTypeGreenScoreAndPoiService],\n})\nexport class PercentTypeGreenScoreAndPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiService.html":{"url":"injectables/PercentTypeGreenScoreAndPoiService.html","title":"injectable - PercentTypeGreenScoreAndPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPercentTypeGcAndPoi\n                            \n                            \n                                    Async\n                                countRangGreenScore\n                            \n                            \n                                    Async\n                                getByIdTypGcAndPoi\n                            \n                            \n                                    Async\n                                getGreenScorePassMark\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(percentTypeGreenScoreAndPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentTypeGreenScoreAndPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPercentTypeGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentTypeGcAndPoi\n                                    \n                                                PercentTypeGreenScoreAndPoi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countRangGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countRangGreenScore(rangeMax: number, rangeMin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIdTypGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeGreenScore\n                                    \n                                                TypeGreenScore\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGreenScorePassMark\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScorePassMark(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { Repository } from 'typeorm';\nimport { PoiService } from '../poi/poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { Poi } from '../poi/poiEntity';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\n\n/**\n *\n */\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiService {\n  /**\n   *\n   * @param percentTypeGreenScoreAndPoiRepository\n   */\n  constructor(\n    @InjectRepository(PercentTypeGreenScoreAndPoi)\n    private readonly percentTypeGreenScoreAndPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param percentTypeGcAndPoi\n   */\n  async addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi) {\n    return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGcAndPoi);\n  }\n  //\n  // async addPercentTypeGreenScoreAndPoiService(\n  //   percentTypeGreenScoreAndPoiServiceDto: PercentTypeGreenScoreAndPoiDto) {\n  //   const typeGreenScoreFind = await this.typeGreenScoreService.getType(percentTypeGreenScoreAndPoiServiceDto.idTypeGreenScore);\n  //   const poiFind = await this.poiService.getPoi(percentTypeGreenScoreAndPoiServiceDto.idPoi);\n  //   const percentTypeGreenScoreAndPoi: PercentTypeGreenScoreAndPoi = {\n  //     percent: percentTypeGreenScoreAndPoiServiceDto.percent,\n  //     poi: poiFind,\n  //     typeGreenScore: typeGreenScoreFind,\n  //   };\n  //   return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGreenScoreAndPoi);\n  // }\n  //\n  // async getAllPercentTypeGreenScoreAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     relations: ['poi', 'typeGreenScore'],\n  //   });\n  // }\n  //\n  // async findByPoi(idPoi: number): Promise {\n  //   const poi = await this.poiService.getPoi(idPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     where: {\n  //       poi,\n  //     },\n  //   });\n  // }\n  //\n  // async getOnePercentTypeGreenScoreAndPoi(idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.findOneOrFail(idPercent)\n  //     .catch(() => {\n  //       throw new NotFoundException(`PercentTypeGreenScoreAndPoi with id ${idPercent} Not Found`);\n  //     });\n  // }\n  //\n  // async deletePercentTypeGreenScore(idPercentGcAndPoi: number) {\n  //   const percentGc = await this.getOnePercentTypeGreenScoreAndPoi(idPercentGcAndPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.delete(percentGc);\n  // }\n  //\n\n  /**\n   *\n   * @param poi\n   */\n  async getGreenScorePassMark(poi: Poi): Promise {\n    const allPercent = await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n      },\n    });\n    if (allPercent.length === 0) {\n      return 0;\n    }\n    let total: number = 0;\n    allPercent.forEach((percent) => {\n      total +=  percent.percent;\n    });\n    return total / allPercent.length;\n  }\n\n  /**\n   *\n   * @param poi\n   * @param typeGreenScore\n   */\n  async getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore) {\n    return await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n        typeGreenScore,\n      },\n    });\n  }\n\n  async countRangGreenScore(rangeMax: number, rangeMin: number) {\n    return await this.percentTypeGreenScoreAndPoiRepository.createQueryBuilder()\n      .where('percent = :rangeM', {rangeM: rangeMin})\n      .getCount();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{"url":"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html","title":"injectable - PercentTypeGreenScoreAndPoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiDto } from '../PercentTypeGreenScoreAndPoiDto';\nimport { filterInt } from '../../utils/function.utils';\n\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiTransformationPipe implements PipeTransform> {\n  /**\n   *\n   * @param value\n   * @param metadata\n   */\n  transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    newValue.idPoi = filterInt(value.idPoi);\n    newValue.idTypeGreenScore = filterInt(value.idTypeGreenScore);\n    newValue.percent = filterInt(value.percent);\n    return newValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Poi.html":{"url":"classes/Poi.html","title":"class - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                dateCreate\n                            \n                            \n                                description\n                            \n                            \n                                greenScore\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                logo\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                postalCode\n                            \n                            \n                                price\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 30, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Poi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 30,\n    unique: true,\n  })\n  name: string;\n\n  @Column({\n    length: 50,\n  })\n  price: string;\n\n  @Column({\n    type: 'longtext',\n  })\n  description: string;\n\n  @Column({\n    length: 150,\n  })\n  address: string;\n\n  @Column({\n    length: 50,\n  })\n  city: string;\n\n  @Column({\n    length: 6,\n  })\n  postalCode: string;\n\n  @Column({\n    length: 50,\n    nullable: true,\n    default: null,\n  })\n  type: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  lat: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  greenScore: number;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  logo: string;\n\n  @CreateDateColumn()\n  dateCreate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PoiAndTags.html":{"url":"classes/PoiAndTags.html","title":"class - PoiAndTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PoiAndTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiAndTags.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                poi\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poi: Poi, tags: JoinTagPoiEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poi\n                                                  \n                                                        \n                                                                        Poi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    JoinTagPoiEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JoinTagPoiEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Poi } from './poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from '../join-tag-poi/joinTagPoiEntity';\n\nexport class PoiAndTags {\n  poi: Poi;\n  tags: JoinTagPoiEntity[];\n\n  /**\n   *\n   * @param poi {Poi}\n   * @param tags {JoinTagPoiEntity[]}\n   */\n  constructor(poi: Poi, tags: JoinTagPoiEntity[]) {\n    this.poi = poi;\n    this.tags = tags;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PoiController.html":{"url":"controllers/PoiController.html","title":"controller - PoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                poi\n            \n\n            \n                Description\n            \n            \n                point of interest controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                deletePoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getCompanyAndTags\n                            \n                            \n                                    Async\n                                getPoiByName\n                            \n                            \n                                    Async\n                                getPoiOrderByDate\n                            \n                            \n                                    Async\n                                updatePoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiForbiddenResponse()@Post()@UsePipes(new ValidationPipe())@UsePipes(PoiTransformationPipe)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePoi(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiForbiddenResponse()@ApiNotFoundResponse()@ApiBearerAuth()@UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:75\n                \n            \n\n\n            \n                \n                    Return all poi in database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyAndTags(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get('one/:id')@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiByName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/name')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePoi(idPoi: number, poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Put(':id')@UseGuards(RoleGuard)@UsePipes(new ValidationPipe())@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PoiDto } from './poiDto';\nimport { PoiTransformationPipe } from './pipe/poi.transformation.pipe';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { Poi } from './poiEntity';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiGoneResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { filterInt } from '../utils/function.utils';\n// import { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n/**\n * point of interest controller\n */\n@ApiTags('poi')\n@ApiBearerAuth()\n@Controller('poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PoiController {\n  constructor(\n    private readonly poiService: PoiService,\n    private readonly joinTagPoiService: JoinTagPoiService,\n    // private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  /**\n   *\n   * @param poiDto\n   */\n  @ApiCreatedResponse()\n  @ApiForbiddenResponse()\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UsePipes(PoiTransformationPipe)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addPoi(@Body() poiDto: PoiDto) {\n    return await this.poiService.addPoi(poiDto);\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getCompanyAndTags(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return await this.poiService.getPoiAndTags(idPoi);\n  }\n\n  /**\n   * Return all poi in database\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllPoi() {\n    return await this.poiService.getAllPoi();\n  }\n\n  /**\n   *\n   * @param idPoi\n   * @param poiDto\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Put(':id')\n  @UseGuards(RoleGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Roles('admin')\n  async updatePoi(@Param('id') idPoi: number, @Body() poiDto: PoiDto) {\n    idPoi = filterInt(idPoi);\n    return await this.poiService.updatePoi(poiDto, idPoi);\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/name')\n  async getPoiByName(): Promise {\n    return await this.poiService.orderByName();\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getPoiOrderByDate(): Promise {\n    return await this.poiService.orderByDate();\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @Delete(':id')\n  @ApiForbiddenResponse()\n  @ApiNotFoundResponse()\n  @ApiBearerAuth()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async deletePoi(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return await this.poiService.deletePoi(idPoi);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiDto.html":{"url":"injectables/PoiDto.html","title":"injectable - PoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiDto.ts\n        \n\n            \n                Description\n            \n            \n                Data attempt to add new poi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                greenScore\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                tags\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:22\n                            \n                        \n\n                \n                    \n                        Address of Poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:31\n                            \n                        \n\n                \n                    \n                        City of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'short description of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:41\n                            \n                        \n\n                \n                    \n                        Description of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Latitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:56\n                            \n                        \n\n                \n                    \n                        Latitude of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Longitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Name of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postalCode of the Poi'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Price range of the point of interest', enum: PriceEnum})@IsEnum(PriceEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:115\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id tags'})@IsOptional()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of poi ex (restaurant)'})@IsEnum(TypePoiEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PercentAndIdTag[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id type Green score'})@ValidateNested()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:102\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiInterface } from './interfaces/poi.interface';\nimport { IsArray, IsEnum, IsNumber, IsNumberString, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { PriceEnum } from './enum/price.enum';\nimport { ApiProperty, ApiPropertyOptional, getSchemaPath } from '@nestjs/swagger';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { TypePoiEnum } from './enum/typePoiEnum';\n\n/**\n * Data attempt to add new poi\n */\n@Injectable()\nexport class PoiDto implements PoiInterface {\n\n  /**\n   * Address of Poi\n   */\n  @ApiProperty({\n    description: 'Address Of Poi',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of poi\n   */\n  @ApiProperty({\n    description: 'City of the Poi',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * Description of poi\n   */\n  @ApiPropertyOptional({\n    description: 'short description of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly description: string;\n\n  @ApiPropertyOptional()\n  @IsNumber()\n  @IsOptional()\n  readonly greenScore: string;\n\n  /**\n   * Latitude of poi\n   */\n  @ApiPropertyOptional({\n    description: 'Latitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly lat: string;\n\n  @ApiPropertyOptional({\n    description: 'Longitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly long: string;\n\n  @ApiPropertyOptional({\n    description: 'Name of the Poi',\n  })\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({\n    description: 'postalCode of the Poi',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id tags',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly tags: number[];\n\n  /*\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id Poi type',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly type: number[];\n  */\n\n  @ApiPropertyOptional({\n    type: [PercentAndIdTag],\n    description: 'Array of id type Green score',\n  })\n  // @IsArray()\n  @ValidateNested()\n  @IsOptional()\n  readonly typeGreenScore: PercentAndIdTag[];\n\n  @ApiProperty({\n    description: 'Type of poi ex (restaurant)',\n  })\n  @IsEnum(TypePoiEnum)\n  readonly type: string;\n\n  @ApiProperty({\n    description: 'Price range of the point of interest',\n    enum: PriceEnum,\n  })\n  @IsEnum(PriceEnum)\n  readonly price: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiInterface.html":{"url":"interfaces/PoiInterface.html","title":"interface - PoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/interfaces/poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        city\n                                \n                                \n                                        description\n                                \n                                \n                                        greenScore\n                                \n                                \n                                        lat\n                                \n                                \n                                            Optional\n                                        logo\n                                \n                                \n                                        long\n                                \n                                \n                                        name\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        price\n                                \n                                \n                                        type\n                                \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenScore\n                                    \n                                \n                                \n                                    \n                                        greenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        long\n                                    \n                                \n                                \n                                    \n                                        long:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:     PercentAndIdTag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PercentAndIdTag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PercentAndIdTag } from '../percentAndIdTag';\n\nexport interface PoiInterface {\n  readonly name: string;\n  readonly price: string;\n  readonly description: string;\n  readonly address: string;\n  readonly city: string;\n  readonly postalCode: string;\n  readonly long: string;\n  readonly lat: string;\n  readonly greenScore: string;\n  readonly logo?: string;\n  readonly type: string;\n  readonly typeGreenScore: PercentAndIdTag[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PoiModule.html":{"url":"modules/PoiModule.html","title":"module - PoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_imports\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/poi/poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PoiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Poi } from './poiEntity';\nimport { PoiController } from './poi.controller';\nimport { TagsModule } from '../tags/tags.module';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { TypeModule } from '../type/type.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Poi]),\n    TagsModule,\n    JoinTagPoiModule,\n    TypeModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n  ],\n  providers: [PoiService],\n  controllers: [PoiController],\n  exports: [PoiService],\n})\nexport class PoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiService.html":{"url":"injectables/PoiService.html","title":"injectable - PoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                countPoi\n                            \n                            \n                                    Async\n                                countType\n                            \n                            \n                                    Async\n                                deletePoi\n                            \n                            \n                                    Async\n                                formatToPercentTGCAndPoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getPoi\n                            \n                            \n                                    Async\n                                getPoiAndTags\n                            \n                            \n                                    Async\n                                getTypePoi\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                            \n                                    Async\n                                orderByName\n                            \n                            \n                                    Async\n                                updatePoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poiRepository: Repository, connection: Connection, tagsService: TagsService, typeService: TypeService, typeGreenScoreService: TypeGreenScoreService, joinTagPoiService: JoinTagPoiService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/poi/poi.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poiRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeGreenScoreService\n                                                  \n                                                        \n                                                                        TypeGreenScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            formatToPercentTGCAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[])\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeAndPercent\n                                    \n                                            PercentAndIdTag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiAndTags(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypePoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByName()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePoi(poiDto, idPoi)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idPoi\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Connection, Repository } from 'typeorm';\nimport { Poi } from './poiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TagsService } from '../tags/tags.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { TypeService } from '../type/type.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { PercentTypeGreenScoreAndPoi } from '../percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { exaToRgbaObject, getEnumKey } from '../utils/function.utils';\nimport { TypePoiEnum } from './enum/typePoiEnum';\nimport { ancestorWhere } from 'tslint';\n\n@Injectable()\nexport class PoiService {\n  /**\n   *\n   * @param poiRepository\n   * @param connection\n   * @param tagsService\n   * @param typeService\n   * @param typeGreenScoreService\n   * @param joinTagPoiService\n   * @param percentTypeGreenScoreAndPoiService\n   */\n  constructor(\n    @InjectRepository(Poi)\n    private readonly poiRepository: Repository,\n    private connection: Connection,\n    private tagsService: TagsService,\n    private typeService: TypeService,\n    private typeGreenScoreService: TypeGreenScoreService,\n    private joinTagPoiService: JoinTagPoiService,\n    private percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  async formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[]): Promise {\n      const percentPoiAnTypeGcPromise =  typeAndPercent.map(async (typePercent) => {\n        return {\n          poi,\n          percent: typePercent.percent,\n          typeGreenScore: await this.typeGreenScoreService.getType(typePercent.idType),\n        };\n      });\n      return await Promise.all(percentPoiAnTypeGcPromise);\n  }\n\n  // Todo refacto\n  async addPoi(poiDto) {\n    const tags = await this.tagsService.getTags(poiDto.tags);\n    if (poiDto.typeGreenScore) {\n      const typeToCheck = await this.typeGreenScoreService.getByIds(\n        poiDto.typeGreenScore.map((type) => {\n          return type.idType;\n        }));\n      if (typeToCheck.length  {\n      return await this.joinTagPoiService.addJoinTagPoi(poiAdded, tag);\n    });\n    if (poiDto.typeGreenScore) {\n      const percentTypeGreenScoreAndPoiToAdd = await this.formatToPercentTGCAndPoi(poiAdded, poiDto.typeGreenScore);\n      const percentTypeGcAndPoiAddedPromise = percentTypeGreenScoreAndPoiToAdd.map(async (percentGcAndDto) => {\n        return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGcAndPoi(percentGcAndDto);\n      });\n      await Promise.all(percentTypeGcAndPoiAddedPromise);\n    }\n    await Promise.all(tagAddedPromise);\n    return poiAdded;\n  }\n\n  async getPoi(idPoi: number): Promise {\n    return await this.poiRepository.findOneOrFail(idPoi)\n      .catch(() => {\n        throw new NotFoundException(`Poi with id ${idPoi} Not Found`);\n      });\n  }\n\n  async getPoiAndTags(idPoi: number) {\n    const poi = await this.getPoi(idPoi);\n    const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n    poi.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n    const serializeTags = await this.joinTagPoiService.serializeTagsData(tags);\n    serializeTags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return {\n      poi,\n      tags:  serializeTags, // serializeTagsWithRgb,\n    };\n  }\n\n  async getAllPoi() {\n    const allPoi = await this.poiRepository.find();\n    const allPoiWithTagsAndTypesPromise = allPoi.map(async (poi) =>  {\n      const poiWithType: any = poi;\n      const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n      poiWithType.tags = await this.joinTagPoiService.serializeTagsData(tags);\n      poiWithType.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n      return poiWithType;\n    });\n    return  await Promise.all(allPoiWithTagsAndTypesPromise);\n  }\n\n  async countPoi() {\n    return await this.poiRepository.count();\n  }\n\n  async orderByName(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        name: 'ASC',\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        dateCreate: 'ASC',\n      },\n    });\n  }\n\n  async countType(type: string): Promise {\n    return await this.poiRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async updatePoi(poiDto, idPoi) {\n    const poi = await this.getPoi(idPoi);\n    const tagAddPromise = poiDto.tags.map(async (tagId) => {\n      const tag =  await this.tagsService.getOneTag(tagId);\n      const checkIfTagJoin = await this.joinTagPoiService.checkTag(tag, poi);\n      if (!checkIfTagJoin) {\n        await this.joinTagPoiService.addJoinTagPoi(poi, tag);\n      }\n    });\n    poiDto.idPoi = idPoi;\n    await Promise.all(tagAddPromise);\n    poi.address = poiDto.address;\n    poi.city = poiDto.city;\n    poi.description = poiDto.description;\n    poi.name = poiDto.name;\n    poi.postalCode = poiDto.postalCode;\n    poi.price = poiDto.price;\n    poi.type = poiDto.type;\n    poi.lat = poiDto.lat;\n    poi.long = poiDto.long;\n    return await this.poiRepository.save(poi);\n  }\n\n  async getTypePoi() {\n    return await getEnumKey(TypePoiEnum);\n  }\n\n  async deletePoi(idPoi: number) {\n    const poi = await this.getPoi(idPoi);\n    return await this.poiRepository.delete(idPoi);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiTransformationPipe.html":{"url":"injectables/PoiTransformationPipe.html","title":"injectable - PoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/pipe/poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/pipe/poi.transformation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { filterInt } from '../../utils/function.utils';\nimport { PoiDto } from '../poiDto';\n\n@Injectable()\nexport class PoiTransformationPipe implements PipeTransform {\n\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    if (newValue.tags) {\n      newValue.tags = value.tags.map((idTags) => {\n        return filterInt(idTags);\n      });\n    }\n    if (newValue.typeGreenScore && Array.isArray(newValue.typeGreenScore)) {\n      newValue.typeGreenScore = value.typeGreenScore.map((percentAndTypeGc) => {\n         percentAndTypeGc.idType = filterInt(percentAndTypeGc.idType);\n         percentAndTypeGc.percent = filterInt(percentAndTypeGc.percent);\n         if (isNaN(percentAndTypeGc.idType) || isNaN(percentAndTypeGc.percent)) {\n           throw new BadRequestException('idGreen score or percent must be a number');\n         }\n         return percentAndTypeGc;\n      });\n    }\n    return newValue;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/roleEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 15,\n  })\n  role: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role.guard.ts\n            \n\n                \n                Description\n                \n                \n                    check the role of user\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {CanActivate, ExecutionContext, Injectable} from '@nestjs/common';\nimport {Reflector} from '@nestjs/core';\nimport {Observable} from 'rxjs';\n\n/**\n * check the role of user\n */\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  /**\n   *\n   * @param reflector\n   */\n  constructor(private readonly reflector: Reflector) {}\n\n  /**\n   *\n   * @param context\n   */\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Role]),\n  ],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n            \n                Description\n            \n            \n                Role service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInfRole\n                            \n                            \n                                    Async\n                                getOneOrFailByRole\n                            \n                            \n                                    Async\n                                getOnlyRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRoleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRoleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfRole(idRole: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idRole\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneOrFailByRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneOrFailByRole(roleType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOnlyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnlyRole(roles)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * Role service\n */\n@Injectable()\nexport class RoleService {\n\n  /**\n   *\n   * @param roleRoleRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRoleRepository: Repository,\n  ) {}\n\n  /**\n   * @param roleType\n   */\n  async getOneOrFailByRole(roleType: string) {\n    return await this.roleRoleRepository.findOneOrFail({\n      where: {\n        role: roleType,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`Role ${roleType} not found`);\n    });\n  }\n\n  /**\n   *\n   * @param idRole {number}\n   */\n  async getInfRole(idRole: number): Promise {\n    return await this.roleRoleRepository.createQueryBuilder()\n      .select('role')\n      .where(`id = :id`, { id: idRole })\n      .orWhere('id > :idSup', { idSup: idRole  })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param roles\n   */\n  async getOnlyRole(roles): Promise {\n    return roles.map((role) => {\n      return role.role;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('stats')\n@Controller('stats')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Get()\n  async getStat() {\n    return await this.statsService.getStat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_imports\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { PoiModule } from '../poi/poi.module';\nimport { CompanyModule } from '../company/company.module';\nimport { TypeModule } from '../type/type.module';\nimport { TagsModule } from '../tags/tags.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\n\n@Module({\n  imports: [JoinTagPoiModule, PoiModule, CompanyModule, TypeModule, TagsModule, PercentTypeGreenScoreAndPoiModule],\n  providers: [StatsService],\n  controllers: [StatsController],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getGreenScore\n                            \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiService: JoinTagPoiService, poiService: PoiService, companyService: CompanyService, typeService: TypeService, tagsService: TagsService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        poiService\n                                                  \n                                                        \n                                                                        PoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScore()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiService } from '../poi/poi.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { CompanyService } from '../company/company.service';\nimport { TypeService } from '../type/type.service';\nimport { TagsService } from '../tags/tags.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    private readonly joinTagPoiService: JoinTagPoiService,\n    private readonly poiService: PoiService,\n    private readonly companyService: CompanyService,\n    private readonly typeService: TypeService,\n    private readonly tagsService: TagsService,\n    private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  private async getGreenScore(): Promise {\n    const nbGreenScore: number[] = [];\n    // tslint:disable-next-line:no-shadowed-variable\n    for (let range = 100; range >= 50; range -= 10) {\n      nbGreenScore.push(await this.percentTypeGreenScoreAndPoiService.countRangGreenScore(range, range - 10));\n    }\n    return nbGreenScore;\n  }\n\n  async getStat() {\n    const nbPoi = await this.poiService.countPoi();\n    const nbCompany = await this.companyService.countCompany();\n    const types = await this.typeService.getType();\n    await this.getGreenScore();\n    const companyTypePromise = types.map(async (type) => {\n      return {\n          companyType: type,\n          nbType: await this.companyService.countNbType(type),\n        };\n    });\n    const typesPoi = await this.poiService.getTypePoi();\n    const getTypePoiPromise = typesPoi.map(async (typePoi) => {\n      return {\n        typeName: typePoi,\n        nbType: await this.poiService.countType(typePoi),\n      };\n    });\n    return {\n      poi: {\n        nbPoi,\n        types: await Promise.all(getTypePoiPromise),\n      },\n      company: {\n        nbCompany,\n        companyType: await Promise.all(companyTypePromise),\n      },\n      greenScore: await this.getGreenScore(),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorTag\n                            \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: '5EA565'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Tag {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  tag: string;\n\n  @Column({\n    default: '5EA565',\n  })\n  colorTag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto: TagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TagsDto } from './tagsDto';\nimport { TagsService } from './tags.service';\nimport { Tag } from './tagEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('tags')\n@ApiBearerAuth()\n@Controller('tags')\n@UseGuards(AuthGuard('jwt'))\nexport class TagsController {\n  constructor(private readonly tagsService: TagsService) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addTag(@Body() tagDto: TagsDto) {\n    return await this.tagsService.addTag(tagDto);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true}))\n  async deleteTag(@Param('id', new ParseIntPipe()) idTag: number) {\n    await this.tagsService.getOneTag(idTag);\n    return await this.tagsService.deleteTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async getOneTag(@Param('id', new ParseIntPipe()) idTag: number): Promise {\n    return await this.tagsService.getOneTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTag(): Promise {\n    return await this.tagsService.getAllTag();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagsDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TagsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'name of tag (ex: bio, vegan etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagsDto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagsInterface } from './interfaces/tags.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TagsDto implements TagsInterface {\n  @ApiProperty({\n    description: 'name of tag (ex: bio, vegan etc...)',\n  })\n  @IsString()\n  readonly tag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsInterface.html":{"url":"interfaces/TagsInterface.html","title":"interface - TagsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TagsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/interfaces/tags.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TagsInterface {\n  readonly tag: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagsService } from './tags.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { TagsController } from './tags.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Tag]),\n  ],\n  providers: [TagsService],\n  controllers: [TagsController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                            \n                                    Async\n                                getTagsName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTags(idsTags: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTags\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsName()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { Repository } from 'typeorm';\nimport { exaToRgbaObject, generateRandExaDecimalColor } from '../utils/function.utils';\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: Repository,\n  ) {}\n\n  async addTag(tagDto) {\n    tagDto.colorTag = generateRandExaDecimalColor();\n    return await this.tagRepository.save(tagDto);\n  }\n\n  async deleteTag(idTag: number) {\n    return await this.tagRepository.delete(idTag);\n  }\n\n  async getAllTag(): Promise {\n    const tags =  await this.tagRepository.find();\n    tags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return tags;\n  }\n\n  async getOneTag(idTag: number): Promise {\n    return await this.tagRepository.findOneOrFail(idTag)\n      .catch(() => {\n        throw new NotFoundException(`Tag with id ${idTag} not found`);\n      });\n  }\n\n  async getTags(idsTags: number[]) {\n    return await this.tagRepository.findByIds(idsTags);\n  }\n\n  async getTagsName() {\n    const tags = await this.getAllTag();\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Type {\n\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeController.html":{"url":"controllers/TypeController.html","title":"controller - TypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type\n            \n\n            \n                Description\n            \n            \n                type controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                delteType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto: TypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n                                    \n                                                TypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delteType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TypeDto } from './typeDto';\nimport { Type } from './typeEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { type } from 'os';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * type controller\n */\n@ApiBearerAuth()\n@ApiTags('type')\n@Controller('type')\n@UseGuards(AuthGuard('jwt'))\nexport class TypeController {\n  /**\n   *\n   * @param typeService\n   */\n  constructor(private readonly typeService: TypeService) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addType(@Body() typeDto: TypeDto) {\n    return await this.typeService.addType(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneType(@Param('id', new ParseIntPipe()) idType: number): Promise {\n    return await this.typeService.getOneType(idType);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getTypes() {\n    return await this.typeService.getType();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async delteType(@Param('id', new ParseIntPipe()) idType: number) {\n    await this.typeService.getOneType(idType);\n    return await this.typeService.deleteType(idType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeDto.html":{"url":"classes/TypeDto.html","title":"class - TypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of company (ex: Co-Working, PME, etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeDto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeInterface } from './interface/type.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeDto implements TypeInterface {\n\n  @ApiProperty({\n    description: 'Type of company (ex: Co-Working, PME, etc...)',\n  })\n  @IsString()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScore.html":{"url":"classes/TypeGreenScore.html","title":"class - TypeGreenScore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 70})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class TypeGreenScore {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 70,\n  })\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController.html":{"url":"controllers/TypeGreenScoreController.html","title":"controller - TypeGreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@ApiBearerAuth()\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController-1.html":{"url":"controllers/TypeGreenScoreController-1.html","title":"controller - TypeGreenScoreController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score-controller\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@ApiBearerAuth()\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScoreDto.html":{"url":"classes/TypeGreenScoreDto.html","title":"class - TypeGreenScoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeGreenScoreInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeGreenScoreInterface } from './interfaces/type-green-score.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeGreenScoreDto implements TypeGreenScoreInterface{\n  @ApiProperty()\n  @IsString()\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeGreenScoreInterface.html":{"url":"interfaces/TypeGreenScoreInterface.html","title":"interface - TypeGreenScoreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeGreenScoreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/interfaces/type-green-score.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeGreenScoreInterface {\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeGreenScoreModule.html":{"url":"modules/TypeGreenScoreModule.html","title":"module - TypeGreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeGreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type-green-score/type-green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeGreenScoreController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { TypeGreenScoreController } from './type-green-score.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([TypeGreenScore]),\n  ],\n  providers: [TypeGreenScoreService],\n  controllers: [TypeGreenScoreController],\n  exports: [TypeGreenScoreService],\n})\nexport class TypeGreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeGreenScoreService.html":{"url":"injectables/TypeGreenScoreService.html","title":"injectable - TypeGreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeGreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getByIds\n                            \n                            \n                                    Async\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeGreenScoreRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type-green-score/type-green-score.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeGreenScoreRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGreenScore(typeGreenScoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIds(idTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Repository } from 'typeorm';\nimport { PercentAndIdTag } from '../poi/percentAndIdTag';\n\n@Injectable()\nexport class TypeGreenScoreService {\n  /**\n   *\n   * @param typeGreenScoreRepository\n   */\n  constructor(\n    @InjectRepository(TypeGreenScore)\n    private readonly typeGreenScoreRepository: Repository,\n  ) {}\n\n  /**\n   *\n   *\n   * @param typeGreenScoreDto\n   */\n  async addGreenScore(typeGreenScoreDto) {\n    return await this.typeGreenScoreRepository.save(typeGreenScoreDto);\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeGreenScoreRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getType(idType: number): Promise {\n    return await this.typeGreenScoreRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type Green Score With id ${idType} Not Found`);\n      });\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  async deleteTypeGreenScore(idTypeGreenScore) {\n    const typeGreenScore = await this.getType(idTypeGreenScore);\n    return await this.typeGreenScoreRepository.delete(typeGreenScore);\n  }\n\n  /**\n   *\n   * @param idTypes\n   */\n  async getByIds(idTypes: number[]) {\n    return await this.typeGreenScoreRepository.findByIds(idTypes);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeInterface.html":{"url":"interfaces/TypeInterface.html","title":"interface - TypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/interface/type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeInterface {\n  readonly type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeModule.html":{"url":"modules/TypeModule.html","title":"module - TypeModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\n\nTypeService \n\nTypeService \n\n\n\nTypeModule\n\nTypeModule\n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type/type.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { TypeController } from './type.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Type]),\n  ],\n  providers: [TypeService],\n  controllers: [TypeController],\n  exports: [TypeService],\n})\nexport class TypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeService.html":{"url":"injectables/TypeService.html","title":"injectable - TypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                deleteType\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type/type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes(idsTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { Repository } from 'typeorm';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { getEnumKey } from '../utils/function.utils';\n\n@Injectable()\nexport class TypeService {\n  /**\n   *\n   * @param typeRepository\n   */\n  constructor(\n    @InjectRepository(Type)\n    private readonly typeRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  async addType(typeDto) {\n    return await this.typeRepository.save(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getOneType(idType: number): Promise {\n    return await this.typeRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type with id ${idType} not found`);\n      });\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async deleteType(idType: number) {\n    return await this.typeRepository.delete(idType);\n  }\n\n  /**\n   *\n   * @param idsTypes\n   */\n  async getTypes(idsTypes: number[]): Promise {\n      return await this.typeRepository.findByIds(idsTypes);\n  }\n\n  async getType() {\n    return await getEnumKey(TypeEnum);\n    // const types = TypeEnum;\n    // const stringType: string[] = [];\n    // for (const n in types) {\n    //   if (typeof types[n] === 'string') {\n    //     stringType.push(types[n]);\n    //   }\n    // }\n    // return stringType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'roleId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Role } from '../role/roleEntity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 255,\n    unique: true,\n  })\n  mail: string;\n\n  @Column({\n    length: 50,\n  })\n  firstName: string;\n\n  @Column({\n    length: 50,\n  })\n  lastName: string;\n\n  @Column({\n    length: 200,\n  })\n  password: string;\n\n  @ManyToOne(type => Role, (role) => role.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'roleId',\n  })\n  role: Role;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAppModule.html":{"url":"modules/UserAppModule.html","title":"module - UserAppModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\n\nUserAppService\n\nUserAppService\n\n\n\nUserAppModule\n\nUserAppModule\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-app/user-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserAppService } from './user-app.service';\n\n@Module({\n  providers: [UserAppService]\n})\nexport class UserAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAppService.html":{"url":"injectables/UserAppService.html","title":"injectable - UserAppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-app/user-app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserAppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                User controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n                    method call to add new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUer(idUser: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n                    method to delete a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './userDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * User controller\n */\n@ApiBearerAuth()\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(readonly userService: UserService) {}\n\n  /**\n   * method call to add new user\n   * @param userDto\n   */\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addUser(@Body() userDto: UserDto) {\n    return this.userService.addUser(userDto);\n  }\n\n  /**\n   * method to delete a user\n   * @param idUser\n   */\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async deleteUer(@Param('id', new ParseIntPipe()) idUser: number) {\n    return 'deletUser';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            UserInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                mail\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'first name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'last name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'preset role user', enum: RoleEnum})@IsEnum(RoleEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './interfaces/user.interface';\nimport { IsEmail, IsEnum, IsString } from 'class-validator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto implements UserInterface {\n  @ApiProperty({\n    description: 'first name of user',\n  })\n  @IsString()\n  readonly firstName: string;\n\n  @ApiProperty({\n    description: 'last name of user',\n  })\n  @IsString()\n  readonly lastName: string;\n\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  readonly mail: string;\n\n  @ApiProperty({\n    description: 'password of user',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    description: 'preset role user',\n    enum: RoleEnum,\n  })\n  @IsEnum(RoleEnum)\n  readonly role: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        mail\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n  readonly mail: string;\n  readonly firstName: string;\n  readonly lastName: string;\n  readonly password: string;\n  readonly role: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    RoleModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserByMail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByMail(eMail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { RoleService } from '../role/role.service';\nimport { Role } from '../role/roleEntity';\n\n@Injectable()\nexport class UserService {\n  /**\n   *\n   * @param userRepository\n   * @param roleService\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly roleService: RoleService,\n  ) {}\n\n  /**\n   *\n   * @param password\n   */\n  async hashPassword(password: string): Promise {\n    const saltRounds = 10;\n    return await bcrypt.hash(password, saltRounds);\n  }\n\n  /**\n   *\n   * @param userDto\n   */\n  async addUser(userDto) {\n    const user = userDto;\n    user.password = await this.hashPassword(user.password);\n    user.role = await this.roleService.getOneOrFailByRole(user.role);\n    return this.userRepository.save(user);\n  }\n\n  /**\n   *\n   * @param eMail\n   */\n  async getUserByMail(eMail: string) {\n    return this.userRepository.findOneOrFail({\n      where: {\n        mail: eMail,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`User ${eMail} not found`);\n    });\n  }\n\n  /**\n   *\n   * @param userId\n   */\n  async getUser(userId: number) {\n    return await this.userRepository.findOneOrFail(userId, {\n      relations: ['role'],\n    })\n      .catch(() => {\n        throw new NotFoundException(`user with ${userId} not found`);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/access-token.ts\n            \n            class\n            AccessToken\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token.interfaces.ts\n            \n            interface\n            AccessTokenInterfaces\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                src/company/companyDto.ts\n            \n            injectable\n            CompanyDto\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/company/companyEntity.ts\n            \n            class\n            Company\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/company/interface/company.interface.ts\n            \n            interface\n            CompanyInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.controller.ts\n            \n            controller\n            GreenScoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.service.ts\n            \n            injectable\n            GreenScoreService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/interceptor/entity-type.interceptor.ts\n            \n            injectable\n            EntityTypeInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/join-tag-poi/join-tag-poi.service.ts\n            \n            injectable\n            JoinTagPoiService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/join-tag-poi/joinTagPoiEntity.ts\n            \n            class\n            JoinTagPoiEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/loginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n            \n            class\n            PercentTypeGreenScoreAndPoiDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n            \n            interface\n            PercentTypeGreenScoreAndPoiInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n            \n            controller\n            PercentTypeGreenScoreAndPoiController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n            \n            class\n            PercentTypeGreenScoreAndPoi\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/poi/interfaces/poi.interface.ts\n            \n            interface\n            PoiInterface\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/poi/percentAndIdTag.ts\n            \n            class\n            PercentAndIdTag\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/poi/pipe/poi.transformation.pipe.ts\n            \n            injectable\n            PoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/poi/poi.controller.ts\n            \n            controller\n            PoiController\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/poi/poi.service.ts\n            \n            injectable\n            PoiService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/poi/poiAndTags.ts\n            \n            class\n            PoiAndTags\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/poi/poiDto.ts\n            \n            injectable\n            PoiDto\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/poi/poiEntity.ts\n            \n            class\n            Poi\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/role/roleEntity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/interfaces/tags.interface.ts\n            \n            interface\n            TagsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tagEntity.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tags/tagsDto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/interfaces/type-green-score.interface.ts\n            \n            interface\n            TypeGreenScoreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.service.ts\n            \n            injectable\n            TypeGreenScoreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreDto.ts\n            \n            class\n            TypeGreenScoreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreEntity.ts\n            \n            class\n            TypeGreenScore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/type/interface/type.interface.ts\n            \n            interface\n            TypeInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/type.controller.ts\n            \n            controller\n            TypeController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type/type.service.ts\n            \n            injectable\n            TypeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/type/typeDto.ts\n            \n            class\n            TypeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/typeEntity.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user-app/user-app.service.ts\n            \n            injectable\n            UserAppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userEntity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            exaToRgbaObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            filterInt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            generateRandExaDecimalColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            getEnumKey\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.2.3\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/compression : ^1.0.1\n        \n            @types/cookie-parser : ^1.4.2\n        \n            bcrypt : ^3.0.7\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            hex-to-rgba : ^2.0.1\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.3\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceEnum   (src/.../price.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                        \n                            TypeEnum   (src/.../type.enum.ts)\n                        \n                        \n                            TypePoiEnum   (src/.../typePoiEnum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/poi/enum/price.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceEnum\n                    \n                \n                        \n                            \n                                 low\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n            \n        \n\n    src/role/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                 company\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n            \n        \n\n    src/company/enum/type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeEnum\n                    \n                \n                        \n                            \n                                 Agence\n                            \n                        \n                        \n                            \n                                 Ecole\n                            \n                        \n                        \n                            \n                                 Co-working\n                            \n                        \n                        \n                            \n                                 Start-up\n                            \n                        \n                        \n                            \n                                 Grand compte\n                            \n                        \n                        \n                            \n                                 PME\n                            \n                        \n                        \n                            \n                                 Incubateur\n                            \n                        \n                        \n                            \n                                 autre\n                            \n                        \n            \n        \n\n    src/poi/enum/typePoiEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypePoiEnum\n                    \n                \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Drink\n                            \n                        \n                        \n                            \n                                 Cosmetic\n                            \n                        \n                        \n                            \n                                 Fashion\n                            \n                        \n                        \n                            \n                                 Shopping\n                            \n                        \n                        \n                            \n                                 Activity\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main function who call the different router and middleware for the app to work properly\nHelmet helps you secure your Express apps by setting various HTTP headers\nUse to limit repeated requests to  APIs\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMADU Back\nDescription\nAPI REST du back office de maduEquipe\n\nClément Haller (dev back api)\nGuillaume Cornet (infra/server)\n\nTechno\n\nNestJS\nMySQL\nTypeOrm\njson web token\n\nDocumentation\n\nCompodoc\nSwagger\n\nUML Base de donnée\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinTagPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PercentTypeGreenScoreAndPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeGreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCompanyService \n\nCompanyService \n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nTypeService \n\nTypeService \n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\nUserAppService\n\nUserAppService\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            exaToRgbaObject   (src/.../function.utils.ts)\n                        \n                        \n                            filterInt   (src/.../function.utils.ts)\n                        \n                        \n                            generateRandExaDecimalColor   (src/.../function.utils.ts)\n                        \n                        \n                            getEnumKey   (src/.../function.utils.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/function.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            exaToRgbaObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exaDecimalCode: string, insertToObject) => {\n  const hexaToRgba = hexToRgba(exaDecimalCode);\n  const getValueRba = hexaToRgba.split('(')[1].split(',').filter((elem) => typeof filterInt(elem) === 'number');\n  insertToObject.r = filterInt(getValueRba[0].trim());\n  insertToObject.g = filterInt(getValueRba[1].trim());\n  insertToObject.b = filterInt(getValueRba[2].trim());\n  insertToObject.a = filterInt(getValueRba[3].replace(')', '').trim());\n}\n                        \n                    \n\n                \n                    \n                        set the rgba color\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value) => {\n  if (/^(-|\\+)?(\\d+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n  return NaN;\n}\n                        \n                    \n\n                \n                    \n                        Function who check if the value is an integer return null if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandExaDecimalColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>  {\n  return '#' + Math.floor(Math.random() * 16777215 ).toString(16);\n}\n                        \n                    \n\n                \n                    \n                        generate a random hexadecimal code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEnumKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (enumeration) => {\n  const keysEnum: string[] = [];\n\n  for (const n in enumeration) {\n    if (typeof enumeration[n] === 'string') {\n      keysEnum.push(enumeration[n]);\n    }\n  }\n  return keysEnum;\n}\n                        \n                    \n\n                \n                    \n                        get the key of an enumeration\n\n                    \n                \n\n            \n        \n\n    src/decorator/role.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string []) => SetMetadata('roles', roles)\n                        \n                    \n\n                \n                    \n                        this function set roles who have the right to access an a method or class\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
