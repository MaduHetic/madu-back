var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.032,1,2.661]],["body/classes/AccessToken.html",[0,0.035,1,4.835,2,1.637,3,0.132,4,0.116,5,0.116,6,5.671,7,3.805,8,1.675,9,1.939,10,4.554,11,4.554,12,1.939,13,3.638,14,5.001,15,2.928,16,4.694,17,0.371,18,1.864,19,6.594,20,1.702,21,5.807,22,0.86,23,5.807,24,4.097,25,4.182,26,1.262,27,0.014,28,1.085,29,1.133,30,3.885,31,5.807,32,0.35,33,1.629,34,5.807,35,2.09,36,0.273,37,4.374,38,4.374,39,0.132,40,3.15,41,3.15,42,4.374,43,1.846,44,4.374,45,0.007,46,0.01,47,0.007]],["title/interfaces/AccessTokenInterfaces.html",[16,2.864,35,1.432]],["body/interfaces/AccessTokenInterfaces.html",[3,0.159,4,0.139,5,0.139,8,1.519,10,5.13,13,3.298,14,3.792,16,4.711,17,0.446,18,1.756,19,6.476,25,4.711,27,0.013,30,3.522,32,0.422,33,1.778,35,2.355,39,0.159,45,0.009,46,0.011,47,0.009,48,2.789,49,4.58,50,4.58,51,5.265,52,5.265,53,4.098,54,5.13,55,4.377,56,4.711,57,5.13,58,6.542]],["title/controllers/AppController.html",[9,1.328,59,2.864]],["body/controllers/AppController.html",[0,0.029,1,3.448,3,0.111,4,0.097,5,0.097,8,1.06,9,2.155,10,5.062,13,4.044,14,4.896,17,0.311,22,0.763,26,1.487,27,0.014,28,0.963,29,1.335,36,0.44,39,0.111,40,2.646,41,2.646,43,2.175,45,0.006,46,0.009,47,0.006,56,4.288,59,3.712,60,1.273,61,3.196,62,4.042,63,5.155,64,4.484,65,5.155,66,5.155,67,1.487,68,2.186,69,5.155,70,4.484,71,3.674,72,1.434,73,3.674,74,3.674,75,3.809,76,4.484,77,4.484,78,7.049,79,1.487,80,3.674,81,3.674,82,3.674,83,3.712,84,5.155,85,1.855,86,2.05,87,2.05,88,0.501,89,3.513,90,3.674,91,2.301,92,1.853,93,3.674,94,1.767,95,2.05,96,1.617,97,2.05,98,2.646,99,1.657,100,3.674,101,3.674,102,3.674,103,2.881,104,2.881,105,1.273,106,3.674,107,2.301,108,2.05,109,2.05,110,3.674,111,3.674,112,3.196]],["title/modules/AppModule.html",[113,0.959,114,2.864]],["body/modules/AppModule.html",[0,0.02,3,0.075,4,0.065,5,0.065,27,0.014,32,0.564,36,0.493,39,0.075,45,0.004,46,0.006,47,0.004,59,3.393,60,1.331,88,0.337,113,1.136,114,5.768,115,0.924,116,0.924,117,1,118,1,119,0.924,120,1.908,121,1,122,2.147,123,2.147,124,2.147,125,4.079,126,4.079,127,4.079,128,3.819,129,4.079,130,4.079,131,3.819,132,3.597,133,3.819,134,3.819,135,4.079,136,4.079,137,3.819,138,4.079,139,1.555,140,1,141,1,142,2.468,143,1.766,144,2.468,145,2.147,146,2.468,147,2.147,148,1.936,149,2.147,150,2.468,151,1.188,152,0.765,153,1.847,154,1.778,155,1.988,156,2.468,157,1.936,158,2.468,159,2.468,160,2.147,161,1.778,162,2.154,163,1.651,164,1.555,165,1.546,166,3.136,167,2.034,168,4.099,169,1.778,170,2.468,171,2.265,172,2.147,173,2.405,174,2.468,175,2.476,176,1.651,177,3.34,178,1.456,179,2.265,180,2.267,181,1.651,182,1.766,183,1.936,184,2.405,185,2.468,186,2.468,187,2.147,188,2.468,189,2.468,190,2.468,191,2.468,192,2.468,193,2.468,194,2.468,195,2.147,196,1.378,197,2.468,198,2.468,199,1.778,200,2.468,201,2.468,202,2.468,203,2.468,204,1.042]],["title/injectables/AppService.html",[138,2.661,205,0.638]],["body/injectables/AppService.html",[0,0.041,3,0.155,4,0.136,5,0.136,8,1.48,17,0.435,22,0.76,27,0.014,33,1.758,36,0.32,39,0.155,45,0.009,46,0.011,47,0.009,67,1.857,75,3.798,79,1.857,88,0.7,99,1.428,138,4.307,205,1.032,206,1.713,207,4.464,208,7.377,209,5.049,210,6.417,211,7.377,212,5.132,213,5.132,214,5.132]],["title/modules/AuthModule.html",[113,0.959,125,2.661]],["body/modules/AuthModule.html",[0,0.032,3,0.12,4,0.105,5,0.105,27,0.014,36,0.47,39,0.12,45,0.007,46,0.009,47,0.007,88,0.543,89,4.643,92,2.008,113,1.498,115,1.49,116,1.49,117,1.613,118,1.613,119,1.49,120,2.517,121,2.517,125,5.36,132,4.264,137,4.528,139,2.208,140,1.613,141,1.613,143,2.507,147,3.464,148,3.123,215,3.464,216,3.982,217,3.464,218,3.464,219,4.836,220,4.836,221,3.982,222,3.464,223,5.451,224,3.982,225,3.123,226,3.982,227,3.982,228,3.982,229,3.123,230,3.982,231,3.464,232,3.464,233,3.464,234,3.982,235,3.982,236,3.982]],["title/injectables/AuthService.html",[89,2.347,205,0.638]],["body/injectables/AuthService.html",[0,0.043,1,2.988,3,0.091,4,0.08,5,0.08,8,0.869,11,3.502,12,1.006,13,2.798,14,3.216,17,0.255,20,1.738,22,0.788,24,2.635,25,2.169,26,1.535,27,0.014,28,0.995,29,1.379,32,0.358,33,1.75,36,0.392,39,0.091,43,2.654,45,0.011,46,0.008,47,0.005,55,2.988,62,3.502,67,1.288,68,2.042,70,5.122,75,3.886,79,1.698,85,1.608,88,0.411,89,2.635,99,1.897,105,1.845,155,2.654,196,3.509,205,0.716,206,1.006,225,2.362,237,2.62,238,4.467,239,3.939,240,4.467,241,3.885,242,4.467,243,4.467,244,2.62,245,4.061,246,7.383,247,3.012,248,4.467,249,3.012,250,4.467,251,4.467,252,5.888,253,3.012,254,4.467,255,3.885,256,3.939,257,2.971,258,2.62,259,3.502,260,1.966,261,0.899,262,2.62,263,2.592,264,3.012,265,3.012,266,2.62,267,2.62,268,2.62,269,3.012,270,3.012,271,3.012,272,3.012]],["title/classes/Company.html",[0,0.032,157,2.006]],["body/classes/Company.html",[0,0.016,2,0.756,3,0.061,4,0.053,5,0.053,8,0.582,11,3.723,17,0.171,18,0.879,22,1.005,27,0.014,28,0.975,32,0.59,33,1.854,36,0.126,39,0.061,45,0.003,46,0.006,47,0.003,53,3.499,54,2.567,57,2.567,72,1.887,157,3.832,199,2.357,204,2.745,256,2.586,257,1.827,273,1.757,274,3.412,275,3.268,276,3.237,277,3.268,278,3.237,279,3.237,280,1.742,281,2.973,282,2.973,283,3.237,284,2.586,285,4.236,286,4.38,287,2.02,288,6.235,289,6.235,290,2.848,291,5.33,292,4.967,293,4.748,294,5.33,295,2.02,296,4.13,297,3.274,298,3.274,299,4.099,300,2.435,301,2.02,302,3.274,303,2.02,304,2.848,305,3.419,306,2.848,307,3.419,308,2.848,309,2.02,310,2.848,311,1.396,312,2.082,313,2.02,314,2.848,315,2.02,316,2.848,317,4.38,318,4.13,319,4.748,320,4.748,321,4.748,322,2.02,323,2.848,324,3.723,325,2.02,326,2.02,327,2.848,328,2.02,329,2.848,330,2.567,331,2.848,332,2.848,333,2.848,334,3.849,335,2.02,336,2.848,337,2.848,338,2.02,339,2.357,340,2.357,341,2.848,342,2.357,343,0.626,344,3.471]],["title/controllers/CompanyController.html",[9,1.328,345,2.864]],["body/controllers/CompanyController.html",[0,0.019,3,0.071,4,0.062,5,0.062,8,1.061,9,1.519,12,2.082,17,0.198,22,0.831,26,1.489,27,0.014,28,0.964,29,1.337,32,0.413,33,0.92,36,0.389,39,0.071,43,2.516,45,0.004,46,0.006,47,0.004,53,3.734,60,0.81,67,1.061,68,2.27,72,1.562,75,4.273,77,3.201,79,1.917,83,3.717,85,2.146,86,2.054,87,1.305,88,0.319,91,1.465,92,1.179,94,1.125,95,1.305,96,1.03,97,1.305,99,1.849,105,2.066,107,1.465,108,3.132,109,3.132,157,3.727,199,3.717,204,2.178,239,2.462,261,0.471,274,1.692,280,2.219,311,1.733,345,2.65,346,2.034,347,1.305,348,3.68,349,3.68,350,3.201,351,3.201,352,4.49,353,3.68,354,3.68,355,2.034,356,4.945,357,1.564,358,3.679,359,2.339,360,3.717,361,3.68,362,2.034,363,1.834,364,2.339,365,3.453,366,3.959,367,2.339,368,2.339,369,2.339,370,1.834,371,2.339,372,4.49,373,2.339,374,2.339,375,2.339,376,3.201,377,2.171,378,3.453,379,2.339,380,1.38,381,2.851,382,2.034,383,1.834,384,2.339,385,1.564,386,3.045,387,2.886,388,2.339,389,3.68,390,1.834,391,2.054,392,2.339,393,2.339,394,2.339,395,2.339,396,2.339,397,1.684,398,2.339,399,2.339,400,2.339,401,2.339]],["title/injectables/CompanyDto.html",[205,0.638,356,2.661]],["body/injectables/CompanyDto.html",[0,0.027,3,0.063,4,0.055,5,0.055,8,1.895,12,1.121,15,1.051,17,0.177,18,0.902,22,0.973,27,0.014,28,1.114,29,0.87,32,0.584,33,1.804,36,0.331,39,0.063,45,0.004,46,0.006,47,0.004,53,3.884,54,3.792,57,3.792,72,1.828,88,0.284,157,2.858,205,0.539,206,0.696,257,2.699,261,1.573,262,2.922,275,3.734,276,3.307,277,3.734,278,3.307,279,3.307,280,1.408,283,3.307,284,2.642,288,4.207,289,4.207,291,4.93,296,5.393,304,4.207,305,5.499,306,4.207,307,4.081,308,3.669,310,4.207,311,1.549,317,3.792,329,4.207,330,3.792,331,4.207,332,4.207,333,3.669,336,4.207,337,4.207,339,2.419,340,2.419,341,2.922,342,2.419,356,2.247,360,2.419,402,1.814,403,3.359,404,3.359,405,3.359,406,3.359,407,4.148,408,4.218,409,2.085,410,3.792,411,3.359,412,2.085,413,2.085,414,2.085,415,2.085,416,2.085,417,2.085,418,2.085,419,3.359,420,3.359,421,2.085,422,1.814,423,2.085,424,2.085,425,2.085,426,2.085,427,2.634,428,2.085,429,2.085,430,2.419,431,2.085,432,2.085,433,2.085,434,1.635,435,1.635,436,3.669,437,4.207,438,3.734,439,1.164,440,2.922,441,2.085,442,3.079,443,3.669,444,0.959,445,2.085]],["title/interfaces/CompanyInterface.html",[35,1.432,430,2.864]],["body/interfaces/CompanyInterface.html",[3,0.131,4,0.115,5,0.115,17,0.367,18,1.549,27,0.013,28,1.293,29,1.792,32,0.643,33,2.072,35,1.56,39,0.131,45,0.007,46,0.01,47,0.007,48,2.296,261,1.565,275,4.334,276,5.426,277,4.334,278,5.426,279,5.426,283,5.426,284,4.334,311,1.621,430,4.156,446,3.77]],["title/modules/CompanyModule.html",[113,0.959,126,2.661]],["body/modules/CompanyModule.html",[0,0.039,3,0.148,4,0.13,5,0.13,27,0.014,36,0.467,39,0.148,45,0.008,46,0.011,47,0.008,60,2.167,88,0.668,113,1.66,115,1.834,116,1.834,117,1.986,118,1.986,119,1.834,120,2.79,121,1.986,126,5.126,139,2.533,140,1.986,141,1.986,143,2.254,151,2.358,152,1.52,157,2.472,345,4.96,381,4.8,382,4.264,383,3.844,447,4.264,448,4.264,449,4.902,450,4.902,451,4.902]],["title/injectables/CompanyService.html",[205,0.638,381,2.492]],["body/injectables/CompanyService.html",[0,0.04,3,0.081,4,0.071,5,0.071,8,1.182,12,0.897,17,0.228,20,1.595,22,0.886,24,2.419,26,1.603,27,0.014,28,1.039,29,1.44,30,1.798,32,0.445,36,0.347,39,0.081,43,2.526,45,0.005,46,0.007,47,0.005,53,2.568,55,2.743,67,1.182,68,2.261,75,3.991,79,1.999,85,2.001,88,0.366,99,1.755,105,1.927,152,0.833,157,3.853,199,4.871,205,0.657,206,0.897,209,3.215,256,4.237,260,1.183,261,0.541,263,1.183,274,1.885,280,2.314,292,1.935,311,1.732,343,0.833,350,3.566,351,3.566,352,4.836,355,3.566,356,3.719,360,4.004,362,3.566,365,3.719,366,5.207,372,4.836,376,4.836,381,2.568,383,2.108,452,2.338,453,4.1,454,2.688,455,3.157,456,2.688,457,4.97,458,2.688,459,2.952,460,2.688,461,2.688,462,4.1,463,2.688,464,3.566,465,4.1,466,2.774,467,1.5,468,1.355,469,2.688,470,2.688,471,2.688,472,2.688,473,2.688,474,1.5,475,1.355,476,2.688,477,2.688,478,2.688]],["title/controllers/GreenScoreController.html",[9,1.328,479,2.864]],["body/controllers/GreenScoreController.html",[0,0.047,3,0.178,4,0.155,5,0.155,9,1.961,27,0.013,36,0.366,39,0.178,45,0.01,46,0.012,47,0.01,60,2.036,88,0.801,175,2.286,176,3.93,180,3.364,347,3.278,479,5.035,480,4.23,481,4.606,482,5.874]],["title/modules/GreenScoreModule.html",[113,0.959,127,2.661]],["body/modules/GreenScoreModule.html",[0,0.041,3,0.153,4,0.134,5,0.134,27,0.014,36,0.436,39,0.153,45,0.009,46,0.011,47,0.009,60,2.216,88,0.692,113,1.688,115,1.9,116,1.9,117,2.057,118,2.057,119,1.9,120,2.835,121,2.057,127,5.173,139,2.59,140,2.057,141,2.057,175,2.488,176,3.397,479,5.041,480,3.656,483,4.417,484,4.417,485,5.173,486,4.417,487,3.656,488,4.417]],["title/injectables/GreenScoreService.html",[205,0.638,485,2.661]],["body/injectables/GreenScoreService.html",[0,0.048,3,0.18,4,0.158,5,0.158,27,0.013,36,0.372,39,0.18,45,0.01,46,0.012,47,0.01,88,0.814,176,3.996,205,1.132,206,1.994,480,4.301,485,4.724,489,4.684]],["title/classes/JoinTagPoiEntity.html",[0,0.032,171,2.347]],["body/classes/JoinTagPoiEntity.html",[0,0.033,2,1.528,3,0.123,4,0.108,5,0.108,17,0.346,18,1.489,22,0.933,24,3.272,27,0.014,28,1.036,32,0.504,36,0.393,39,0.123,45,0.007,46,0.009,47,0.007,72,1.752,162,2.956,163,2.733,164,3.07,165,2.559,171,3.272,204,1.724,256,3.475,274,2.551,280,2.102,299,3.711,300,3.272,311,1.386,312,3.176,343,1.267,490,3.985,491,3.554,492,4.085,493,3.994,494,5.297,495,5.538,496,5.297,497,3.204,498,4.825,499,4.085,500,4.085,501,5.547,502,4.085,503,4.535,504,2.942,505,3.994,506,4.085,507,3.204]],["title/modules/JoinTagPoiModule.html",[113,0.959,128,2.492]],["body/modules/JoinTagPoiModule.html",[0,0.038,3,0.144,4,0.126,5,0.126,27,0.014,36,0.448,39,0.144,45,0.008,46,0.01,47,0.008,88,0.651,113,1.639,115,1.785,116,1.785,117,1.932,118,1.932,119,1.785,120,2.754,121,2.754,128,4.849,139,2.489,140,1.932,141,1.932,143,2.194,151,2.295,152,1.479,162,2.544,166,2.815,167,2.527,171,3.626,490,2.815,508,4.15,509,4.15,510,4.15,511,4.773,512,3.741,513,2.815,514,4.771]],["title/injectables/JoinTagPoiService.html",[205,0.638,511,2.347]],["body/injectables/JoinTagPoiService.html",[0,0.026,3,0.099,4,0.086,5,0.086,17,0.276,20,1.842,22,0.962,26,1.764,27,0.014,28,1.143,29,1.584,32,0.49,36,0.422,39,0.099,45,0.005,46,0.008,47,0.005,67,1.365,68,2.354,79,1.764,85,2.201,88,0.445,99,1.807,105,1.932,152,1.011,162,2.973,163,2.182,164,3.003,165,2.043,167,3.589,171,3.832,205,0.759,206,1.089,260,1.436,261,0.656,263,1.436,343,1.011,455,2.942,468,1.644,490,3.997,511,2.793,515,2.348,516,4.734,517,4.734,518,6.116,519,4.734,520,3.261,521,2.837,522,4.734,523,4.734,524,6.116,525,2.837,526,4.118,527,4.734,528,3.261,529,4.118,530,2.837,531,4.734,532,2.837,533,2.182,534,3.261,535,3.261,536,3.261,537,4.734,538,3.712,539,3.261,540,3.261]],["title/classes/JoinTypePoi.html",[0,0.032,173,2.492]],["body/classes/JoinTypePoi.html",[0,0.033,2,1.56,3,0.126,4,0.11,5,0.11,17,0.353,18,1.509,22,0.942,27,0.014,28,0.779,32,0.645,36,0.397,39,0.126,45,0.007,46,0.009,47,0.007,72,1.77,161,3.002,164,3.085,165,2.612,173,3.523,204,2.373,274,2.586,280,2.124,299,3.762,300,3.318,311,1.405,312,3.209,343,1.293,490,4.019,493,4.05,494,5.341,495,5.873,496,5.341,497,3.269,498,4.892,503,4.05,504,3.002,505,4.05,507,3.269,541,3.627,542,4.169,543,4.169,544,4.169,545,4.169]],["title/modules/JoinTypePoiModule.html",[113,0.959,129,2.661]],["body/modules/JoinTypePoiModule.html",[0,0.038,3,0.144,4,0.126,5,0.126,27,0.014,32,0.545,36,0.448,39,0.144,45,0.008,46,0.01,47,0.008,88,0.651,113,1.639,115,1.785,116,1.785,117,1.932,118,1.932,119,1.785,120,2.754,121,2.754,129,5.178,139,2.489,140,1.932,141,1.932,143,2.194,151,2.295,152,1.479,166,2.815,167,2.527,173,3.85,490,2.815,512,3.741,513,2.815,546,4.15,547,4.15,548,4.15,549,5.412,550,4.771]],["title/injectables/JoinTypePoiService.html",[205,0.638,549,2.661]],["body/injectables/JoinTypePoiService.html",[0,0.028,3,0.107,4,0.093,5,0.093,17,0.299,20,1.949,22,0.939,26,1.68,27,0.014,28,1.088,29,1.508,32,0.643,36,0.434,39,0.107,45,0.006,46,0.008,47,0.006,67,1.445,68,2.307,79,1.68,85,2.282,88,0.481,99,1.62,105,2.019,152,1.094,161,2.541,162,1.32,164,3.091,165,2.21,167,3.548,173,3.138,205,0.803,206,1.178,260,1.553,261,0.71,263,1.553,343,1.094,455,3.05,468,1.779,490,3.951,515,2.541,521,3.069,525,3.069,526,4.357,529,4.357,530,3.069,532,3.069,538,3.928,549,3.351,551,5.009,552,6.341,553,5.009,554,3.528,555,5.009,556,5.009,557,6.341,558,5.009,559,3.528,560,3.528,561,3.528,562,3.528,563,3.528]],["title/injectables/JwtStrategy.html",[205,0.638,219,2.661]],["body/injectables/JwtStrategy.html",[0,0.045,3,0.17,4,0.088,5,0.088,8,0.954,12,1.104,13,4.588,17,0.28,20,1.861,22,0.708,24,4.016,26,1.379,27,0.014,28,0.893,29,1.238,32,0.265,36,0.407,39,0.1,40,2.381,41,2.381,43,2.371,45,0.01,46,0.008,47,0.006,53,2.996,55,3.199,56,4.433,62,3.75,67,1.379,68,1.742,79,0.954,88,0.451,92,1.667,96,2.105,99,1.712,103,2.593,104,2.593,105,1.947,112,4.16,155,2.371,196,3.135,205,0.767,206,1.104,219,3.199,231,4.16,232,2.876,233,2.876,239,3.199,244,2.876,245,4.011,255,4.16,258,2.876,260,2.105,261,0.962,263,2.105,267,4.16,305,3.444,459,3.444,475,1.667,564,2.876,565,4.782,566,4.16,567,4.321,568,3.306,569,4.782,570,4.782,571,4.782,572,3.306,573,4.782,574,4.16,575,2.876,576,3.306,577,2.876,578,2.593,579,2.876,580,2.876,581,2.876,582,2.876,583,3.306,584,3.306,585,3.306,586,2.876,587,3.306,588,3.306,589,3.306,590,3.306,591,3.306]],["title/injectables/LocalStrategy.html",[205,0.638,220,2.661]],["body/injectables/LocalStrategy.html",[0,0.049,3,0.118,4,0.103,5,0.103,8,1.126,12,1.304,17,0.331,20,1.52,22,0.796,24,3.173,26,1.551,27,0.014,28,1.005,29,1.393,32,0.431,33,1.874,36,0.413,39,0.118,43,2.596,45,0.007,46,0.009,47,0.007,55,3.598,64,4.679,67,1.551,68,1.908,76,4.679,79,1.126,88,0.533,89,4.545,92,1.97,99,1.712,105,1.354,155,2.934,196,3.88,205,0.863,206,1.304,220,3.598,222,3.398,229,3.063,239,3.598,257,3.002,261,0.786,263,1.719,305,3.873,385,2.613,459,3.873,464,4.679,475,1.97,566,4.679,574,4.679,575,3.398,577,3.398,578,3.063,580,3.398,581,3.398,582,3.398,592,3.398,593,5.379,594,3.906,595,3.906,596,5.379,597,3.906,598,5.379,599,3.906,600,3.906]],["title/classes/PercentTypeGreenScoreAndPoi.html",[0,0.032,184,2.492]],["body/classes/PercentTypeGreenScoreAndPoi.html",[0,0.03,2,1.392,3,0.112,4,0.099,5,0.099,17,0.315,18,1.396,22,0.961,27,0.014,28,0.972,32,0.611,36,0.405,39,0.112,45,0.006,46,0.009,47,0.006,72,1.806,164,3.002,165,2.332,175,2.754,179,3.538,180,3.287,182,3.409,183,2.918,184,3.259,261,1.565,274,2.392,280,2.002,299,4.344,300,3.069,311,1.622,312,2.623,334,2.903,343,1.154,442,3.124,444,1.711,493,2.68,503,4.318,504,2.68,505,3.746,507,2.918,586,4.525,601,4.031,602,3.237,603,2.68,604,3.722,605,3.722,606,3.722,607,5.202,608,3.48,609,3.722,610,3.722,611,3.48,612,3.722,613,3.722]],["title/controllers/PercentTypeGreenScoreAndPoiController.html",[9,1.328,614,2.864]],["body/controllers/PercentTypeGreenScoreAndPoiController.html",[0,0.03,3,0.113,4,0.099,5,0.099,8,1.082,9,2.01,17,0.318,22,0.555,26,1.082,27,0.014,28,0.701,29,0.971,32,0.595,36,0.442,39,0.113,43,2.207,45,0.006,46,0.009,47,0.006,60,1.3,67,1.508,68,1.867,72,1.044,79,1.082,86,2.919,87,2.094,88,0.512,91,2.35,92,1.892,94,1.805,95,2.094,96,1.651,97,2.094,98,2.701,99,1.044,107,2.35,108,2.094,109,2.094,164,2.119,175,2.936,179,3.844,180,3.629,181,3.499,204,1.583,347,2.094,357,2.51,358,3.553,377,2.213,380,2.213,386,2.213,391,2.094,513,2.213,601,3.086,614,3.767,615,3.263,616,6.851,617,6.851,618,5.23,619,3.751,620,4.969,621,3.751,622,4.081,623,3.751,624,3.751,625,3.751]],["title/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.032,620,2.661]],["body/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.046,2,1.642,3,0.133,4,0.116,5,0.116,15,2.934,17,0.372,18,1.562,22,0.967,27,0.014,32,0.617,36,0.407,39,0.133,45,0.007,46,0.01,47,0.007,72,1.816,175,2.815,179,3.852,180,3.481,261,1.569,311,1.858,435,5.452,439,2.449,442,3.345,444,2.018,601,4.102,608,4.368,611,4.368,620,3.893,626,3.817,627,4.702,628,6.529,629,4.388,630,4.388,631,4.388,632,4.388,633,4.388]],["title/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[35,1.432,627,2.864]],["body/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[3,0.158,4,0.138,5,0.138,17,0.443,18,1.748,27,0.013,32,0.612,35,1.881,39,0.158,45,0.009,46,0.011,47,0.009,48,2.769,175,2.534,179,4.381,180,3.133,261,1.427,311,2.012,601,3.084,608,4.967,611,4.967,627,4.689,634,4.546,635,4.546]],["title/modules/PercentTypeGreenScoreAndPoiModule.html",[113,0.959,130,2.661]],["body/modules/PercentTypeGreenScoreAndPoiModule.html",[0,0.033,3,0.125,4,0.109,5,0.109,27,0.014,32,0.585,36,0.474,39,0.125,45,0.007,46,0.009,47,0.007,60,1.934,88,0.562,113,1.525,115,1.542,116,1.542,117,1.669,118,1.669,119,1.542,120,2.562,121,1.669,130,5.207,131,4.574,134,4.574,139,2.26,140,1.669,141,1.669,143,2.566,149,3.585,151,1.983,152,1.278,175,2.905,177,3.585,178,2.431,179,3.292,180,3.261,181,2.757,182,1.895,183,3.231,184,2.581,512,3.231,513,2.431,601,2.431,614,4.555,622,4.574,636,3.585,637,4.121,638,3.585,639,3.585,640,3.585,641,4.121]],["title/injectables/PercentTypeGreenScoreAndPoiService.html",[205,0.638,622,2.492]],["body/injectables/PercentTypeGreenScoreAndPoiService.html",[0,0.025,3,0.095,4,0.083,5,0.083,12,1.045,17,0.265,20,1.789,22,0.888,26,1.57,27,0.014,28,1.017,29,1.41,32,0.614,36,0.43,39,0.095,45,0.005,46,0.008,47,0.005,67,1.326,68,2.24,79,1.57,85,2.16,88,0.427,99,1.515,105,2.214,152,0.971,164,1.268,175,2.931,178,1.848,179,1.848,180,3.533,181,4.275,182,1.44,184,2.879,205,0.737,206,1.045,260,2.397,261,1.096,263,2.397,280,1.045,311,1.361,343,0.971,455,2.886,466,1.748,467,1.748,468,1.579,474,1.748,475,1.579,487,2.255,515,2.255,601,3.77,620,4.275,622,2.879,640,2.724,642,5.445,643,6,644,4.596,645,3.132,646,4.072,647,4.072,648,3.132,649,4.596,650,3.132,651,3.132,652,4.596,653,3.132,654,4.596,655,3.132,656,4.596,657,3.132,658,3.132,659,4.596,660,3.132,661,4.596,662,3.132,663,3.132,664,3.132,665,3.132,666,3.132,667,3.132]],["title/classes/Poi.html",[0,0.032,164,1.611]],["body/classes/Poi.html",[0,0.025,2,1.185,3,0.096,4,0.084,5,0.084,8,1.581,17,0.268,18,1.244,22,1.105,27,0.014,28,1.024,32,0.605,33,1.969,36,0.197,39,0.096,45,0.005,46,0.008,47,0.005,72,2.076,164,1.877,204,2.997,256,3.778,274,2.131,275,3.433,277,3.433,280,1.829,281,3.947,282,3.947,284,3.433,285,4.988,286,4.729,290,2.754,292,5.114,299,4.486,300,3.558,311,1.507,312,2.764,324,4.729,334,4.165,343,0.982,344,4.087,668,2.754,669,4.297,670,4.767,671,4.297,672,4.634,673,3.167,674,3.167,675,4.634,676,3.167,677,4.634,678,3.167,679,3.167,680,3.167,681,3.167,682,3.167,683,4.634,684,3.167,685,4.634,686,3.167,687,3.167]],["title/controllers/PoiController.html",[9,1.328,688,2.864]],["body/controllers/PoiController.html",[0,0.026,3,0.099,4,0.087,5,0.087,8,0.949,9,1.87,12,1.099,17,0.279,20,1.281,22,0.706,26,1.375,27,0.014,28,0.89,29,1.234,32,0.382,36,0.469,39,0.099,43,2.365,45,0.006,46,0.008,47,0.006,60,1.141,67,1.375,68,2.107,72,1.326,79,1.375,86,2.66,87,1.837,88,0.449,91,2.062,92,1.66,94,1.583,95,1.837,96,1.449,97,1.837,99,1.326,105,2.129,107,2.062,108,2.66,109,2.66,162,2.298,163,2.202,164,2.269,166,2.812,167,1.744,171,2.812,172,2.863,204,1.389,260,2.098,261,0.959,263,2.098,311,1.4,343,1.021,347,1.837,358,3.306,377,1.942,378,3.188,380,1.942,386,2.812,391,1.837,511,3.306,513,2.812,533,3.188,608,3.748,646,3.306,688,3.432,689,2.863,690,4.146,691,4.146,692,4.146,693,4.766,694,2.863,695,4.497,696,2.863,697,3.291,698,3.291,699,3.291,700,3.291,701,3.291,702,3.291,703,2.37,704,3.291,705,3.291,706,3.291,707,3.291,708,3.291,709,3.291,710,3.291,711,3.291,712,3.291,713,3.291,714,3.291]],["title/injectables/PoiDto.html",[205,0.638,695,2.492]],["body/injectables/PoiDto.html",[0,0.031,3,0.076,4,0.067,5,0.067,8,2.181,15,1.276,17,0.214,18,1.05,22,1.049,27,0.014,28,1.088,32,0.61,33,1.903,36,0.414,39,0.076,45,0.004,46,0.007,47,0.004,72,1.97,88,0.345,161,1.822,162,0.947,163,1.693,164,2.758,205,0.628,206,0.845,261,1.619,275,3.649,277,3.649,280,1.798,281,3.446,282,3.446,284,3.649,300,2.309,311,1.539,316,3.404,318,3.404,323,3.404,407,3.603,422,4.685,427,3.069,434,1.984,435,1.984,436,4.163,437,5.586,438,4.023,439,1.412,442,2.802,443,5.771,444,1.163,533,3.603,669,3.753,671,4.567,690,3.404,691,3.404,695,2.451,715,2.201,716,4.786,717,2.53,718,2.53,719,3.913,720,4.786,721,2.53,722,2.53,723,2.53,724,2.53,725,2.53,726,2.53,727,2.53,728,2.53,729,2.53,730,2.53,731,3.913,732,5.386,733,2.53,734,2.53,735,2.53,736,2.53,737,2.818,738,2.53,739,4.786,740,3.069,741,2.201,742,2.53,743,1.585,744,2.53,745,2.53]],["title/interfaces/PoiInterface.html",[35,1.432,737,2.864]],["body/interfaces/PoiInterface.html",[3,0.128,4,0.112,5,0.112,8,1.976,17,0.358,18,1.524,27,0.014,28,1.28,29,1.471,32,0.626,33,2.085,35,1.523,39,0.128,45,0.007,46,0.01,47,0.007,48,2.242,261,1.574,275,4.293,277,4.293,281,4.935,282,4.935,284,4.293,669,5.373,670,5.961,671,5.373,737,4.09,746,3.681]],["title/modules/PoiModule.html",[113,0.959,131,2.492]],["body/modules/PoiModule.html",[0,0.034,3,0.127,4,0.111,5,0.111,27,0.014,36,0.476,39,0.127,45,0.007,46,0.01,47,0.007,60,1.96,88,0.574,113,1.541,115,1.574,116,1.574,117,1.704,118,1.704,119,1.574,120,2.589,121,2.589,128,4.602,131,4.937,133,4.602,139,2.291,140,1.704,141,1.704,143,2.601,151,2.024,152,1.304,160,3.659,162,2.116,164,1.704,166,2.482,167,2.228,168,3.659,513,2.482,639,3.659,646,4.684,688,4.603,740,3.298,741,3.659,747,3.659,748,4.206,749,3.659,750,3.659,751,4.206,752,3.659,753,4.206]],["title/injectables/PoiService.html",[205,0.638,646,2.347]],["body/injectables/PoiService.html",[0,0.03,3,0.112,4,0.098,5,0.098,12,1.236,17,0.314,20,2.017,22,0.885,26,1.725,27,0.014,28,1.117,29,1.549,32,0.415,36,0.441,39,0.112,45,0.006,46,0.009,47,0.006,67,1.495,68,2.191,79,1.495,85,1.866,88,0.505,99,1.664,105,2.245,152,1.148,162,2.237,164,1.5,166,2.184,167,1.961,205,0.831,206,1.236,260,2.852,261,0.745,263,1.63,280,1.236,311,1.494,343,1.148,455,3.116,466,2.066,467,2.066,468,1.867,474,2.066,475,1.867,511,4.28,513,2.184,533,2.477,608,3.467,646,3.058,692,4.508,694,4.508,695,2.319,752,3.221,754,3.221,755,5.183,756,3.702,757,7.255,758,4.28,759,3.702,760,5.183,761,3.702,762,5.183,763,3.702,764,3.702,765,3.702,766,3.702,767,3.702,768,3.702,769,3.702,770,3.702,771,3.702,772,3.702]],["title/injectables/PoiTransformationPipe.html",[205,0.638,703,2.864]],["body/injectables/PoiTransformationPipe.html",[0,0.037,3,0.139,4,0.122,5,0.122,15,2.32,17,0.39,22,0.681,26,1.327,27,0.014,28,0.86,29,1.192,30,4.016,32,0.368,36,0.417,39,0.139,45,0.008,46,0.01,47,0.008,67,1.731,68,2.072,79,1.327,85,2.161,88,0.627,99,1.859,205,0.963,206,1.536,263,2.025,391,3.35,695,3.761,703,4.323,773,4.002,774,6.003,775,5.813,776,7.083,777,4.601,778,6.003,779,3.608,780,4.601,781,6.003,782,6.003,783,4.601,784,4.601,785,6.003,786,4.601,787,4.601]],["title/classes/Role.html",[0,0.032,153,1.914]],["body/classes/Role.html",[0,0.042,2,1.955,3,0.158,4,0.138,5,0.138,17,0.443,18,1.748,22,0.964,27,0.014,32,0.522,33,1.627,36,0.326,39,0.158,45,0.009,46,0.011,47,0.009,72,1.812,153,3.675,274,2.994,280,2.368,285,3.764,311,1.627,312,3.577,334,3.634,343,1.621,344,3.084,788,4.546,789,5.227,790,6.512,791,5.227]],["title/guards/RoleGuard.html",[94,1.914,792,3.119]],["body/guards/RoleGuard.html",[0,0.035,3,0.132,4,0.115,5,0.115,15,2.199,17,0.369,20,1.697,22,0.858,26,1.671,27,0.014,28,1.083,29,1.501,32,0.464,36,0.406,39,0.132,45,0.007,46,0.01,47,0.007,56,3.14,67,1.671,79,1.258,85,2.086,88,0.595,94,2.788,96,2.551,99,1.612,155,2.446,204,1.84,205,0.929,261,0.877,263,3.053,385,2.918,793,4.361,794,3.794,795,6.936,796,4.361,797,7.423,798,4.361,799,5.795,800,6.936,801,4.361,802,4.361,803,5.795,804,6.509,805,3.794,806,3.794,807,4.361,808,4.361,809,4.361,810,4.361,811,5.795,812,4.361,813,4.361,814,4.361]],["title/modules/RoleModule.html",[113,0.959,132,2.347]],["body/modules/RoleModule.html",[0,0.039,3,0.147,4,0.129,5,0.129,27,0.014,36,0.451,39,0.147,45,0.008,46,0.01,47,0.008,88,0.664,113,1.655,115,1.822,116,1.822,117,1.972,118,1.972,119,1.822,120,2.781,121,2.781,132,4.588,139,2.522,140,1.972,141,1.972,143,2.239,151,2.342,152,1.51,153,2.342,567,4.786,815,4.235,816,4.235,817,4.235,818,4.869,819,4.869,820,4.235,821,4.869]],["title/injectables/RoleService.html",[205,0.638,567,2.347]],["body/injectables/RoleService.html",[0,0.028,3,0.105,4,0.092,5,0.092,8,0.998,12,1.155,17,0.293,20,1.922,22,0.931,26,1.812,27,0.014,28,1.174,29,1.628,32,0.461,33,1.44,36,0.392,39,0.105,43,2.432,45,0.006,46,0.008,47,0.006,67,1.425,68,2.296,79,1.662,85,2.262,88,0.472,96,1.523,99,1.748,105,1.712,152,1.073,153,3.023,205,0.792,206,1.155,209,3.873,260,1.523,261,0.696,280,1.649,311,1.57,343,1.073,455,3.198,466,1.931,467,1.931,468,1.744,474,1.931,475,1.744,567,2.914,820,3.009,822,3.009,823,4.94,824,4.94,825,4.94,826,3.459,827,3.459,828,5.762,829,4.94,830,3.459,831,6.285,832,4.94,833,3.459,834,6.285,835,4.94,836,3.459,837,3.459,838,3.459,839,3.459,840,3.459,841,3.459,842,3.459,843,3.459,844,4.94,845,3.459,846,3.459,847,3.459]],["title/classes/Tag.html",[0,0.032,162,1.488]],["body/classes/Tag.html",[0,0.041,2,1.906,3,0.154,4,0.135,5,0.135,17,0.432,18,1.72,22,0.949,27,0.014,32,0.513,33,1.602,36,0.4,39,0.154,45,0.009,46,0.011,47,0.009,72,1.783,162,2.837,274,2.947,280,2.341,311,1.602,312,3.232,334,3.577,343,1.58,344,3.006,442,3.373,444,2.343,603,3.669,848,4.432,849,5.096,850,3.996,851,5.575,852,5.096]],["title/controllers/TagsController.html",[9,1.328,853,2.864]],["body/controllers/TagsController.html",[0,0.027,3,0.101,4,0.089,5,0.089,9,1.117,12,1.61,17,0.283,22,0.916,26,1.631,27,0.014,28,1.057,29,1.464,32,0.453,36,0.439,39,0.101,43,1.412,45,0.006,46,0.008,47,0.006,60,1.159,67,1.391,68,2.366,72,1.722,79,1.785,85,2.228,86,2.691,87,1.867,88,0.456,91,2.096,92,1.687,94,1.609,95,1.867,96,1.473,97,1.867,99,1.722,105,2.274,107,2.096,108,3.156,109,3.156,162,1.252,204,2.035,261,0.673,311,1.708,347,1.867,358,4.032,363,2.623,365,2.238,370,2.623,377,1.974,378,3.783,380,1.974,385,2.238,386,3.336,387,2.623,390,2.623,391,1.867,397,2.409,533,2.238,696,2.91,758,3.336,853,3.473,854,2.91,855,4.195,856,4.195,857,5.383,858,4.195,859,2.91,860,4.724,861,3.345,862,4.195,863,2.91,864,3.345,865,5.383,866,2.623,867,3.345,868,2.91,869,3.345,870,2.91,871,2.623,872,3.345,873,3.345,874,3.345,875,3.345,876,4.822,877,3.345,878,3.345,879,3.345]],["title/classes/TagsDto.html",[0,0.032,860,2.864]],["body/classes/TagsDto.html",[0,0.051,2,1.866,3,0.151,4,0.132,5,0.132,8,1.439,15,3.189,17,0.423,18,1.697,22,0.739,27,0.014,28,1.182,32,0.399,33,1.58,36,0.433,39,0.151,45,0.008,46,0.011,47,0.008,72,1.388,162,2.819,261,1.397,307,4.554,342,3.592,407,3.337,438,3.961,439,2.784,442,3.042,444,2.294,860,4.554,880,4.339,881,5,882,6.324,883,6.324,884,4.339,885,4.988,886,4.988]],["title/interfaces/TagsInterface.html",[35,1.432,881,2.864]],["body/interfaces/TagsInterface.html",[3,0.176,4,0.154,5,0.154,17,0.494,18,1.868,27,0.013,32,0.467,33,1.859,35,2.097,39,0.176,45,0.01,46,0.012,47,0.01,48,3.087,162,2.883,261,1.172,881,5.011,887,5.068]],["title/modules/TagsModule.html",[113,0.959,133,2.492]],["body/modules/TagsModule.html",[0,0.038,3,0.143,4,0.125,5,0.125,27,0.014,36,0.462,39,0.143,45,0.008,46,0.01,47,0.008,60,2.116,88,0.644,113,1.631,115,1.767,116,1.767,117,1.913,118,1.913,119,1.767,120,2.741,121,2.741,133,4.837,139,2.473,140,1.913,141,1.913,143,2.172,151,2.272,152,1.465,162,1.767,758,4.766,853,4.873,870,4.109,871,3.704,888,4.109,889,4.109,890,4.109,891,4.723,892,4.723,893,4.723]],["title/injectables/TagsService.html",[205,0.638,758,2.347]],["body/injectables/TagsService.html",[0,0.028,3,0.106,4,0.093,5,0.093,12,1.172,17,0.297,20,1.942,22,1.028,26,1.928,27,0.014,28,1.249,29,1.731,32,0.507,36,0.394,39,0.106,45,0.006,46,0.008,47,0.006,67,1.44,68,2.44,79,1.928,85,2.277,88,0.479,99,1.86,105,2.316,152,1.089,162,1.313,205,0.8,206,1.172,260,1.545,261,0.706,280,1.172,311,1.857,343,1.089,455,3.044,466,1.959,467,1.959,468,1.77,474,1.959,475,1.77,758,2.945,855,4.342,856,4.342,857,5.503,858,4.342,859,4.342,862,3.054,863,4.342,865,5.053,868,4.342,871,2.753,894,3.054,895,4.992,896,3.511,897,3.511,898,4.992,899,3.511,900,3.511,901,3.511,902,3.511,903,4.992,904,3.511,905,3.511,906,3.511,907,3.511,908,3.511,909,3.511,910,3.511,911,3.511,912,3.511]],["title/classes/Type.html",[0,0.032,32,0.319]],["body/classes/Type.html",[0,0.041,2,1.906,3,0.154,4,0.135,5,0.135,17,0.432,18,1.72,22,0.949,27,0.014,32,0.629,33,1.602,36,0.4,39,0.154,45,0.009,46,0.011,47,0.009,72,1.783,274,2.947,280,2.341,311,1.602,312,3.232,334,3.577,343,1.58,344,3.006,442,3.373,444,2.343,603,3.669,850,3.996,851,5.575,913,4.432,914,5.096,915,5.096]],["title/controllers/TypeController.html",[9,1.328,916,2.864]],["body/controllers/TypeController.html",[0,0.025,3,0.093,4,0.081,5,0.081,8,0.886,9,1.797,12,1.512,17,0.26,22,0.88,26,1.553,27,0.014,28,1.006,29,1.394,32,0.549,36,0.428,39,0.093,43,2.675,45,0.005,46,0.008,47,0.005,60,1.064,67,1.307,68,2.327,72,1.653,79,1.714,85,2.139,86,2.528,87,1.714,88,0.419,91,1.924,92,1.548,94,1.477,95,1.714,96,1.352,97,1.714,99,1.653,105,2.197,107,1.924,108,3.317,109,3.317,204,1.912,261,0.618,311,1.657,347,1.714,357,2.054,358,3.913,363,2.408,365,2.054,370,2.408,377,1.812,378,3.602,380,1.812,385,2.054,386,3.176,387,2.408,390,2.408,391,1.714,397,2.211,743,4.411,866,2.408,916,3.263,917,2.671,918,3.941,919,4.531,920,3.941,921,5.943,922,2.671,923,3.071,924,3.071,925,3.071,926,5.201,927,2.671,928,3.071,929,3.071,930,3.723,931,2.671,932,2.408,933,2.671,934,3.071,935,3.071,936,3.071,937,4.531,938,3.071,939,3.071,940,3.071]],["title/classes/TypeDto.html",[0,0.032,743,2.492]],["body/classes/TypeDto.html",[0,0.05,2,1.853,3,0.15,4,0.131,5,0.131,8,1.429,15,3.175,17,0.42,18,1.69,22,0.733,27,0.014,32,0.615,33,1.573,36,0.432,39,0.15,45,0.008,46,0.011,47,0.008,72,1.378,157,3.175,261,1.392,307,4.534,339,4.534,340,4.534,342,3.567,407,3.314,438,3.944,439,2.765,442,3.029,444,2.278,743,3.944,884,4.309,941,4.309,942,4.984,943,5.476,944,4.954,945,4.954]],["title/classes/TypeGreenScore.html",[0,0.032,182,1.829]],["body/classes/TypeGreenScore.html",[0,0.039,2,1.828,3,0.148,4,0.129,5,0.129,17,0.414,18,1.675,22,0.924,27,0.014,32,0.5,33,1.559,36,0.389,39,0.148,45,0.008,46,0.01,47,0.008,72,1.736,175,2.676,182,3.443,261,1.54,274,2.87,280,2.295,311,1.559,312,3.147,334,3.483,343,1.515,344,2.882,442,3.308,444,2.247,603,3.518,850,3.831,946,4.057,947,4.25,948,4.885,949,6.24,950,4.885]],["title/controllers/TypeGreenScoreController.html",[9,1.328,951,2.864]],["body/controllers/TypeGreenScoreController.html",[0,0.024,3,0.089,4,0.078,5,0.078,8,0.851,9,1.755,12,1.468,17,0.25,22,0.863,26,1.516,27,0.014,28,0.982,29,1.362,32,0.542,36,0.422,39,0.089,43,2.63,45,0.005,46,0.007,47,0.005,60,1.022,67,1.268,68,2.307,72,1.621,79,1.681,85,2.098,86,2.454,87,1.646,88,0.402,94,1.419,95,1.646,96,1.299,97,1.646,98,2.124,99,1.621,105,2.02,108,3.252,109,3.252,153,1.419,154,2.124,175,2.978,178,3.677,180,2.803,182,1.356,204,1.245,311,1.633,347,1.646,357,1.973,358,3.102,365,1.973,377,1.74,378,3.517,380,1.74,386,1.74,391,1.646,397,2.124,481,2.313,487,2.124,611,4.372,647,3.438,866,2.313,933,2.566,946,3.677,951,3.167,952,4.397,953,3.825,954,5.827,955,4.397,956,2.95,957,4.17,958,2.95,959,5.258,960,2.566,961,2.95,962,2.95,963,2.95,964,2.95,965,2.95,966,2.95,967,2.313,968,2.95,969,2.95,970,2.95,971,2.95,972,2.95,973,2.95,974,2.95,975,2.95]],["title/classes/TypeGreenScoreDto.html",[0,0.032,957,2.661]],["body/classes/TypeGreenScoreDto.html",[0,0.052,2,1.927,3,0.156,4,0.136,5,0.136,15,3.254,17,0.436,18,1.732,22,0.763,27,0.014,32,0.413,33,1.612,36,0.439,39,0.156,45,0.009,46,0.011,47,0.009,72,1.433,175,2.742,182,3.24,261,1.418,438,4.042,439,2.875,442,3.104,444,2.369,946,3.807,957,4.317,976,4.481,977,5.074,978,5.151,979,5.151,980,5.151,981,5.151]],["title/interfaces/TypeGreenScoreInterface.html",[35,1.432,977,2.864]],["body/interfaces/TypeGreenScoreInterface.html",[3,0.173,4,0.152,5,0.152,17,0.486,18,1.85,27,0.013,32,0.459,33,1.846,35,2.063,39,0.173,45,0.01,46,0.012,47,0.01,48,3.037,175,2.681,182,3.525,261,1.153,946,3.382,977,4.962,982,4.986,983,4.986]],["title/modules/TypeGreenScoreModule.html",[113,0.959,134,2.492]],["body/modules/TypeGreenScoreModule.html",[0,0.037,3,0.139,4,0.122,5,0.122,27,0.014,32,0.481,36,0.458,39,0.139,45,0.008,46,0.01,47,0.008,60,2.08,88,0.627,113,1.611,115,1.721,116,1.721,117,1.864,118,1.864,119,1.721,120,2.707,121,2.707,134,4.807,139,2.432,140,1.864,141,1.864,143,2.116,151,2.213,152,1.427,175,2.756,178,2.714,182,2.116,486,4.002,487,3.313,488,4.002,647,4.748,946,2.714,951,4.812,967,3.608,984,4.002,985,4.002,986,4.002,987,4.601]],["title/injectables/TypeGreenScoreService.html",[205,0.638,647,2.347]],["body/injectables/TypeGreenScoreService.html",[0,0.028,3,0.106,4,0.093,5,0.093,12,1.169,17,0.297,20,1.939,22,0.989,26,1.823,27,0.014,28,1.181,29,1.637,32,0.399,36,0.394,39,0.106,45,0.006,46,0.008,47,0.006,67,1.437,68,2.386,79,1.823,85,2.275,88,0.478,99,1.758,105,2.314,152,1.086,175,3.02,178,4.094,180,1.685,182,2.291,205,0.799,206,1.169,260,1.542,261,0.705,263,1.542,280,1.169,311,1.45,343,1.086,455,3.04,466,1.954,467,1.954,468,1.766,474,1.954,475,1.766,489,2.746,611,2.343,647,2.94,926,3.907,946,4.094,953,4.335,957,2.343,960,4.335,967,2.746,988,4.983,989,5.497,990,4.983,991,3.502,992,3.502,993,4.983,994,4.983,995,3.502,996,3.502,997,3.502,998,4.983,999,3.502,1000,3.502,1001,3.502,1002,3.502,1003,3.502,1004,3.046,1005,3.502,1006,3.502]],["title/interfaces/TypeInterface.html",[35,1.432,942,2.864]],["body/interfaces/TypeInterface.html",[3,0.176,4,0.154,5,0.154,17,0.494,18,1.868,27,0.013,32,0.631,33,1.859,35,2.097,39,0.176,45,0.01,46,0.012,47,0.01,48,3.087,261,1.172,942,5.011,1007,5.068]],["title/modules/TypeModule.html",[113,0.959,135,2.661]],["body/modules/TypeModule.html",[0,0.039,3,0.148,4,0.13,5,0.13,27,0.014,32,0.393,36,0.467,39,0.148,45,0.008,46,0.011,47,0.008,60,2.167,88,0.668,113,1.66,115,1.834,116,1.834,117,1.986,118,1.986,119,1.834,120,2.79,121,1.986,135,5.126,139,2.533,140,1.986,141,1.986,143,2.254,151,2.358,152,1.52,916,4.96,930,4.8,931,4.264,932,3.844,1008,4.264,1009,4.264,1010,4.902,1011,4.902,1012,4.902]],["title/injectables/TypeService.html",[205,0.638,930,2.492]],["body/injectables/TypeService.html",[0,0.03,3,0.113,4,0.099,5,0.099,12,1.252,17,0.318,20,2.035,22,1.015,26,1.879,27,0.014,28,1.217,29,1.687,32,0.522,36,0.406,39,0.113,45,0.006,46,0.009,47,0.006,67,1.508,68,2.416,79,1.879,85,2.345,88,0.512,99,1.813,105,2.258,152,1.163,205,0.839,206,1.252,260,1.651,261,0.755,280,1.252,311,1.773,343,1.163,455,3.134,466,2.094,467,2.094,468,1.892,474,2.094,475,1.892,743,2.35,918,4.55,920,4.55,922,4.55,926,4.722,927,4.55,930,3.277,932,2.942,989,5.667,1004,3.263,1013,3.263,1014,5.23,1015,3.751,1016,3.751,1017,5.23,1018,3.751,1019,5.23,1020,3.751,1021,3.751,1022,3.751,1023,3.751,1024,3.751,1025,3.751,1026,3.751,1027,3.751]],["title/classes/User.html",[0,0.032,155,1.679]],["body/classes/User.html",[0,0.031,2,1.445,3,0.117,4,0.102,5,0.102,17,0.327,18,1.433,22,1.06,27,0.014,28,0.722,32,0.574,33,1.869,36,0.333,39,0.117,45,0.006,46,0.009,47,0.006,72,1.992,153,3.599,154,2.782,155,2.253,196,3.414,204,2.253,257,3.414,274,2.455,280,2.042,285,4.751,300,2.279,311,1.334,312,3.085,314,4.644,324,5.174,334,3.865,343,1.198,344,3.893,493,2.782,494,4.186,495,4.797,496,4.186,497,3.029,503,3.844,504,2.782,505,2.782,1028,3.361,1029,4.797,1030,4.797,1031,3.863,1032,3.863,1033,3.863,1034,5.338,1035,3.863,1036,5.338,1037,3.863,1038,5.338,1039,3.863,1040,3.863]],["title/modules/UserAppModule.html",[113,0.959,136,2.661]],["body/modules/UserAppModule.html",[0,0.042,3,0.159,4,0.139,5,0.139,27,0.014,36,0.408,39,0.159,45,0.009,46,0.011,47,0.009,88,0.718,113,1.716,115,1.97,116,1.97,117,2.133,118,2.133,119,1.97,120,2.883,121,2.133,136,5.22,139,2.65,140,2.133,141,2.133,145,4.58,155,2.222,169,3.792,1041,4.58,1042,4.58,1043,5.22,1044,4.129,1045,5.265]],["title/injectables/UserAppService.html",[205,0.638,1043,2.661]],["body/injectables/UserAppService.html",[0,0.048,3,0.18,4,0.158,5,0.158,27,0.013,36,0.372,39,0.18,45,0.01,46,0.012,47,0.01,88,0.814,169,4.301,205,1.132,206,1.994,1043,4.724,1044,4.684,1046,5.196]],["title/controllers/UserController.html",[9,1.328,1047,2.864]],["body/controllers/UserController.html",[0,0.031,3,0.117,4,0.103,5,0.103,8,1.12,9,2.048,12,1.789,17,0.329,22,0.793,26,1.12,27,0.014,28,0.726,29,1.006,32,0.311,36,0.433,39,0.117,40,2.797,41,2.797,43,1.639,45,0.007,46,0.009,47,0.007,60,1.346,67,1.545,68,2.224,72,1.491,75,3.161,79,1.545,83,3.859,86,2.991,87,2.168,88,0.53,94,1.869,95,2.168,96,1.71,97,2.168,98,2.797,99,1.491,103,3.046,104,3.046,108,2.991,109,2.991,155,2.928,204,1.639,245,3.424,347,2.168,357,2.599,358,3.619,360,3.859,377,2.292,380,2.292,386,2.292,391,2.168,1047,3.859,1048,3.379,1049,4.661,1050,6.613,1051,3.379,1052,5.011,1053,3.885,1054,3.885,1055,3.885,1056,4.661,1057,3.379,1058,3.885,1059,3.885,1060,3.885,1061,3.885,1062,3.885,1063,3.885]],["title/classes/UserDto.html",[0,0.032,1052,2.661]],["body/classes/UserDto.html",[0,0.041,2,1.378,3,0.111,4,0.097,5,0.097,8,1.963,15,2.604,17,0.312,18,1.386,22,1.008,27,0.014,28,1.208,32,0.545,33,1.902,36,0.403,39,0.111,45,0.006,46,0.009,47,0.006,72,1.893,153,3.274,155,2.977,196,3.798,257,3.328,261,1.595,407,4.553,427,4.049,434,2.888,438,4.049,439,2.056,442,3.394,444,1.694,1029,4.676,1030,4.676,1052,3.455,1064,3.204,1065,4.294,1066,5.164,1067,5.963,1068,3.683,1069,5.164,1070,3.683,1071,4.492,1072,3.683,1073,3.683,1074,3.683,1075,5.164,1076,3.683,1077,3.683,1078,3.683,1079,5.164,1080,4.492,1081,3.683,1082,3.683]],["title/interfaces/UserInterface.html",[35,1.432,1065,2.864]],["body/interfaces/UserInterface.html",[3,0.151,4,0.133,5,0.133,17,0.424,18,1.701,27,0.013,32,0.604,33,2.058,35,1.802,39,0.151,45,0.008,46,0.011,47,0.008,48,2.652,153,3.517,196,4.08,257,4.08,261,1.517,1029,5.732,1030,5.732,1065,4.564,1083,4.354]],["title/modules/UserModule.html",[113,0.959,137,2.492]],["body/modules/UserModule.html",[0,0.036,3,0.136,4,0.119,5,0.119,27,0.014,36,0.467,39,0.136,45,0.008,46,0.01,47,0.008,60,2.05,88,0.613,113,1.594,115,1.683,116,1.683,117,1.822,118,1.822,119,1.683,120,2.677,121,2.677,132,4.418,137,4.908,139,2.396,140,1.822,141,1.822,143,2.72,148,3.528,151,2.164,152,1.395,155,1.899,245,4.476,1047,4.76,1057,3.914,1084,3.914,1085,4.499,1086,3.914,1087,3.914,1088,4.499,1089,4.499,1090,3.914,1091,4.499]],["title/injectables/UserService.html",[205,0.638,245,2.22]],["body/injectables/UserService.html",[0,0.026,3,0.098,4,0.086,5,0.086,12,1.57,17,0.274,20,1.83,22,0.958,26,1.866,27,0.014,28,1.209,29,1.676,32,0.488,33,1.687,36,0.435,39,0.098,45,0.005,46,0.008,47,0.005,67,1.356,68,2.35,79,1.756,85,1.693,88,0.441,99,1.694,105,2.11,152,1.002,153,2.262,154,2.327,155,1.985,196,1.803,205,0.754,206,1.079,245,2.625,257,1.803,259,3.688,260,2.07,261,0.946,263,2.07,266,2.811,268,4.091,294,2.811,311,1.385,343,1.002,455,2.93,466,2.625,467,1.803,468,1.629,474,2.625,475,2.371,538,2.534,567,4.112,579,2.811,1049,4.091,1051,4.091,1052,3.146,1071,4.823,1090,2.811,1092,2.811,1093,4.703,1094,4.703,1095,4.703,1096,3.231,1097,3.231,1098,4.703,1099,3.231,1100,4.703,1101,3.231,1102,4.703,1103,3.231,1104,4.703,1105,3.231,1106,3.231,1107,4.703,1108,3.231,1109,3.231,1110,3.231,1111,3.231,1112,3.231,1113,3.231,1114,4.703,1115,3.231]],["title/coverage.html",[1116,4.271]],["body/coverage.html",[0,0.059,1,1.503,5,0.059,6,1.954,7,1.954,9,2.19,12,0.75,16,1.618,27,0.014,32,0.567,35,2.293,45,0.004,46,0.006,47,0.004,49,1.954,50,1.954,59,1.618,61,1.954,89,1.325,94,1.081,96,0.989,119,0.84,138,1.503,153,1.081,155,0.948,157,1.133,162,1.888,164,0.91,167,1.889,169,1.618,171,1.325,173,1.407,175,2.853,176,2.385,178,2.103,180,3.065,181,2.385,182,1.033,184,1.407,205,1.204,207,1.954,219,1.503,220,1.503,237,1.954,245,1.254,273,1.954,286,5.749,345,1.618,346,1.954,356,1.503,381,1.407,402,1.954,430,1.618,446,1.954,452,1.954,479,1.618,480,2.567,481,2.796,485,1.503,489,2.796,490,2.977,491,1.954,511,1.325,515,3.192,541,1.954,549,1.503,564,1.954,567,1.325,592,1.954,601,3.247,602,1.954,614,1.618,615,1.954,620,1.503,622,1.407,626,1.954,627,1.618,634,1.954,635,1.954,646,1.325,647,1.325,668,1.954,688,1.618,689,1.954,695,1.407,703,1.618,715,1.954,737,1.618,743,1.407,746,1.954,754,1.954,758,1.325,773,1.954,779,1.761,788,1.954,792,1.761,794,1.954,822,1.954,848,1.954,853,1.618,854,1.954,860,1.618,880,1.954,881,1.618,887,1.954,894,1.954,913,1.954,916,1.618,917,1.954,930,1.407,941,1.954,942,1.618,946,3.247,947,1.954,951,1.618,957,1.503,976,1.954,977,1.618,982,1.954,983,1.954,1007,1.954,1013,1.954,1028,1.954,1043,1.503,1044,1.761,1046,1.954,1047,1.618,1048,1.954,1052,1.503,1064,1.954,1065,1.618,1083,1.954,1092,1.954,1116,1.761,1117,2.246,1118,2.246,1119,2.246,1120,5.504,1121,4.433,1122,2.246,1123,3.565,1124,2.246,1125,2.246,1126,8.003,1127,2.246,1128,1.954,1129,3.565,1130,4.433,1131,4.433,1132,5.504,1133,5.858,1134,5.504,1135,5.047,1136,1.954,1137,1.761,1138,2.246,1139,6.14,1140,2.246,1141,2.246,1142,3.565,1143,4.433,1144,4.433,1145,3.565,1146,1.954,1147,2.246,1148,2.246]],["title/dependencies.html",[116,1.792,1149,3.313]],["body/dependencies.html",[0,0.048,13,2.864,27,0.014,45,0.008,46,0.01,47,0.008,88,0.623,92,2.305,116,1.71,152,1.418,187,3.976,225,3.585,229,3.585,259,3.585,343,1.418,439,2.551,444,2.102,578,5.224,775,3.976,805,3.976,806,3.976,1150,6.661,1151,5.978,1152,4.571,1153,5.795,1154,4.571,1155,4.571,1156,4.571,1157,5.978,1158,4.571,1159,4.571,1160,4.571,1161,5.978,1162,4.571,1163,4.571,1164,4.571,1165,4.571,1166,4.571,1167,4.571,1168,4.571,1169,4.571,1170,4.571,1171,4.571,1172,3.976,1173,4.571,1174,3.976,1175,4.571,1176,4.571,1177,4.571,1178,4.571,1179,4.571,1180,4.571,1181,4.571,1182,4.571,1183,4.571,1184,4.571,1185,4.571,1186,4.571,1187,4.571]],["title/miscellaneous/enumerations.html",[1188,2.075,1189,4.166]],["body/miscellaneous/enumerations.html",[17,0.478,27,0.011,45,0.009,46,0.011,47,0.009,155,2.381,157,2.845,195,4.907,339,4.062,340,4.062,410,4.424,440,5.936,740,5.351,943,4.907,1080,5.936,1188,3.534,1189,4.907,1190,5.641,1191,5.641,1192,5.641,1193,5.641,1194,5.641,1195,5.641,1196,5.641,1197,5.641,1198,5.641,1199,5.641,1200,5.641,1201,5.641,1202,5.641,1203,5.641,1204,5.641,1205,5.641]],["title/miscellaneous/functions.html",[1188,2.075,1206,4.166]],["body/miscellaneous/functions.html",[17,0.48,27,0.012,45,0.01,46,0.012,47,0.01,83,4.079,119,2.75,330,4.441,459,4.079,1136,4.927,1137,4.441,1153,4.927,1172,4.927,1174,4.927,1188,3.548,1206,4.927,1207,5.664,1208,5.664,1209,5.664,1210,5.664,1211,5.664,1212,4.927,1213,5.664,1214,5.664,1215,5.664,1216,5.664,1217,5.664,1218,5.664,1219,5.664,1220,5.664,1221,5.664,1222,5.664,1223,5.664]],["title/index.html",[17,0.281,1224,3.313,1225,3.313]],["body/index.html",[4,0.119,8,1.302,27,0.014,45,0.008,46,0.01,47,0.008,166,2.663,210,5.759,241,3.926,317,3.539,410,3.539,455,2.171,1056,5.157,1116,3.539,1212,3.926,1226,4.513,1227,4.513,1228,5.928,1229,4.513,1230,4.513,1231,4.513,1232,4.513,1233,4.513,1234,4.513,1235,4.513,1236,4.513,1237,4.513,1238,4.513,1239,4.513,1240,4.513,1241,7.639,1242,4.513,1243,4.513,1244,7.495,1245,4.513,1246,5.928,1247,4.513,1248,4.513,1249,4.513,1250,4.513,1251,5.928,1252,4.513,1253,4.513,1254,4.513,1255,5.928,1256,5.928,1257,4.513,1258,4.513,1259,4.513,1260,4.513,1261,4.513,1262,3.926,1263,4.513,1264,4.513,1265,4.513,1266,4.513,1267,4.513,1268,4.513,1269,4.513,1270,4.513,1271,4.513,1272,4.513,1273,4.513,1274,4.513,1275,4.513,1276,4.513,1277,4.513]],["title/modules.html",[115,2.038]],["body/modules.html",[27,0.01,45,0.008,46,0.01,47,0.008,114,3.518,115,1.828,125,3.268,126,3.268,127,3.268,128,3.06,129,3.268,130,3.268,131,3.06,132,2.882,133,3.06,134,3.06,135,3.268,136,3.268,137,3.06,1262,7.121,1278,8.187,1279,8.187,1280,8.187]],["title/overview.html",[1281,4.738]],["body/overview.html",[2,0.998,27,0.014,45,0.004,46,0.007,47,0.004,48,1.413,60,0.924,89,3.861,113,0.643,114,5.787,115,0.998,116,0.998,117,1.08,118,1.08,119,0.998,120,1.08,121,1.08,122,2.32,123,2.32,124,2.32,125,4.981,126,3.991,127,3.991,128,4.099,129,4.208,130,4.627,131,4.495,132,3.981,133,4.099,134,4.099,135,3.991,136,3.991,137,4.333,138,3.309,139,1.651,140,1.08,141,1.08,206,0.89,215,2.32,217,2.32,218,2.32,219,3.309,220,3.309,245,3.652,327,2.32,381,3.099,447,2.32,448,2.32,483,2.32,484,2.32,485,3.309,508,2.32,509,2.32,510,2.32,511,3.861,546,2.32,547,2.32,548,2.32,549,4.378,567,3.861,622,3.099,636,2.32,638,2.32,646,3.861,647,3.861,747,2.32,749,2.32,750,2.32,758,3.861,792,2.092,815,2.32,816,2.32,817,2.32,888,2.32,889,2.32,890,2.32,930,3.099,984,2.32,985,2.32,986,2.32,1008,2.32,1009,2.32,1041,2.32,1042,2.32,1043,3.309,1084,2.32,1086,2.32,1087,2.32,1281,2.32,1282,2.668,1283,2.668,1284,2.668,1285,2.668,1286,2.668]],["title/miscellaneous/variables.html",[1188,2.075,1287,4.166]],["body/miscellaneous/variables.html",[0,0.042,17,0.449,24,3.13,25,3.82,27,0.014,30,4.993,33,1.325,45,0.009,46,0.011,47,0.009,75,3.13,96,3.378,99,1.987,239,3.549,256,3.323,292,4.733,779,5.154,1128,4.614,1137,5.154,1146,4.614,1188,3.323,1287,4.614,1288,5.305,1289,5.305,1290,5.305,1291,5.305,1292,5.305,1293,5.305,1294,5.305,1295,5.305]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":327,"title":{},"body":{"classes/Company.html":{},"overview.html":{}}}],["1.0.0",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":294,"title":{},"body":{"classes/Company.html":{},"injectables/UserService.html":{}}}],["100",{"_index":286,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"coverage.html":{}}}],["11/11",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1282,"title":{},"body":{"overview.html":{}}}],["15",{"_index":790,"title":{},"body":{"classes/Role.html":{}}}],["150",{"_index":672,"title":{},"body":{"classes/Poi.html":{}}}],["16",{"_index":1285,"title":{},"body":{"overview.html":{}}}],["19",{"_index":1284,"title":{},"body":{"overview.html":{}}}],["2.18.1",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1036,"title":{},"body":{"classes/User.html":{}}}],["2020",{"_index":293,"title":{},"body":{"classes/Company.html":{}}}],["25",{"_index":851,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{}}}],["255",{"_index":1034,"title":{},"body":{"classes/User.html":{}}}],["3.0.0",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":683,"title":{},"body":{"classes/Poi.html":{}}}],["33",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["3600s",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":298,"title":{},"body":{"classes/Company.html":{}}}],["5.0.0",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":324,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/User.html":{}}}],["6",{"_index":685,"title":{},"body":{"classes/Poi.html":{}}}],["6.1.1",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":949,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["75",{"_index":302,"title":{},"body":{"classes/Company.html":{}}}],["8",{"_index":1286,"title":{},"body":{"overview.html":{}}}],["9",{"_index":1283,"title":{},"body":{"overview.html":{}}}],["access",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken(token",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokeninterfaces",{"_index":16,"title":{"interfaces/AccessTokenInterfaces.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["account",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["add",{"_index":360,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"controllers/UserController.html":{}}}],["addcompany",{"_index":350,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["addcompany(@body",{"_index":388,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addcompany(companydto",{"_index":355,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["added",{"_index":361,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addgreenscore",{"_index":988,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addgreenscore(typegreenscoredto",{"_index":994,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addjointagpoi",{"_index":516,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjointagpoi(poitoadd",{"_index":523,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjointypepoi",{"_index":551,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["addjointypepoi(poitoadd",{"_index":556,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["addnewpercenttypegcandpoi",{"_index":618,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addnewpercenttypegcandpoi(@body",{"_index":624,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addnewpercenttypegcandpoi(percenttypegreenscoreandpoidto",{"_index":619,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addpercenttypegreenscoreandpoiservice",{"_index":642,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegreenscoreandpoiservice(percenttypegreenscoreandpoiservicedto",{"_index":650,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpoi",{"_index":692,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["addpoi(@body",{"_index":708,"title":{},"body":{"controllers/PoiController.html":{}}}],["addpoi(poidto",{"_index":694,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["address",{"_index":275,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["addtag",{"_index":855,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtag(@body",{"_index":873,"title":{},"body":{"controllers/TagsController.html":{}}}],["addtag(tagdto",{"_index":859,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtype",{"_index":918,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtype(@body",{"_index":934,"title":{},"body":{"controllers/TypeController.html":{}}}],["addtype(typedto",{"_index":922,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtypegreenscore",{"_index":952,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["addtypegreenscore(@body",{"_index":968,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["addtypegreenscore(typegreenscoreandpoidto",{"_index":956,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["adduser",{"_index":1049,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduser(@body",{"_index":1059,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(userdto",{"_index":1051,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["agence",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allows",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{}}}],["amazing",{"_index":1263,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1237,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":442,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@column",{"_index":605,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@column({length",{"_index":850,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty()@isnumber",{"_index":628,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["apiproperty()@isstring",{"_index":978,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":610,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":603,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty({description",{"_index":407,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":443,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isnumberstring()@isoptional",{"_index":722,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isoptional",{"_index":417,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["apipropertyoptional({description",{"_index":422,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional({type",{"_index":731,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apis",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1212,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":1045,"title":{},"body":{"modules/UserAppModule.html":{}}}],["app.service",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{}}}],["app.service.ts",{"_index":1046,"title":{},"body":{"injectables/UserAppService.html":{},"coverage.html":{}}}],["app/user",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["appcontroller",{"_index":59,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1234,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":114,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":138,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":776,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["around",{"_index":319,"title":{},"body":{"classes/Company.html":{}}}],["array",{"_index":732,"title":{},"body":{"injectables/PoiDto.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["attempt",{"_index":52,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["auth.service",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/access",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/auth.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["authentication",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["authmodule",{"_index":125,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1270,"title":{},"body":{"index.html":{}}}],["authorize",{"_index":57,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["authservice",{"_index":89,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autre",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["await",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":1264,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["begin",{"_index":297,"title":{},"body":{"classes/Company.html":{}}}],["begindeal",{"_index":276,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["bio",{"_index":882,"title":{},"body":{"classes/TagsDto.html":{}}}],["body",{"_index":377,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":803,"title":{},"body":{"guards/RoleGuard.html":{}}}],["bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1280,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1229,"title":{},"body":{"index.html":{}}}],["call",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":795,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":799,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cascade",{"_index":495,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":497,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/User.html":{}}}],["catch",{"_index":474,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["cf",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{}}}],["check",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":277,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"overview.html":{}}}],["client",{"_index":305,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["client'})@isnumberstring",{"_index":425,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["client'})@isstring",{"_index":408,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["cluster_appmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":447,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":448,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule",{"_index":483,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule_providers",{"_index":484,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule",{"_index":508,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_exports",{"_index":509,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_providers",{"_index":510,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointypepoimodule",{"_index":546,"title":{},"body":{"modules/JoinTypePoiModule.html":{},"overview.html":{}}}],["cluster_jointypepoimodule_exports",{"_index":547,"title":{},"body":{"modules/JoinTypePoiModule.html":{},"overview.html":{}}}],["cluster_jointypepoimodule_providers",{"_index":548,"title":{},"body":{"modules/JoinTypePoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule",{"_index":636,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_imports",{"_index":637,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_providers",{"_index":638,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_poimodule",{"_index":747,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_exports",{"_index":749,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_imports",{"_index":748,"title":{},"body":{"modules/PoiModule.html":{}}}],["cluster_poimodule_providers",{"_index":750,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":815,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":816,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":817,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":888,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":889,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":890,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule",{"_index":984,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_exports",{"_index":985,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_providers",{"_index":986,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typemodule",{"_index":1008,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_providers",{"_index":1009,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_userappmodule",{"_index":1041,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_userappmodule_providers",{"_index":1042,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1084,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1086,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1085,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1087,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["co",{"_index":339,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":337,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["column",{"_index":334,"title":{},"body":{"classes/Company.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["column({default",{"_index":326,"title":{},"body":{"classes/Company.html":{}}}],["column({length",{"_index":285,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":677,"title":{},"body":{"classes/Poi.html":{}}}],["column({type",{"_index":290,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{}}}],["company",{"_index":157,"title":{"classes/Company.html":{}},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/TypeDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["company.controller",{"_index":450,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.service",{"_index":382,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["company/companyentity",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["companycontroller",{"_index":345,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companydata",{"_index":470,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydata.id",{"_index":471,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydto",{"_index":356,"title":{"injectables/CompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyentity",{"_index":383,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["companyinterface",{"_index":430,"title":{"interfaces/CompanyInterface.html":{}},"body":{"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["companymodule",{"_index":126,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules.html":{},"overview.html":{}}}],["companyrepository",{"_index":457,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companys",{"_index":349,"title":{},"body":{"controllers/CompanyController.html":{}}}],["companyservice",{"_index":381,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{},"overview.html":{}}}],["compression",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["compte",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connect",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["connection",{"_index":757,"title":{},"body":{"injectables/PoiService.html":{}}}],["console",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["console.log('toto",{"_index":1062,"title":{},"body":{"controllers/UserController.html":{}}}],["const",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["constructor(accesstoken",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(authservice",{"_index":594,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companyrepository",{"_index":454,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(jointagpoirepository",{"_index":520,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["constructor(jointypepoirepository",{"_index":554,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["constructor(percenttypegreenscoreandpoirepository",{"_index":645,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["constructor(poirepository",{"_index":756,"title":{},"body":{"injectables/PoiService.html":{}}}],["constructor(private",{"_index":385,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["constructor(readonly",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":796,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(rolerolerepository",{"_index":826,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(tagrepository",{"_index":896,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(typegreenscorerepository",{"_index":991,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["constructor(typerepository",{"_index":1015,"title":{},"body":{"injectables/TypeService.html":{}}}],["constructor(userrepository",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["contains",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":802,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":808,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":809,"title":{},"body":{"guards/RoleGuard.html":{}}}],["contract",{"_index":296,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["controller",{"_index":9,"title":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('company",{"_index":384,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('green",{"_index":482,"title":{},"body":{"controllers/GreenScoreController.html":{}}}],["controller('percent",{"_index":623,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["controller('poi",{"_index":706,"title":{},"body":{"controllers/PoiController.html":{}}}],["controller('tags",{"_index":872,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller('type",{"_index":933,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{}}}],["controller('user",{"_index":1058,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":1116,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"classes/Company.html":{}}}],["d+|infinity)$/.test(value",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{}}}],["database",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["date",{"_index":291,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["date'})@isstring",{"_index":411,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["db",{"_index":289,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["declarations",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/role.decorator",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"classes/Role.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{}}}],["default",{"_index":292,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Poi.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":51,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":403,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["delete",{"_index":365,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{}}}],["delete(':id",{"_index":397,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{}}}],["deletecompany",{"_index":351,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletecompany(@param('id",{"_index":398,"title":{},"body":{"controllers/CompanyController.html":{}}}],["deletecompany(idcompany",{"_index":362,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletetag",{"_index":856,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetag(@param('id",{"_index":875,"title":{},"body":{"controllers/TagsController.html":{}}}],["deletetag(idtag",{"_index":863,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetype",{"_index":1014,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetype(idtype",{"_index":1019,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetypegreenscore",{"_index":953,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deletetypegreenscore(@param('id",{"_index":974,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["deletetypegreenscore(idtypegreenscore",{"_index":960,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deltetype",{"_index":919,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(@param('id",{"_index":939,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(idtype",{"_index":924,"title":{},"body":{"controllers/TypeController.html":{}}}],["demo",{"_index":208,"title":{},"body":{"injectables/AppService.html":{}}}],["dependencies",{"_index":116,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/RoleService.html":{},"classes/TagsDto.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["development",{"_index":1243,"title":{},"body":{"index.html":{}}}],["different",{"_index":1209,"title":{},"body":{"miscellaneous/functions.html":{}}}],["doc",{"_index":617,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["documentation",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["domain",{"_index":304,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["domainmail",{"_index":278,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["e2e",{"_index":1252,"title":{},"body":{"index.html":{}}}],["ecole",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["efficient",{"_index":1230,"title":{},"body":{"index.html":{}}}],["email",{"_index":1071,"title":{},"body":{"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["employees",{"_index":306,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["en",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":310,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["enddeal",{"_index":279,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["entities",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":274,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["enum",{"_index":427,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["enum/price.enum",{"_index":741,"title":{},"body":{"injectables/PoiDto.html":{},"modules/PoiModule.html":{}}}],["enum/type.enum",{"_index":441,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["enumerations",{"_index":1189,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["etc",{"_index":342,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["etc...)'})@isstring",{"_index":884,"title":{},"body":{"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["ex",{"_index":307,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["example.com",{"_index":308,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["example.com)'})@isoptional()@isstring",{"_index":414,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["exception",{"_index":464,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["executioncontext",{"_index":800,"title":{},"body":{"guards/RoleGuard.html":{}}}],["exist",{"_index":598,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["expect",{"_index":333,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["expect'})@isoptional()@isnumberstring",{"_index":423,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["expiresin",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":1153,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["extends",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["false})@joincolumn({name",{"_index":607,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filterint",{"_index":779,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterint(idtags",{"_index":787,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(type",{"_index":784,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["first",{"_index":1066,"title":{},"body":{"classes/UserDto.html":{}}}],["firstname",{"_index":1029,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["found",{"_index":466,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":1228,"title":{},"body":{"index.html":{}}}],["function",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1206,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/one/:id",{"_index":970,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["get(':id",{"_index":710,"title":{},"body":{"controllers/PoiController.html":{}}}],["get(':id')@usepipes(new",{"_index":700,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('one/:id",{"_index":390,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["get('profile",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["get('test",{"_index":1061,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useguards(roleguard)@roles('admin",{"_index":367,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getallcompany",{"_index":352,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["getallcompanytag",{"_index":517,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallcompanytag(poitofind",{"_index":527,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallpercenttypegreenscoreandpoi",{"_index":643,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getallpoiandtag",{"_index":518,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallpoiwithtype",{"_index":552,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["getalltag",{"_index":857,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getalltype",{"_index":989,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["getalltypegreenscore",{"_index":954,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["getcompanyandtags",{"_index":693,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(@param('id",{"_index":711,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(idpoi",{"_index":699,"title":{},"body":{"controllers/PoiController.html":{}}}],["getconnection",{"_index":705,"title":{},"body":{"controllers/PoiController.html":{}}}],["gethello",{"_index":211,"title":{},"body":{"injectables/AppService.html":{}}}],["getinfrole",{"_index":823,"title":{},"body":{"injectables/RoleService.html":{}}}],["getinfrole(idrole",{"_index":829,"title":{},"body":{"injectables/RoleService.html":{}}}],["getone",{"_index":453,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getone(idcompany",{"_index":462,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getonecompany",{"_index":353,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(@param('id",{"_index":392,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(id",{"_index":369,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getoneorfailbyrole",{"_index":824,"title":{},"body":{"injectables/RoleService.html":{}}}],["getoneorfailbyrole(roletype",{"_index":832,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonepercenttypegreenscoreandpoi",{"_index":644,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getonepercenttypegreenscoreandpoi(idpercent",{"_index":654,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getonetag",{"_index":858,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetag(@param('id",{"_index":878,"title":{},"body":{"controllers/TagsController.html":{}}}],["getonetag(idtag",{"_index":868,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetype",{"_index":920,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetype(@param('id",{"_index":936,"title":{},"body":{"controllers/TypeController.html":{}}}],["getonetype(idtype",{"_index":927,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetypegreenscore",{"_index":955,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["getonetypegreenscore(@param('id",{"_index":971,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["getonetypegreenscore(idtypegreenscore",{"_index":964,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["getonlyrole",{"_index":825,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonlyrole(roles",{"_index":835,"title":{},"body":{"injectables/RoleService.html":{}}}],["getpoi",{"_index":755,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoi(idpoi",{"_index":762,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiwithtag",{"_index":553,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["getpoiwithtag(poitofind",{"_index":558,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["getprofile",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["getrawmany",{"_index":845,"title":{},"body":{"injectables/RoleService.html":{}}}],["getschemapath",{"_index":742,"title":{},"body":{"injectables/PoiDto.html":{}}}],["gettags",{"_index":895,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettags(idstags",{"_index":903,"title":{},"body":{"injectables/TagsService.html":{}}}],["getting",{"_index":1224,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":990,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["gettype(idtype",{"_index":998,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["gettypes",{"_index":921,"title":{},"body":{"controllers/TypeController.html":{}}}],["getuser",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail(email",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["grand",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["green",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["greenscore",{"_index":669,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["greenscorecontroller",{"_index":479,"title":{"controllers/GreenScoreController.html":{}},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"coverage.html":{}}}],["greenscoremodule",{"_index":127,"title":{"modules/GreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["greenscoreservice",{"_index":485,"title":{"injectables/GreenScoreService.html":{}},"body":{"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1259,"title":{},"body":{"index.html":{}}}],["guard",{"_index":792,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/role.guard",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["guards",{"_index":793,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guess",{"_index":420,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["hashpassword",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":811,"title":{},"body":{"guards/RoleGuard.html":{}}}],["header",{"_index":565,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["headers",{"_index":1220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["heavily",{"_index":1235,"title":{},"body":{"index.html":{}}}],["hello",{"_index":213,"title":{},"body":{"injectables/AppService.html":{}}}],["helloo",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["helmet",{"_index":1174,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["helps",{"_index":1214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":317,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"index.html":{}}}],["high",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/techniques/authentication",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":1274,"title":{},"body":{"index.html":{}}}],["id",{"_index":280,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{}}}],["idcompany",{"_index":366,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["identifier",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["idpercent",{"_index":656,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["idpoi",{"_index":608,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["idrole",{"_index":831,"title":{},"body":{"injectables/RoleService.html":{}}}],["idstags",{"_index":905,"title":{},"body":{"injectables/TagsService.html":{}}}],["idsup",{"_index":844,"title":{},"body":{"injectables/RoleService.html":{}}}],["idtag",{"_index":865,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["idtype",{"_index":926,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["idtypegreenscore",{"_index":611,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{}}}],["ignoreexpiration",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imateapotexception",{"_index":599,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["incubateur",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["information",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["informations",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":205,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":206,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/GreenScoreService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":468,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["injectrepository(company",{"_index":469,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(jointagpoientity",{"_index":534,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["injectrepository(jointypepoi",{"_index":559,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["injectrepository(percenttypegreenscoreandpoi",{"_index":658,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["injectrepository(poi",{"_index":765,"title":{},"body":{"injectables/PoiService.html":{}}}],["injectrepository(role",{"_index":837,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(tag",{"_index":906,"title":{},"body":{"injectables/TagsService.html":{}}}],["injectrepository(type",{"_index":1023,"title":{},"body":{"injectables/TypeService.html":{}}}],["injectrepository(typegreenscore",{"_index":1000,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["injectrepository(user",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":1236,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1240,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1242,"title":{},"body":{"index.html":{}}}],["integer",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interest",{"_index":691,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["interface",{"_index":35,"title":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/company.interface",{"_index":431,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["interface/type.interface",{"_index":945,"title":{},"body":{"classes/TypeDto.html":{}}}],["interfaces",{"_index":48,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":37,"title":{},"body":{"classes/AccessToken.html":{}}}],["interfaces/percent",{"_index":632,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["interfaces/poi.interface",{"_index":738,"title":{},"body":{"injectables/PoiDto.html":{}}}],["interfaces/tags.interface",{"_index":886,"title":{},"body":{"classes/TagsDto.html":{}}}],["interfaces/type",{"_index":980,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["interfaces/user.interface",{"_index":1078,"title":{},"body":{"classes/UserDto.html":{}}}],["isarray",{"_index":739,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isdate",{"_index":432,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isdatestring",{"_index":433,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isemail",{"_index":1079,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum",{"_index":434,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["isenum(priceenum",{"_index":745,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isenum(roleenum",{"_index":1082,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(typeenum",{"_index":445,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isnumber",{"_index":435,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{}}}],["isnumberstring",{"_index":436,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isoptional",{"_index":437,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isstring",{"_index":438,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["join",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"index.html":{}}}],["joincolumn",{"_index":503,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["jointagpoi",{"_index":535,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoientity",{"_index":171,"title":{"classes/JoinTagPoiEntity.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["jointagpoimodule",{"_index":128,"title":{"modules/JoinTagPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PoiModule.html":{},"modules.html":{},"overview.html":{}}}],["jointagpoirepository",{"_index":522,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoiservice",{"_index":511,"title":{"injectables/JoinTagPoiService.html":{}},"body":{"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"coverage.html":{},"overview.html":{}}}],["jointypepoi",{"_index":173,"title":{"classes/JoinTypePoi.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"coverage.html":{}}}],["jointypepoimodule",{"_index":129,"title":{"modules/JoinTypePoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinTypePoiModule.html":{},"modules.html":{},"overview.html":{}}}],["jointypepoirepository",{"_index":555,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["jointypepoiservice",{"_index":549,"title":{"injectables/JoinTypePoiService.html":{}},"body":{"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"coverage.html":{},"overview.html":{}}}],["jwt",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":219,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1271,"title":{},"body":{"index.html":{}}}],["key",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["know",{"_index":54,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["last",{"_index":1069,"title":{},"body":{"classes/UserDto.html":{}}}],["lastname",{"_index":1030,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["lat",{"_index":281,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["latitude",{"_index":316,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{}}}],["legend",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":344,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["license",{"_index":1277,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1256,"title":{},"body":{"index.html":{}}}],["limit",{"_index":1172,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["line:no",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["line:variable",{"_index":42,"title":{},"body":{"classes/AccessToken.html":{}}}],["local",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":220,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":670,"title":{},"body":{"classes/Poi.html":{},"interfaces/PoiInterface.html":{}}}],["long",{"_index":282,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["longitude",{"_index":323,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{}}}],["longtext",{"_index":675,"title":{},"body":{"classes/Poi.html":{}}}],["low",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["madu",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["mail",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["main",{"_index":1208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["manage",{"_index":348,"title":{},"body":{"controllers/CompanyController.html":{}}}],["many",{"_index":331,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["manytoone",{"_index":504,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(type",{"_index":505,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":493,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":775,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"dependencies.html":{}}}],["method",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":1211,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":1188,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1255,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1246,"title":{},"body":{"index.html":{}}}],["module",{"_index":113,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":115,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["mysql",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":1272,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["nan",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nbworker",{"_index":283,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["nest",{"_index":210,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nestframework",{"_index":1276,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":805,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":444,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["network",{"_index":406,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["new",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newvalue",{"_index":781,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.tags",{"_index":785,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.type",{"_index":782,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["next",{"_index":41,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["node.js",{"_index":1227,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":467,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`company",{"_index":476,"title":{},"body":{"injectables/CompanyService.html":{}}}],["notfoundexception(`percenttypegreenscoreandpoi",{"_index":667,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["notfoundexception(`poi",{"_index":772,"title":{},"body":{"injectables/PoiService.html":{}}}],["notfoundexception(`role",{"_index":839,"title":{},"body":{"injectables/RoleService.html":{}}}],["notfoundexception(`tag",{"_index":911,"title":{},"body":{"injectables/TagsService.html":{}}}],["notfoundexception(`type",{"_index":1004,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["notfoundexception(`user",{"_index":1114,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":465,"title":{},"body":{"injectables/CompanyService.html":{}}}],["npm",{"_index":1241,"title":{},"body":{"index.html":{}}}],["null",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/Poi.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":299,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{}}}],["number",{"_index":311,"title":{},"body":{"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["number(value",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyDto.html":{}}}],["observable",{"_index":804,"title":{},"body":{"guards/RoleGuard.html":{}}}],["ondelete",{"_index":494,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/User.html":{}}}],["one",{"_index":372,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["onupdate",{"_index":496,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/User.html":{}}}],["open",{"_index":1257,"title":{},"body":{"index.html":{}}}],["option",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["orwhere('id",{"_index":843,"title":{},"body":{"injectables/RoleService.html":{}}}],["oui",{"_index":625,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["out",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":405,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["overview",{"_index":1281,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1149,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parseintpipe",{"_index":378,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{}}}],["parser",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["payload",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.userid",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["percent",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoi",{"_index":184,"title":{"classes/PercentTypeGreenScoreAndPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoicontroller",{"_index":614,"title":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoidto",{"_index":620,"title":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoientity",{"_index":640,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiinterface",{"_index":627,"title":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{}},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoimodule",{"_index":130,"title":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoirepository",{"_index":649,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservice",{"_index":622,"title":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoiservicedto",{"_index":652,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservicedto.percent",{"_index":663,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["pipe/poi.transformation.pipe",{"_index":704,"title":{},"body":{"controllers/PoiController.html":{}}}],["pipetransform",{"_index":778,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["please",{"_index":1266,"title":{},"body":{"index.html":{}}}],["pme",{"_index":943,"title":{},"body":{"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["poi",{"_index":164,"title":{"classes/Poi.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["poi'})@isnumberstring",{"_index":727,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring",{"_index":716,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring()@isoptional",{"_index":720,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi.controller",{"_index":639,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["poi.controller.ts",{"_index":615,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"coverage.html":{}}}],["poi.controller.ts:28",{"_index":621,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["poi.id",{"_index":507,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi.interface",{"_index":633,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi.interface.ts",{"_index":635,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{}}}],["poi.module.ts",{"_index":512,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["poi.service",{"_index":513,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poi.service.ts",{"_index":515,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["poi.service.ts:10",{"_index":648,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:15",{"_index":525,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poi.service.ts:18",{"_index":651,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:23",{"_index":530,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poi.service.ts:29",{"_index":532,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poi.service.ts:30",{"_index":653,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:34",{"_index":655,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:35",{"_index":528,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:9",{"_index":521,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poi/interfaces/percent",{"_index":634,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi/join",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["poi/jointagpoientity",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"controllers/PoiController.html":{}}}],["poi/jointagpoientity.ts",{"_index":491,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"coverage.html":{}}}],["poi/jointagpoientity.ts:18",{"_index":502,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:27",{"_index":499,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:8",{"_index":492,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointypepoi",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["poi/jointypepoi.ts",{"_index":541,"title":{},"body":{"classes/JoinTypePoi.html":{},"coverage.html":{}}}],["poi/jointypepoi.ts:17",{"_index":543,"title":{},"body":{"classes/JoinTypePoi.html":{}}}],["poi/jointypepoi.ts:24",{"_index":544,"title":{},"body":{"classes/JoinTypePoi.html":{}}}],["poi/jointypepoi.ts:8",{"_index":542,"title":{},"body":{"classes/JoinTypePoi.html":{}}}],["poi/percent",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts",{"_index":626,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:12",{"_index":630,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:16",{"_index":631,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:8",{"_index":629,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoientity",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts",{"_index":602,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:10",{"_index":604,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:14",{"_index":606,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:23",{"_index":612,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:31",{"_index":609,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/poi.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["poi/poi.service",{"_index":657,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi/poientity",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poiadded",{"_index":770,"title":{},"body":{"injectables/PoiService.html":{}}}],["poicontroller",{"_index":688,"title":{"controllers/PoiController.html":{}},"body":{"controllers/PoiController.html":{},"modules/PoiModule.html":{},"coverage.html":{}}}],["poidto",{"_index":695,"title":{"injectables/PoiDto.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poientity",{"_index":752,"title":{},"body":{"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poifind",{"_index":661,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiid",{"_index":498,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{}}}],["poiinterface",{"_index":737,"title":{"interfaces/PoiInterface.html":{}},"body":{"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["poimodule",{"_index":131,"title":{"modules/PoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules.html":{},"overview.html":{}}}],["point",{"_index":690,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["poirepository",{"_index":760,"title":{},"body":{"injectables/PoiService.html":{}}}],["pois",{"_index":321,"title":{},"body":{"classes/Company.html":{}}}],["poiservice",{"_index":646,"title":{"injectables/PoiService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"coverage.html":{},"overview.html":{}}}],["poitoadd",{"_index":526,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poitofind",{"_index":529,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{}}}],["poitransformationpipe",{"_index":703,"title":{"injectables/PoiTransformationPipe.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["port",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["post('auth/login",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["post()@usepipes(new",{"_index":696,"title":{},"body":{"controllers/PoiController.html":{},"controllers/TagsController.html":{}}}],["postal",{"_index":336,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["postalcode",{"_index":284,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["prefix",{"_index":347,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["preset",{"_index":1075,"title":{},"body":{"classes/UserDto.html":{}}}],["price",{"_index":671,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["priceenum",{"_index":740,"title":{},"body":{"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"miscellaneous/enumerations.html":{}}}],["priceenum})@isenum(priceenum",{"_index":729,"title":{},"body":{"injectables/PoiDto.html":{}}}],["primarygeneratedcolumn",{"_index":312,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["private",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["process.env.db_host",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_token",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":1248,"title":{},"body":{"index.html":{}}}],["profile",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1226,"title":{},"body":{"index.html":{}}}],["project",{"_index":1258,"title":{},"body":{"index.html":{}}}],["promise",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["promise.all(tagaddespromise",{"_index":769,"title":{},"body":{"injectables/PoiService.html":{}}}],["properly",{"_index":1213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["property",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["put",{"_index":379,"title":{},"body":{"controllers/CompanyController.html":{}}}],["put(':id",{"_index":395,"title":{},"body":{"controllers/CompanyController.html":{}}}],["range",{"_index":318,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{}}}],["rate",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1267,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["recover",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":797,"title":{},"body":{"guards/RoleGuard.html":{}}}],["relations",{"_index":538,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/UserService.html":{}}}],["repeated",{"_index":1221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":455,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["request",{"_index":56,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"guards/RoleGuard.html":{}}}],["request.user",{"_index":810,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requests",{"_index":1222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["right",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":153,"title":{"classes/Role.html":{}},"body":{"modules/AppModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/TypeGreenScoreController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.id",{"_index":1040,"title":{},"body":{"classes/User.html":{}}}],["role.role",{"_index":847,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.service",{"_index":819,"title":{},"body":{"modules/RoleModule.html":{}}}],["role/enum/role.enum",{"_index":1081,"title":{},"body":{"classes/UserDto.html":{}}}],["role/role.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["role/roleentity",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"controllers/TypeGreenScoreController.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["roleentity",{"_index":820,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["roleenum",{"_index":1080,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum})@isenum(roleenum",{"_index":1076,"title":{},"body":{"classes/UserDto.html":{}}}],["roleguard",{"_index":94,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["roleid",{"_index":1038,"title":{},"body":{"classes/User.html":{}}}],["rolemodule",{"_index":132,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerolerepository",{"_index":828,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["roles.includes(role",{"_index":813,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roles.map((role",{"_index":846,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleservice",{"_index":567,"title":{"injectables/RoleService.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":834,"title":{},"body":{"injectables/RoleService.html":{}}}],["root",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":58,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["router",{"_index":1210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routes",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":1244,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":806,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["saltrounds",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":1231,"title":{},"body":{"index.html":{}}}],["school",{"_index":341,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["score",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/TypeGreenScoreController.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score.controller",{"_index":488,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.controller.ts",{"_index":481,"title":{},"body":{"controllers/GreenScoreController.html":{},"controllers/TypeGreenScoreController.html":{},"coverage.html":{}}}],["score.controller.ts:28",{"_index":958,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["score.controller.ts:39",{"_index":966,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["score.controller.ts:49",{"_index":963,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["score.controller.ts:60",{"_index":962,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["score.interface",{"_index":981,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score.interface.ts",{"_index":983,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score.module",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["score.module.ts",{"_index":486,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service",{"_index":487,"title":{},"body":{"modules/GreenScoreModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service.ts",{"_index":489,"title":{},"body":{"injectables/GreenScoreService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score.service.ts:13",{"_index":995,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:17",{"_index":997,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:21",{"_index":999,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:28",{"_index":996,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:7",{"_index":992,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score/green",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["score/interfaces/type",{"_index":982,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score/type",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts",{"_index":976,"title":{},"body":{"classes/TypeGreenScoreDto.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts:8",{"_index":979,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score/typegreenscoreentity",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["score/typegreenscoreentity.ts",{"_index":947,"title":{},"body":{"classes/TypeGreenScore.html":{},"coverage.html":{}}}],["score/typegreenscoreentity.ts:14",{"_index":950,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["score/typegreenscoreentity.ts:8",{"_index":948,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["secret",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select('role",{"_index":841,"title":{},"body":{"injectables/RoleService.html":{}}}],["send",{"_index":55,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["sent",{"_index":404,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["serializetagsdata",{"_index":519,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagsdata(tags",{"_index":531,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["server",{"_index":1232,"title":{},"body":{"index.html":{}}}],["service",{"_index":209,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["set",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["setmetadata('roles",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["short",{"_index":719,"title":{},"body":{"injectables/PoiDto.html":{}}}],["show",{"_index":320,"title":{},"body":{"classes/Company.html":{}}}],["side",{"_index":1233,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1261,"title":{},"body":{"index.html":{}}}],["src/.../function.utils.ts",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../price.enum.ts",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.enum.ts",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:22",{"_index":82,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:35",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":207,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":212,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/access",{"_index":49,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":564,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:32",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":592,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:10",{"_index":595,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:24",{"_index":597,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/company/company.controller.ts",{"_index":346,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:26",{"_index":359,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:39",{"_index":371,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:50",{"_index":368,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:63",{"_index":375,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:76",{"_index":364,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":449,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":452,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:10",{"_index":456,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:26",{"_index":458,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:39",{"_index":463,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:50",{"_index":461,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:59",{"_index":460,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/companydto.ts",{"_index":402,"title":{},"body":{"injectables/CompanyDto.html":{},"coverage.html":{}}}],["src/company/companydto.ts:102",{"_index":424,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:18",{"_index":418,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:27",{"_index":409,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:36",{"_index":413,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:46",{"_index":415,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:55",{"_index":426,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:65",{"_index":429,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:74",{"_index":412,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:83",{"_index":421,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:92",{"_index":416,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companyentity.ts",{"_index":273,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/company/companyentity.ts:108",{"_index":309,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:12",{"_index":313,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:20",{"_index":287,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:28",{"_index":325,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:34",{"_index":335,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:44",{"_index":301,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:54",{"_index":303,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:62",{"_index":338,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:72",{"_index":322,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:82",{"_index":315,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:90",{"_index":328,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:99",{"_index":295,"title":{},"body":{"classes/Company.html":{}}}],["src/company/enum/type.enum.ts",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/company/interface/company.interface.ts",{"_index":446,"title":{},"body":{"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["src/decorator/role.decorator.ts",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/green",{"_index":480,"title":{},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts",{"_index":794,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts:6",{"_index":798,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role.guard.ts:9",{"_index":801,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/join",{"_index":490,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/percent",{"_index":601,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["src/poi/enum/price.enum.ts",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/interfaces/poi.interface.ts",{"_index":746,"title":{},"body":{"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts",{"_index":773,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts:8",{"_index":777,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["src/poi/poi.controller.ts",{"_index":689,"title":{},"body":{"controllers/PoiController.html":{},"coverage.html":{}}}],["src/poi/poi.controller.ts:33",{"_index":698,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:45",{"_index":702,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.module.ts",{"_index":751,"title":{},"body":{"modules/PoiModule.html":{}}}],["src/poi/poi.service.ts",{"_index":754,"title":{},"body":{"injectables/PoiService.html":{},"coverage.html":{}}}],["src/poi/poi.service.ts:18",{"_index":761,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:31",{"_index":763,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:9",{"_index":759,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poidto.ts",{"_index":715,"title":{},"body":{"injectables/PoiDto.html":{},"coverage.html":{}}}],["src/poi/poidto.ts:16",{"_index":717,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:22",{"_index":718,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:29",{"_index":721,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:34",{"_index":723,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:41",{"_index":724,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:48",{"_index":725,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:54",{"_index":726,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:60",{"_index":728,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:68",{"_index":734,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:76",{"_index":736,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:83",{"_index":730,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poientity.ts",{"_index":668,"title":{},"body":{"classes/Poi.html":{},"coverage.html":{}}}],["src/poi/poientity.ts:11",{"_index":684,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:16",{"_index":687,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:21",{"_index":676,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:26",{"_index":673,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:31",{"_index":674,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:36",{"_index":686,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:43",{"_index":682,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:50",{"_index":680,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:56",{"_index":678,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:6",{"_index":679,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:62",{"_index":681,"title":{},"body":{"classes/Poi.html":{}}}],["src/role/enum/role.enum.ts",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/role/role.module.ts",{"_index":818,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":822,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:10",{"_index":827,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:23",{"_index":833,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:36",{"_index":830,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:44",{"_index":836,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/roleentity.ts",{"_index":788,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/role/roleentity.ts:11",{"_index":791,"title":{},"body":{"classes/Role.html":{}}}],["src/role/roleentity.ts:6",{"_index":789,"title":{},"body":{"classes/Role.html":{}}}],["src/tags/interfaces/tags.interface.ts",{"_index":887,"title":{},"body":{"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts",{"_index":848,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts:14",{"_index":852,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:8",{"_index":849,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tags.controller.ts",{"_index":854,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:16",{"_index":861,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:24",{"_index":864,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:33",{"_index":869,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:40",{"_index":867,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":891,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":894,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:13",{"_index":899,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:17",{"_index":900,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:21",{"_index":901,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:25",{"_index":902,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:32",{"_index":904,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:7",{"_index":897,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tagsdto.ts",{"_index":880,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/tags/tagsdto.ts:10",{"_index":885,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/type",{"_index":946,"title":{},"body":{"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["src/type/interface/type.interface.ts",{"_index":1007,"title":{},"body":{"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["src/type/type.controller.ts",{"_index":917,"title":{},"body":{"controllers/TypeController.html":{},"coverage.html":{}}}],["src/type/type.controller.ts:29",{"_index":923,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:41",{"_index":928,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:51",{"_index":929,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:63",{"_index":925,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.module.ts",{"_index":1010,"title":{},"body":{"modules/TypeModule.html":{}}}],["src/type/type.service.ts",{"_index":1013,"title":{},"body":{"injectables/TypeService.html":{},"coverage.html":{}}}],["src/type/type.service.ts:13",{"_index":1018,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:17",{"_index":1022,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:24",{"_index":1021,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:28",{"_index":1020,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:7",{"_index":1016,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/typedto.ts",{"_index":941,"title":{},"body":{"classes/TypeDto.html":{},"coverage.html":{}}}],["src/type/typedto.ts:11",{"_index":944,"title":{},"body":{"classes/TypeDto.html":{}}}],["src/type/typeentity.ts",{"_index":913,"title":{},"body":{"classes/Type.html":{},"coverage.html":{}}}],["src/type/typeentity.ts:15",{"_index":915,"title":{},"body":{"classes/Type.html":{}}}],["src/type/typeentity.ts:9",{"_index":914,"title":{},"body":{"classes/Type.html":{}}}],["src/user",{"_index":1044,"title":{},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":1083,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":1048,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:22",{"_index":1053,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:32",{"_index":1055,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":1088,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:29",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/userdto.ts",{"_index":1064,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/userdto.ts:11",{"_index":1068,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:17",{"_index":1070,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:23",{"_index":1073,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:29",{"_index":1074,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:36",{"_index":1077,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userentity.ts",{"_index":1028,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/userentity.ts:13",{"_index":1035,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:18",{"_index":1031,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:23",{"_index":1033,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:28",{"_index":1037,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:37",{"_index":1039,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:7",{"_index":1032,"title":{},"body":{"classes/User.html":{}}}],["src/utils/function.utils.ts",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":410,"title":{},"body":{"injectables/CompanyDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["start:dev",{"_index":1247,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1249,"title":{},"body":{"index.html":{}}}],["started",{"_index":1225,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1239,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":1268,"title":{},"body":{"index.html":{}}}],["stock",{"_index":288,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["strategy",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/LocalStrategy.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":401,"title":{},"body":{"controllers/CompanyController.html":{}}}],["super",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1262,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":162,"title":{"classes/Tag.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinTypePoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tag.id",{"_index":506,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["tag.tag",{"_index":540,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["tagdto",{"_index":862,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tagentity",{"_index":871,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{}}}],["tagid",{"_index":501,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["tagrepository",{"_index":898,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags",{"_index":533,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{}}}],["tags'})@isoptional()@isarray",{"_index":733,"title":{},"body":{"injectables/PoiDto.html":{}}}],["tags.controller",{"_index":892,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.length",{"_index":767,"title":{},"body":{"injectables/PoiService.html":{}}}],["tags.map((tag",{"_index":539,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["tags.service",{"_index":870,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tagentity",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["tags/tags.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{}}}],["tags/tags.service",{"_index":764,"title":{},"body":{"injectables/PoiService.html":{}}}],["tagscontroller",{"_index":853,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsdto",{"_index":860,"title":{"classes/TagsDto.html":{}},"body":{"controllers/TagsController.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsinterface",{"_index":881,"title":{"interfaces/TagsInterface.html":{}},"body":{"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":133,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":758,"title":{"injectables/TagsService.html":{}},"body":{"injectables/PoiService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagtoadd",{"_index":524,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["test",{"_index":1056,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["test:covsupport",{"_index":1254,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1253,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1251,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1260,"title":{},"body":{"index.html":{}}}],["this.access_token",{"_index":44,"title":{},"body":{"classes/AccessToken.html":{}}}],["this.authservice.login(req.user",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(mail",{"_index":600,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companyrepository.delete(idcompany",{"_index":478,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.find",{"_index":477,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneorfail(idcompany",{"_index":473,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.save(companydata",{"_index":472,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice.addcompany(companydto",{"_index":389,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.deletecompany(idcompany",{"_index":400,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getallcompany",{"_index":394,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(id",{"_index":393,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(idcompany",{"_index":399,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.gettype(idtypegreenscore",{"_index":1005,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.hashpassword(user.password",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jointagpoirepository.find",{"_index":537,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.save(jointagpoi",{"_index":536,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poiadded",{"_index":768,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.getallcompanytag(poi",{"_index":713,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.jointagpoiservice.serializetagsdata(tags",{"_index":714,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.jointypepoirepository.find",{"_index":562,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["this.jointypepoirepository.findoneorfail",{"_index":563,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["this.jointypepoirepository.save(typepoi",{"_index":561,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.percenttypegreenscoreandpoirepository.find",{"_index":665,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.findoneorfail(idpercent",{"_index":666,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegreenscoreandpoi",{"_index":664,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poirepository.findoneorfail(idpoi",{"_index":771,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poiservice.addpoi(poidto",{"_index":709,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getpoi(idpoi",{"_index":712,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getpoi(percenttypegreenscoreandpoiservicedto.idpoi",{"_index":662,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.reflector.get('roles",{"_index":807,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.rolerolerepository.createquerybuilder",{"_index":840,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerolerepository.findoneorfail",{"_index":838,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.getinfrole(result.role.id",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.roleservice.getoneorfailbyrole(user.role",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getonlyrole(roles",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.tagrepository.delete(idtag",{"_index":908,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.find",{"_index":909,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findbyids(idstags",{"_index":912,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findoneorfail(idtag",{"_index":910,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.save(tagdto",{"_index":907,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagsservice.addtag(tagdto",{"_index":874,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.deletetag(idtag",{"_index":877,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getalltag",{"_index":879,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(idtag",{"_index":876,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.gettags(poidto.tags",{"_index":766,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscorerepository.delete(typegreenscore",{"_index":1006,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.find",{"_index":1002,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findoneorfail(idtype",{"_index":1003,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.save(typegreenscoredto",{"_index":1001,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscoreservice.addgreenscore(typegreenscoreandpoidto",{"_index":969,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["this.typegreenscoreservice.deletetypegreenscore(idtypegreenscore",{"_index":975,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["this.typegreenscoreservice.getalltype",{"_index":973,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["this.typegreenscoreservice.gettype(idtypegreenscore",{"_index":972,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["this.typegreenscoreservice.gettype(percenttypegreenscoreandpoiservicedto.idtypegreenscore",{"_index":660,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.typerepository.delete(idtype",{"_index":1027,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.find",{"_index":1026,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findoneorfail(idtype",{"_index":1025,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.save(typedto",{"_index":1024,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typeservice.addtype(typedto",{"_index":935,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.deletetype(idtype",{"_index":940,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.getalltype",{"_index":938,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.getonetype(idtype",{"_index":937,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.userrepository.findoneorfail",{"_index":1113,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail(userid",{"_index":1115,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduser(userdto",{"_index":1060,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuser(payload.userid",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.getuserbymail(mail",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":475,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["todo",{"_index":616,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["token",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["token.interfaces",{"_index":38,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.interfaces.ts",{"_index":50,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.ts:11",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{}}}],["toto",{"_index":1050,"title":{},"body":{"controllers/UserController.html":{}}}],["totot",{"_index":1063,"title":{},"body":{"controllers/UserController.html":{}}}],["touch",{"_index":1269,"title":{},"body":{"index.html":{}}}],["transform",{"_index":391,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["transform(value",{"_index":774,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["transformer",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["true})@joincolumn({name",{"_index":500,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["try",{"_index":593,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["tslint:disable",{"_index":40,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{}}}],["twitter",{"_index":1275,"title":{},"body":{"index.html":{}}}],["type",{"_index":32,"title":{"classes/Type.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"modules/JoinTypePoiModule.html":{},"injectables/JoinTypePoiService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["type'})@isoptional()@isarray",{"_index":735,"title":{},"body":{"injectables/PoiDto.html":{}}}],["type.controller",{"_index":1011,"title":{},"body":{"modules/TypeModule.html":{}}}],["type.id",{"_index":545,"title":{},"body":{"classes/JoinTypePoi.html":{}}}],["type.service",{"_index":931,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{}}}],["type/type.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["type/typedto",{"_index":744,"title":{},"body":{"injectables/PoiDto.html":{}}}],["type/typeentity",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"injectables/PoiDto.html":{}}}],["typecontroller",{"_index":916,"title":{"controllers/TypeController.html":{}},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"coverage.html":{}}}],["typedto",{"_index":743,"title":{"classes/TypeDto.html":{}},"body":{"injectables/PoiDto.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"injectables/TypeService.html":{},"coverage.html":{}}}],["typeentity",{"_index":932,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{}}}],["typeenum",{"_index":440,"title":{},"body":{"injectables/CompanyDto.html":{},"miscellaneous/enumerations.html":{}}}],["typeenum})@isenum(typeenum",{"_index":428,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["typegreenscore",{"_index":182,"title":{"classes/TypeGreenScore.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscore.id",{"_index":613,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["typegreenscoreandpoidto",{"_index":959,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["typegreenscorecontroller",{"_index":951,"title":{"controllers/TypeGreenScoreController.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"coverage.html":{}}}],["typegreenscoredto",{"_index":957,"title":{"classes/TypeGreenScoreDto.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscoreentity",{"_index":967,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{}}}],["typegreenscorefind",{"_index":659,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["typegreenscoreinterface",{"_index":977,"title":{"interfaces/TypeGreenScoreInterface.html":{}},"body":{"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["typegreenscoremodule",{"_index":134,"title":{"modules/TypeGreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["typegreenscorerepository",{"_index":993,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["typegreenscoreservice",{"_index":647,"title":{"injectables/TypeGreenScoreService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/TypeGreenScoreController.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["typeinterface",{"_index":942,"title":{"interfaces/TypeInterface.html":{}},"body":{"classes/TypeDto.html":{},"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["typemodule",{"_index":135,"title":{"modules/TypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TypeModule.html":{},"modules.html":{},"overview.html":{}}}],["typeorm",{"_index":343,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinTypePoi.html":{},"injectables/JoinTypePoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([company",{"_index":451,"title":{},"body":{"modules/CompanyModule.html":{}}}],["typeormmodule.forfeature([jointagpoientity",{"_index":514,"title":{},"body":{"modules/JoinTagPoiModule.html":{}}}],["typeormmodule.forfeature([jointypepoi",{"_index":550,"title":{},"body":{"modules/JoinTypePoiModule.html":{}}}],["typeormmodule.forfeature([percenttypegreenscoreandpoi",{"_index":641,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["typeormmodule.forfeature([poi",{"_index":753,"title":{},"body":{"modules/PoiModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":821,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":893,"title":{},"body":{"modules/TagsModule.html":{}}}],["typeormmodule.forfeature([type",{"_index":1012,"title":{},"body":{"modules/TypeModule.html":{}}}],["typeormmodule.forfeature([typegreenscore",{"_index":987,"title":{},"body":{"modules/TypeGreenScoreModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1091,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["typepoi",{"_index":560,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["typerepository",{"_index":1017,"title":{},"body":{"injectables/TypeService.html":{}}}],["types/bcrypt",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["types/compression",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1238,"title":{},"body":{"index.html":{}}}],["typeservice",{"_index":930,"title":{"injectables/TypeService.html":{}},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"coverage.html":{},"overview.html":{}}}],["typetoadd",{"_index":557,"title":{},"body":{"injectables/JoinTypePoiService.html":{}}}],["ui",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":300,"title":{},"body":{"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinTypePoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"classes/User.html":{}}}],["unique",{"_index":314,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{}}}],["unit",{"_index":1250,"title":{},"body":{"index.html":{}}}],["up",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":376,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["updatecompany",{"_index":354,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(@param('id",{"_index":396,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(id",{"_index":373,"title":{},"body":{"controllers/CompanyController.html":{}}}],["use",{"_index":459,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/functions.html":{}}}],["useguards",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(authguard('local",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(roleguard",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["useguards(roleguard)@roles('admin')@delete(':id",{"_index":961,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":363,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@get",{"_index":866,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{}}}],["useguards(roleguard)@roles('admin')@get('/one/:id",{"_index":965,"title":{},"body":{"controllers/TypeGreenScoreController.html":{}}}],["useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":370,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@get('test",{"_index":1054,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":357,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["useguards(roleguard)@roles('admin')@put(':id')@usepipes(new",{"_index":374,"title":{},"body":{"controllers/CompanyController.html":{}}}],["useguards(undefined)@post('auth/login",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(undefined)@useguards(roleguard)@roles('admin')@get('profile",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["useless",{"_index":419,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["usepipes",{"_index":380,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":386,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["usepipes(poitransformationpipe",{"_index":707,"title":{},"body":{"controllers/PoiController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'})@isemail",{"_index":1072,"title":{},"body":{"classes/UserDto.html":{}}}],["user'})@isstring",{"_index":1067,"title":{},"body":{"classes/UserDto.html":{}}}],["user.controller",{"_index":1089,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.mail",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":814,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.roles.some((role",{"_index":812,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.service",{"_index":1057,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["user/userentity",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["userappmodule",{"_index":136,"title":{"modules/UserAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"modules.html":{},"overview.html":{}}}],["userappservice",{"_index":1043,"title":{"injectables/UserAppService.html":{}},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{},"overview.html":{}}}],["usercontroller",{"_index":1047,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":1052,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":1090,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["userinterface",{"_index":1065,"title":{"interfaces/UserInterface.html":{}},"body":{"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["usermodule",{"_index":137,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["userrepository",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":332,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["userservice",{"_index":245,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/function.utils",{"_index":780,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["validate",{"_index":566,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(mail",{"_index":596,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(mail",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":358,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/UserController.html":{}}}],["validationpipe())@useguards(roleguard)@roles('admin",{"_index":701,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@usepipes(poitransformationpipe)@useguards(roleguard)@roles('admin",{"_index":697,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe({transform",{"_index":387,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["validator",{"_index":439,"title":{},"body":{"injectables/CompanyDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["validity",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/CompanyService.html":{},"injectables/PoiTransformationPipe.html":{},"miscellaneous/variables.html":{}}}],["value.tags.map((idtags",{"_index":786,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["value.type.map((type",{"_index":783,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["variable",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1287,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vegan",{"_index":883,"title":{},"body":{"classes/TagsDto.html":{}}}],["watch",{"_index":1245,"title":{},"body":{"index.html":{}}}],["website",{"_index":1273,"title":{},"body":{"index.html":{}}}],["where(`id",{"_index":842,"title":{},"body":{"injectables/RoleService.html":{}}}],["without",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["work",{"_index":330,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/functions.html":{}}}],["worker",{"_index":329,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["working",{"_index":340,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":214,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":1265,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinTypePoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token.ts\n        \n\n            \n                Description\n            \n            \n                This controller allows to create a new jwt token\n\n            \n\n\n            \n                Implements\n            \n            \n                            AccessTokenInterfaces\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                            Set the access token to the access_token properties\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                value will be set to access_token property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                        Cf interface\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenInterfaces } from './interfaces/access-token.interfaces';\n\n/**\n * This controller allows to create a new jwt token\n */\nexport class AccessToken implements AccessTokenInterfaces {\n  /**\n   * Cf interface\n   */\n    // tslint:disable-next-line:variable-name\n  access_token: string;\n\n  /**\n   * Set the access token to the access_token properties\n   * @param accessToken {string} value will be set to access_token property\n   */\n  constructor(accessToken) {\n    this.access_token = accessToken;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenInterfaces.html":{"url":"interfaces/AccessTokenInterfaces.html","title":"interface - AccessTokenInterfaces","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccessTokenInterfaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                this interface define the value attempt in a jwt token\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    this data allows to know who send the request and authorize or not the access to some route\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenInterfaces {\n   /**\n    * this data allows to know who send the request and authorize or not the access to some route\n    */\n   access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This controller contains the routes to connect and retrieve your profile\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@UseGuards(RoleGuard)@Roles('admin')@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:35\n                \n            \n\n\n            \n                \n                    This method allows get account information from jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:22\n                \n            \n\n\n            \n                \n                    the call of this method allows to recover a jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {Controller, Post, UseGuards, Request, Get} from '@nestjs/common';\nimport {AuthService} from './auth/auth.service';\nimport {AuthGuard} from '@nestjs/passport';\nimport { AccessToken } from './auth/access-token';\nimport { RoleGuard } from './guard/role.guard';\nimport { Roles } from './decorator/role.decorator';\n\n/**\n * This controller contains the routes to connect and retrieve your profile\n */\n@Controller()\nexport class AppController {\n  constructor(readonly authService: AuthService) {}\n\n  /**\n   * the call of this method allows to recover a jwt token\n   * @param req {Request}\n   * @return {AccessToken}\n   */\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req): Promise {\n    // tslint:disable-next-line:no-console\n    return await this.authService.login(req.user);\n  }\n\n  /**\n   * This method allows get account information from jwt token\n   * @param req {Request}\n   */\n  @UseGuards(AuthGuard('jwt'))\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinTypePoiModule\n\nJoinTypePoiModule\n\nAppModule -->\n\nJoinTypePoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            GreenScoreModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            JoinTypePoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                        \n                            UserAppModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\nimport { PoiModule } from './poi/poi.module';\nimport { CompanyModule } from './company/company.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role/roleEntity';\nimport { User } from './user/userEntity';\nimport { Company } from './company/companyEntity';\nimport { TypeModule } from './type/type.module';\nimport { TagsModule } from './tags/tags.module';\nimport { Type } from './type/typeEntity';\nimport { Tag } from './tags/tagEntity';\nimport { Poi } from './poi/poiEntity';\nimport { JoinTypePoiModule } from './join-type-poi/join-type-poi.module';\nimport { JoinTagPoiModule } from './join-tag-poi/join-tag-poi.module';\nimport { UserAppModule } from './user-app/user-app.module';\nimport { JoinTagPoiEntity } from './join-tag-poi/joinTagPoiEntity';\nimport { JoinTypePoi } from './join-type-poi/joinTypePoi';\nimport { GreenScoreModule } from './green-score/green-score.module';\nimport { TypeGreenScoreModule } from './type-green-score/type-green-score.module';\nimport { PercentTypeGreenScoreAndPoiModule } from './percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScore } from './type-green-score/typeGreenScoreEntity';\nimport { PercentTypeGreenScoreAndPoi } from './percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST || 'localhost',\n      port: 3306,\n      username: process.env.DB_USER || 'admin',\n      password: process.env.DB_PASSWORD || 'root',\n      database: process.env.DB_NAME || 'madu',\n      entities: [\n        Role,\n        User,\n        Company,\n        Type,\n        Tag,\n        Poi,\n        JoinTagPoiEntity,\n        JoinTypePoi,\n        TypeGreenScore,\n        PercentTypeGreenScoreAndPoi,\n      ],\n      synchronize: true,\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    PoiModule,\n    CompanyModule,\n    TypeModule,\n    TagsModule,\n    JoinTypePoiModule,\n    JoinTagPoiModule,\n    UserAppModule,\n    GreenScoreModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Demo service nest\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    demo method nest\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Demo service nest\n */\n@Injectable()\nexport class AppService {\n  /**\n   * demo method nest\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    PassportModule.register({defaultStrategy: 'local'}),\n    RoleModule,\n    JwtModule.register({\n      secret: process.env.JWT_TOKEN || 'Helloo',\n      signOptions: {expiresIn: '3600s'},\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            set userService and jwtService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Method who create en send a jwt\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Method who check if the login password is correct and return the result without password return null if not\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        || null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { AccessToken } from './access-token';\n\n/**\n * Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * set userService and jwtService\n   * @param userService {UserService}\n   * @param jwtService {JwtService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   *  Method who check if the login password is correct and return the result without password return null if not\n   * @param mail {string}\n   * @param pass {string}\n   * @returns {object} || null\n   */\n  async validateUser(mail: string, pass: string) {\n    const user = await this.userService.getUserByMail(mail);\n    if (user &&  await bcrypt.compare(pass, user.password)) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  /**\n   * Method who create en send a jwt\n   * @param user\n   * @returns {AccessToken}\n   */\n  async login(user): Promise {\n    const payload = { userId: user.id, mail: user.mail };\n    const token = await this.jwtService.signAsync(payload);\n    return new AccessToken(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyEntity.ts\n        \n\n            \n                Description\n            \n            \n                Company entity from the database\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                beginDeal\n                            \n                            \n                                city\n                            \n                            \n                                domainMail\n                            \n                            \n                                endDeal\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                nbWorker\n                            \n                            \n                                postalCode\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:20\n                            \n                        \n\n                \n                    \n                        address of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:99\n                            \n                        \n\n                \n                    \n                        Date when the contract begin\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 40, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:44\n                            \n                        \n\n                \n                    \n                        city of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 75, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:54\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:108\n                            \n                        \n\n                \n                    \n                        Date when the contract end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:12\n                            \n                        \n\n                \n                    \n                        Unique id to a entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:82\n                            \n                        \n\n                \n                    \n                        Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:72\n                            \n                        \n\n                \n                    \n                        Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:28\n                            \n                        \n\n                \n                    \n                        name of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:90\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:34\n                            \n                        \n\n                \n                    \n                        postal code of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:62\n                            \n                        \n\n                \n                    \n                        Type of company entity stock in db (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Company entity from the database\n */\n@Entity()\nexport class Company {\n  /**\n   * Unique id to a entity stock in db\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * address of company entity stock in db\n   */\n  @Column({\n    length: 100,\n  })\n  address: string;\n\n  /**\n   * name of company entity stock in db\n   */\n  @Column({\n    length: 50,\n  })\n  name: string;\n\n  /**\n   * postal code of company entity stock in db\n   */\n  @Column()\n  postalCode: string;\n\n  /**\n   * city of company entity stock in db\n   */\n  @Column({\n    length: 40,\n    nullable: true,\n    default: null,\n  })\n  city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com)\n   */\n  @Column({\n    length: 75,\n    nullable: true,\n    default: null,\n  })\n  domainMail: string;\n\n  /**\n   * Type of company entity stock in db (ex: co-working, school etc)\n   */\n  @Column({\n    length: 50,\n  })\n  type: string;\n\n  /**\n   * Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  /**\n   * Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: true,\n  })\n  lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @Column({\n    default: 1,\n  })\n  nbWorker: number;\n\n  /**\n   * Date when the contract begin\n   */\n  @Column({\n    type: 'date',\n    default: '2020-10-10',\n  })\n  beginDeal: string;\n\n  /**\n   * Date when the contract end\n   */\n  @Column({\n     type: 'date',\n    default: '2020-10-10',\n  })\n  endDeal: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n            \n                Description\n            \n            \n                Controller to manage the companys data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getOneCompany\n                            \n                            \n                                    Async\n                                updateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:26\n                \n            \n\n\n            \n                \n                    method call method to check and add a new company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        information to add a new company\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Data was added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:76\n                \n            \n\n\n            \n                \n                    This method call method to delete a company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:50\n                \n            \n\n\n            \n                \n                    This method return all company in database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneCompany(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:39\n                \n            \n\n\n            \n                \n                    this method return one company entity with an id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCompany(id: number, companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Put(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:63\n                \n            \n\n\n            \n                \n                    This method update one company data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CompanyDto } from './companyDto';\nimport { CompanyService } from './company.service';\nimport { Company } from './companyEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * Controller to manage the companys data\n */\n@Controller('company')\n@UseGuards(AuthGuard('jwt'))\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  /**\n   * method call method to check and add a new company\n   * @param {CompanyDto} companyDto information to add a new company\n   * @returns Data was added\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addCompany(@Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto);\n  }\n\n  /**\n   * this method return one company entity with an id\n   * @param id {number}\n   * @returns {Company}\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneCompany(@Param('id', new ParseIntPipe()) id: number): Promise {\n    return await this.companyService.getOne(id);\n  }\n\n  /**\n   * This method return all company in database\n   * @returns {Company[]}\n   */\n  @Get()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllCompany(): Promise {\n    return await this.companyService.getAllCompany();\n  }\n\n  /**\n   * This method update one company data\n   * @param id\n   * @param companyDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Put(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async updateCompany(@Param('id', new ParseIntPipe()) id: number, @Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto, id);\n  }\n\n  /**\n   * This method call method to delete a company from the database\n   * @param idCompany {number}\n   * @returns string\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({  transform: true }))\n  async deleteCompany(@Param('id', new ParseIntPipe()) idCompany: number): Promise {\n    await this.companyService.getOne(idCompany);\n    await this.companyService.deleteCompany(idCompany);\n    return 'delete success';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyDto.html":{"url":"injectables/CompanyDto.html","title":"injectable - CompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyDto.ts\n        \n\n            \n                Description\n            \n            \n                Object that defines how the data will be sent over the network to add a new Company\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                beginDeal\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                domainMail\n                            \n                            \n                                    Readonly\n                                endDeal\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                nbWorker\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:27\n                            \n                        \n\n                \n                    \n                        Address Of Client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract start date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:74\n                            \n                        \n\n                \n                    \n                        contract start date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:36\n                            \n                        \n\n                \n                    \n                        City of client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'domain mail of client to authorize only employees of this client (ex: @example.com)'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:46\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract end date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:92\n                            \n                        \n\n                \n                    \n                        contract end date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:18\n                            \n                        \n\n                \n                    \n                        Data useless i guess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:83\n                            \n                        \n\n                \n                    \n                        Name of client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'number of worker who work in this company. This data is here to know how many users to expect'})@IsOptional()@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:102\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postal code of the client'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:55\n                            \n                        \n\n                \n                    \n                        postal code of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of Client', enum: TypeEnum})@IsEnum(TypeEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:65\n                            \n                        \n\n                \n                    \n                        Type of client (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CompanyInterface } from './interface/company.interface';\nimport { IsDate, IsDateString, IsEnum, IsNumber, IsNumberString, IsOptional, IsString } from 'class-validator';\nimport { TypeEnum } from './enum/type.enum';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * Object that defines how the data will be sent over the network to add a new Company\n */\n@Injectable()\nexport class CompanyDto implements CompanyInterface {\n\n  /**\n   * Data useless i guess\n   */\n  @ApiPropertyOptional()\n  @IsOptional()\n  readonly id?: number;\n\n  /**\n   * Address Of Client stock in db\n   */\n  @ApiProperty({\n    description: 'Address Of Client',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of client stock in db\n   */\n  @ApiProperty({\n    description: 'City of client',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com\n   */\n  @ApiProperty({\n    description: 'domain mail of client to authorize only employees of this client (ex: @example.com)',\n  })\n  @IsOptional()\n  @IsString()\n  readonly domainMail: string;\n\n  /**\n   * postal code of the client\n   */\n  @ApiProperty({\n    description: 'postal code of the client',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  /**\n   * Type of client (ex: co-working, school etc)\n   */\n  @ApiProperty({\n    description: 'Type of Client',\n    enum: TypeEnum,\n  })\n  @IsEnum(TypeEnum)\n  readonly type: string;\n\n  /**\n   * contract start date\n   */\n  @ApiProperty({\n    description: 'contract start date',\n  })\n  @IsString()\n  readonly beginDeal: string;\n\n  /**\n   * Name of client\n   */\n  @ApiProperty({\n    description: 'Name of client',\n  })\n  @IsString()\n  readonly name: string;\n\n  /**\n   * contract end date\n   */\n  @ApiProperty({\n    description: 'contract end date',\n  })\n  @IsString()\n  readonly endDeal: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @ApiPropertyOptional({\n    description: 'number of worker who work in this company. This data is here to know how many users to expect',\n  })\n  @IsOptional()\n  @IsNumberString()\n  readonly nbWorker: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyInterface.html":{"url":"interfaces/CompanyInterface.html","title":"interface - CompanyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompanyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/interface/company.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        beginDeal\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        domainMail\n                                \n                                \n                                        endDeal\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nbWorker\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beginDeal\n                                    \n                                \n                                \n                                    \n                                        beginDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainMail\n                                    \n                                \n                                \n                                    \n                                        domainMail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDeal\n                                    \n                                \n                                \n                                    \n                                        endDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbWorker\n                                    \n                                \n                                \n                                    \n                                        nbWorker:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyInterface {\n  readonly address: string;\n  readonly name: string;\n  readonly postalCode: string;\n  readonly city: string;\n  readonly domainMail?: string;\n  readonly type: string;\n  readonly nbWorker?: number;\n  readonly beginDeal: string;\n  readonly endDeal: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService\n\nCompanyService\n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Company]),\n  ],\n  providers: [CompanyService],\n  controllers: [CompanyController],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n            \n                Description\n            \n            \n                This class is the service to entity company\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:10\n                            \n                        \n\n                \n                    \n                            set the company repository\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto, id: null)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:26\n                \n            \n\n\n            \n                \n                    This method use to add or update a company in database\nif the id is not null is for update else is for add\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        | null}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:59\n                \n            \n\n\n            \n                \n                    This method delete one company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the delete data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:50\n                \n            \n\n\n            \n                \n                    This method returns all company from database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:39\n                \n            \n\n\n            \n                \n                    this method return one company from database and send an exception when nothing has found\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * This class is the service to entity company\n */\n@Injectable()\nexport class CompanyService {\n  /**\n   * set the company repository\n   * @param companyRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Company)\n    private readonly companyRepository: Repository,\n  ) {}\n\n  /**\n   * This method use to add or update a company in database\n   * if the id is not null is for update else is for add\n   * @param companyDto {CompanyDto}\n   * @param id {number} | null}\n   */\n  async addCompany(companyDto, id = null) {\n    const companyData = companyDto;\n    if (id) {\n      companyData.id = id;\n    }\n    return await this.companyRepository.save(companyData);\n  }\n\n  /**\n   * this method return one company from database and send an exception when nothing has found\n   * @param idCompany {number}\n   * @returns Company\n   */\n  async getOne(idCompany: number): Promise {\n    return await this.companyRepository.findOneOrFail(idCompany)\n      .catch(() => {\n        throw new NotFoundException(`Company with id ${idCompany} not found`);\n      });\n  }\n\n  /**\n   * This method returns all company from database\n   * @returns Company[]\n   */\n  async getAllCompany(): Promise {\n    return await this.companyRepository.find();\n  }\n\n  /**\n   * This method delete one company from the database\n   * @param idCompany {number}\n   * @returns the delete data\n   */\n  async deleteCompany(idCompany: number) {\n    return await this.companyRepository.delete(idCompany);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GreenScoreController.html":{"url":"controllers/GreenScoreController.html","title":"controller - GreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                green-score\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('green-score')\nexport class GreenScoreController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GreenScoreModule.html":{"url":"modules/GreenScoreModule.html","title":"module - GreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    GreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/green-score/green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GreenScoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GreenScoreService } from './green-score.service';\nimport { GreenScoreController } from './green-score.controller';\n\n@Module({\n  providers: [GreenScoreService],\n  controllers: [GreenScoreController]\n})\nexport class GreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GreenScoreService.html":{"url":"injectables/GreenScoreService.html","title":"injectable - GreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GreenScoreService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinTagPoiEntity.html":{"url":"classes/JoinTagPoiEntity.html","title":"class - JoinTagPoiEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinTagPoiEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/joinTagPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tag\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'SET NULL', nullable: true})@JoinColumn({name: 'tagId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Tag } from '../tags/tagEntity';\nimport { Poi } from '../poi/poiEntity';\n\n@Entity()\nexport class JoinTagPoiEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => Tag, (tag) => tag.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'SET NULL',\n    nullable: true,\n  })\n  @JoinColumn({\n    name: 'tagId',\n  })\n  tag: Tag;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinTagPoiModule.html":{"url":"modules/JoinTagPoiModule.html","title":"module - JoinTagPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinTagPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinTagPoiService } from './join-tag-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinTagPoiEntity]),\n  ],\n  providers: [JoinTagPoiService],\n  exports: [JoinTagPoiService],\n})\nexport class JoinTagPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinTagPoiService.html":{"url":"injectables/JoinTagPoiService.html","title":"injectable - JoinTagPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinTagPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinTagPoi\n                            \n                            \n                                    Async\n                                getAllCompanyTag\n                            \n                            \n                                    Async\n                                getAllPoiAndTag\n                            \n                            \n                                    Async\n                                serializeTagsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-tag-poi/join-tag-poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinTagPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToAdd\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tagToAdd\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompanyTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompanyTag(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoiAndTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoiAndTag()\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serializeTagsData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeTagsData(tags: JoinTagPoiEntity[])\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                            JoinTagPoiEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Injectable()\nexport class JoinTagPoiService {\n  constructor(\n    @InjectRepository(JoinTagPoiEntity)\n    private readonly joinTagPoiRepository: Repository,\n  ) {}\n\n  async addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag) {\n    const joinTagPoi = {\n      poi: poiToAdd,\n      tag: tagToAdd,\n    };\n    return await this.joinTagPoiRepository.save(joinTagPoi);\n  }\n\n  async getAllPoiAndTag(): Promise {\n    return await this.joinTagPoiRepository.find({\n      relations: ['poi', 'tag'],\n    });\n  }\n\n  async serializeTagsData(tags: JoinTagPoiEntity[]) {\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n\n  async getAllCompanyTag(poiToFind: Poi): Promise {\n    return await this.joinTagPoiRepository.find({\n      where: {\n        poi: poiToFind,\n      },\n      relations: ['tag'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinTypePoi.html":{"url":"classes/JoinTypePoi.html","title":"class - JoinTypePoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinTypePoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-type-poi/joinTypePoi.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-type-poi/joinTypePoi.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-type-poi/joinTypePoi.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE', nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-type-poi/joinTypePoi.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Type } from '../type/typeEntity';\n\n@Entity()\nexport class JoinTypePoi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n\n  @ManyToOne(type => Type, (type) => type.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n    nullable: true,\n  })\n  type: Type;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinTypePoiModule.html":{"url":"modules/JoinTypePoiModule.html","title":"module - JoinTypePoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinTypePoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinTypePoiModule\n\n\n\ncluster_JoinTypePoiModule_exports\n\n\n\ncluster_JoinTypePoiModule_providers\n\n\n\n\nJoinTypePoiService \n\nJoinTypePoiService \n\n\n\nJoinTypePoiModule\n\nJoinTypePoiModule\n\nJoinTypePoiService  -->\n\nJoinTypePoiModule->JoinTypePoiService \n\n\n\n\n\nJoinTypePoiService\n\nJoinTypePoiService\n\nJoinTypePoiModule -->\n\nJoinTypePoiService->JoinTypePoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-type-poi/join-type-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinTypePoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinTypePoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinTypePoiService } from './join-type-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinTypePoi } from './joinTypePoi';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinTypePoi]),\n  ],\n  providers: [JoinTypePoiService],\n  exports: [JoinTypePoiService],\n})\nexport class JoinTypePoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinTypePoiService.html":{"url":"injectables/JoinTypePoiService.html","title":"injectable - JoinTypePoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinTypePoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-type-poi/join-type-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinTypePoi\n                            \n                            \n                                    Async\n                                getAllPoiWithType\n                            \n                            \n                                    Async\n                                getPoiWithTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTypePoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-type-poi/join-type-poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTypePoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinTypePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinTypePoi(poiToAdd: Poi, typeToAdd: Type)\n                \n            \n\n\n            \n                \n                    Defined in src/join-type-poi/join-type-poi.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToAdd\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeToAdd\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoiWithType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoiWithType()\n                \n            \n\n\n            \n                \n                    Defined in src/join-type-poi/join-type-poi.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiWithTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiWithTag(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-type-poi/join-type-poi.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinTypePoi } from './joinTypePoi';\nimport { Repository } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Type } from '../type/typeEntity';\n\n@Injectable()\nexport class JoinTypePoiService {\n  constructor(\n    @InjectRepository(JoinTypePoi)\n    private readonly joinTypePoiRepository: Repository,\n  ) {}\n\n  async addJoinTypePoi(poiToAdd: Poi, typeToAdd: Type) {\n    const typePoi = {\n      type: typeToAdd,\n      poi: poiToAdd,\n    };\n    return await this.joinTypePoiRepository.save(typePoi);\n  }\n\n  async getAllPoiWithType(): Promise {\n    return await this.joinTypePoiRepository.find({\n      relations: ['type', 'poi'],\n    });\n  }\n\n  async getPoiWithTag(poiToFind: Poi): Promise {\n    return await this.joinTypePoiRepository.findOneOrFail({\n      where: {\n        poi: poiToFind,\n      },\n      relations: ['poi', 'tag'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when the client send request with a jwt in request header\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            set the option for jwt and set the jwt secret key,\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:32\n                \n            \n\n\n            \n                \n                    Check the validity of data contains in jwt and return  and set in req.user user info without password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '../user/user.service';\nimport { RoleService } from '../role/role.service';\n\n/**\n * Class use when the client send request with a jwt in request header\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set the option for jwt and set the jwt secret key,\n   * @param userService {UserService}\n   * @param roleService {RoleService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly roleService: RoleService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_TOKEN || 'helloo',\n    });\n  }\n\n  /**\n   * Check the validity of data contains in jwt and return  and set in req.user user info without password\n   * @param payload\n   */\n  async validate(payload) {\n    if (!payload.userId) {\n      throw new UnauthorizedException();\n    }\n    const {password, ...result} =  await this.userService.getUser(payload.userId);\n    // tslint:disable-next-line:no-console\n    const roles = await this.roleService.getInfRole(result.role.id);\n   // return result;\n    return {\n      user: result,\n      roles: await this.roleService.getOnlyRole(roles),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when client try to connect to their account\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            set authService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:24\n                \n            \n\n\n            \n                \n                    check if user exist and return them else send an exception\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ImATeapotException, Injectable, UnauthorizedException} from '@nestjs/common';\nimport {PassportStrategy} from '@nestjs/passport';\nimport {AuthService} from './auth.service';\nimport {Strategy} from 'passport-local';\n\n/**\n * Class use when client try to connect to their account\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set authService\n   * @param authService {AuthService}\n   */\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  /**\n   * check if user exist and return them else send an exception\n   * @param mail {string}\n   * @param password {string}\n   */\n  async validate(mail: string, password: string) {\n    const user = await this.authService.validateUser(mail, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoi.html":{"url":"classes/PercentTypeGreenScoreAndPoi.html","title":"class - PercentTypeGreenScoreAndPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                            \n                                    Readonly\n                                poi\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'idPoi'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeGreenScore\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@ManyToOne(undefined, undefined, {nullable: false})@JoinColumn({name: 'idTypeGreenScore'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { Poi } from '../poi/poiEntity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class PercentTypeGreenScoreAndPoi {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id: number;\n\n  @ApiProperty()\n  @Column()\n  readonly percent: number;\n\n  @ApiProperty()\n  @ManyToOne(type => TypeGreenScore, (typeGreenScore) => typeGreenScore.id, {\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'idTypeGreenScore',\n  })\n  readonly typeGreenScore: TypeGreenScore;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'idPoi',\n  })\n  readonly poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PercentTypeGreenScoreAndPoiController.html":{"url":"controllers/PercentTypeGreenScoreAndPoiController.html","title":"controller - PercentTypeGreenScoreAndPoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PercentTypeGreenScoreAndPoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                percent-type-green-score-and-poi\n            \n\n            \n                Description\n            \n            \n                Percent green score controller // todo doc\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewPercentTypeGCAndPoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addNewPercentTypeGCAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNewPercentTypeGCAndPoi(percentTypeGreenScoreAndPoiDto: PercentTypeGreenScoreAndPoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts:28\n                \n            \n\n\n            \n                \n                    todo doc\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentTypeGreenScoreAndPoiDto\n                                    \n                                                PercentTypeGreenScoreAndPoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * Percent green score controller // todo doc\n */\n@Controller('percent-type-green-score-and-poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PercentTypeGreenScoreAndPoiController {\n  /**\n   * todo doc\n   * @param percentTypeGreenScoreAndPoiService\n   */\n  constructor(readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService) {}\n\n  /**\n   *  todo doc\n   * @param percentTypeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addNewPercentTypeGCAndPoi(@Body() percentTypeGreenScoreAndPoiDto: PercentTypeGreenScoreAndPoiDto) {\n    return 'Oui';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoiDto.html":{"url":"classes/PercentTypeGreenScoreAndPoiDto.html","title":"class - PercentTypeGreenScoreAndPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PercentTypeGreenScoreAndPoiInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                idPoi\n                            \n                            \n                                    Readonly\n                                idTypeGreenScore\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idPoi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idTypeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PercentTypeGreenScoreAndPoiInterface } from './interfaces/percent-type-green-score-and-poi.interface';\nimport { IsNumber } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PercentTypeGreenScoreAndPoiDto implements PercentTypeGreenScoreAndPoiInterface{\n  @ApiProperty()\n  @IsNumber()\n  readonly idPoi: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly idTypeGreenScore: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{"url":"interfaces/PercentTypeGreenScoreAndPoiInterface.html","title":"interface - PercentTypeGreenScoreAndPoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentTypeGreenScoreAndPoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idPoi\n                                \n                                \n                                        idTypeGreenScore\n                                \n                                \n                                        percent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPoi\n                                    \n                                \n                                \n                                    \n                                        idPoi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTypeGreenScore\n                                    \n                                \n                                \n                                    \n                                        idTypeGreenScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                    \n                                \n                                \n                                    \n                                        percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PercentTypeGreenScoreAndPoiInterface {\n  readonly percent: number;\n  readonly idTypeGreenScore: number;\n  readonly idPoi: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PercentTypeGreenScoreAndPoiModule.html":{"url":"modules/PercentTypeGreenScoreAndPoiModule.html","title":"module - PercentTypeGreenScoreAndPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PercentTypeGreenScoreAndPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_imports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\n\nPoiModule\n\nPoiModule\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPoiModule->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPercentTypeGreenScoreAndPoiModule -->\n\nTypeGreenScoreModule->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PoiModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiController } from './percent-type-green-score-and-poi.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PoiModule } from '../poi/poi.module';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([PercentTypeGreenScoreAndPoi]),\n    PoiModule,\n    TypeGreenScoreModule,\n  ],\n  providers: [PercentTypeGreenScoreAndPoiService],\n  controllers: [PercentTypeGreenScoreAndPoiController],\n})\nexport class PercentTypeGreenScoreAndPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiService.html":{"url":"injectables/PercentTypeGreenScoreAndPoiService.html","title":"injectable - PercentTypeGreenScoreAndPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPercentTypeGreenScoreAndPoiService\n                            \n                            \n                                    Async\n                                getAllPercentTypeGreenScoreAndPoi\n                            \n                            \n                                    Async\n                                getOnePercentTypeGreenScoreAndPoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(percentTypeGreenScoreAndPoiRepository: Repository, poiService: PoiService, typeGreenScoreService: TypeGreenScoreService)\n                    \n                \n                        \n                            \n                                Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentTypeGreenScoreAndPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        poiService\n                                                  \n                                                        \n                                                                        PoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeGreenScoreService\n                                                  \n                                                        \n                                                                        TypeGreenScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPercentTypeGreenScoreAndPoiService\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPercentTypeGreenScoreAndPoiService(percentTypeGreenScoreAndPoiServiceDto: PercentTypeGreenScoreAndPoiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentTypeGreenScoreAndPoiServiceDto\n                                    \n                                                PercentTypeGreenScoreAndPoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPercentTypeGreenScoreAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPercentTypeGreenScoreAndPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOnePercentTypeGreenScoreAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnePercentTypeGreenScoreAndPoi(idPercent: number)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPercent\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { Repository } from 'typeorm';\nimport { PoiService } from '../poi/poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\n\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiService {\n  constructor(\n    @InjectRepository(PercentTypeGreenScoreAndPoi)\n    private readonly percentTypeGreenScoreAndPoiRepository: Repository,\n    private readonly poiService: PoiService,\n    private readonly typeGreenScoreService: TypeGreenScoreService,\n  ) {}\n\n  async addPercentTypeGreenScoreAndPoiService(\n    percentTypeGreenScoreAndPoiServiceDto: PercentTypeGreenScoreAndPoiDto) {\n    const typeGreenScoreFind = await this.typeGreenScoreService.getType(percentTypeGreenScoreAndPoiServiceDto.idTypeGreenScore);\n    const poiFind = await this.poiService.getPoi(percentTypeGreenScoreAndPoiServiceDto.idPoi);\n    const percentTypeGreenScoreAndPoi = {\n      percent: percentTypeGreenScoreAndPoiServiceDto.percent,\n      poi: poiFind,\n      typeGreenScore: typeGreenScoreFind,\n    };\n    return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGreenScoreAndPoi);\n  }\n\n  async getAllPercentTypeGreenScoreAndPoi(): Promise {\n    return await this.percentTypeGreenScoreAndPoiRepository.find();\n  }\n\n  async getOnePercentTypeGreenScoreAndPoi(idPercent: number): Promise {\n    return await this.percentTypeGreenScoreAndPoiRepository.findOneOrFail(idPercent)\n      .catch(() => {\n        throw new NotFoundException(`PercentTypeGreenScoreAndPoi with id ${idPercent} Not Found`);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Poi.html":{"url":"classes/Poi.html","title":"class - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                greenScore\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                logo\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                postalCode\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 30})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Poi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 30,\n  })\n  name: string;\n\n  @Column({\n    length: 50,\n  })\n  price: string;\n\n  @Column({\n    type: 'longtext',\n  })\n  description: string;\n\n  @Column({\n    length: 150,\n  })\n  address: string;\n\n  @Column({\n    length: 50,\n  })\n  city: string;\n\n  @Column({\n    length: 6,\n  })\n  postalCode: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  lat: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  greenScore: number;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  logo: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PoiController.html":{"url":"controllers/PoiController.html","title":"controller - PoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                poi\n            \n\n            \n                Description\n            \n            \n                point of interest controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                getCompanyAndTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())@UsePipes(PoiTransformationPipe)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyAndTags(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PoiDto } from './poiDto';\nimport { PoiTransformationPipe } from './pipe/poi.transformation.pipe';\nimport { getConnection } from 'typeorm';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from '../join-tag-poi/joinTagPoiEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * point of interest controller\n */\n@Controller('poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PoiController {\n  constructor(\n    private readonly poiService: PoiService,\n    private readonly joinTagPoiService: JoinTagPoiService,\n  ) {}\n\n  /**\n   *\n   * @param poiDto\n   */\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UsePipes(PoiTransformationPipe)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addPoi(@Body() poiDto: PoiDto) {\n    return await this.poiService.addPoi(poiDto);\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @Get(':id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getCompanyAndTags(@Param('id', new ParseIntPipe()) idPoi: number) {\n    const poi = await this.poiService.getPoi(idPoi);\n    const tags: JoinTagPoiEntity[] =  await this.joinTagPoiService.getAllCompanyTag(poi);\n    return  {\n      poi,\n      tags: await this.joinTagPoiService.serializeTagsData(tags),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiDto.html":{"url":"injectables/PoiDto.html","title":"injectable - PoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiDto.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                greenScore\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                tags\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'short description of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsNumberString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Latitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Longitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Name of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postalCode of the Poi'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Price range of the point of interest', enum: PriceEnum})@IsEnum(PriceEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id tags'})@IsOptional()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id Poi type'})@IsOptional()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:76\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiInterface } from './interfaces/poi.interface';\nimport { IsArray, IsEnum, IsNumber, IsNumberString, IsOptional, IsString } from 'class-validator';\nimport { PriceEnum } from './enum/price.enum';\nimport { ApiProperty, ApiPropertyOptional, getSchemaPath } from '@nestjs/swagger';\nimport { Type } from '../type/typeEntity';\nimport { TypeDto } from '../type/typeDto';\nimport { Tag } from '../tags/tagEntity';\n\n@Injectable()\nexport class PoiDto implements PoiInterface {\n  @ApiProperty({\n    description: 'Address Of Poi',\n  })\n  @IsString()\n  readonly address: string;\n\n  @ApiProperty({\n    description: 'City of the Poi',\n  })\n  @IsString()\n  readonly city: string;\n\n  @ApiPropertyOptional({\n    description: 'short description of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly description: string;\n\n  @ApiPropertyOptional()\n  @IsNumberString()\n  @IsOptional()\n  readonly greenScore: string;\n\n  @ApiPropertyOptional({\n    description: 'Latitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly lat: string;\n\n  @ApiPropertyOptional({\n    description: 'Longitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly long: string;\n\n  @ApiPropertyOptional({\n    description: 'Name of the Poi',\n  })\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({\n    description: 'postalCode of the Poi',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id tags',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly tags: number[];\n\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id Poi type',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly type: number[];\n\n  @ApiProperty({\n    description: 'Price range of the point of interest',\n    enum: PriceEnum,\n  })\n  @IsEnum(PriceEnum)\n  readonly price: string;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiInterface.html":{"url":"interfaces/PoiInterface.html","title":"interface - PoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/interfaces/poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        city\n                                \n                                \n                                        description\n                                \n                                \n                                        greenScore\n                                \n                                \n                                        lat\n                                \n                                \n                                            Optional\n                                        logo\n                                \n                                \n                                        long\n                                \n                                \n                                        name\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        price\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenScore\n                                    \n                                \n                                \n                                    \n                                        greenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        long\n                                    \n                                \n                                \n                                    \n                                        long:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PoiInterface {\n  readonly name: string;\n  readonly price: string;\n  readonly description: string;\n  readonly address: string;\n  readonly city: string;\n  readonly postalCode: string;\n  readonly long: string;\n  readonly lat: string;\n  readonly greenScore: string;\n  readonly logo?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PoiModule.html":{"url":"modules/PoiModule.html","title":"module - PoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_imports\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/poi/poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PoiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            TagsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { PriceEnum } from './enum/price.enum';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Poi } from './poiEntity';\nimport { PoiController } from './poi.controller';\nimport { TagsModule } from '../tags/tags.module';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Poi]),\n    TagsModule,\n    JoinTagPoiModule,\n  ],\n  providers: [PoiService],\n  controllers: [PoiController],\n  exports: [PoiService],\n})\nexport class PoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiService.html":{"url":"injectables/PoiService.html","title":"injectable - PoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                getPoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poiRepository: Repository, connection: Connection, tagsService: TagsService, joinTagPoiService: JoinTagPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/poi/poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poiRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Connection, Repository } from 'typeorm';\nimport { Poi } from './poiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TagsService } from '../tags/tags.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\n\n@Injectable()\nexport class PoiService {\n  constructor(\n    @InjectRepository(Poi)\n    private readonly poiRepository: Repository,\n    private connection: Connection,\n    private tagsService: TagsService,\n    private joinTagPoiService: JoinTagPoiService,\n  ) {}\n\n  async addPoi(poiDto) {\n    const tags = await this.tagsService.getTags(poiDto.tags);\n    if (tags.length  {\n      return await this.joinTagPoiService.addJoinTagPoi(poiAdded, tag);\n    });\n    await Promise.all(tagAddesPromise);\n    return poiAdded;\n  }\n\n  async getPoi(idPoi: number): Promise {\n    return await this.poiRepository.findOneOrFail(idPoi)\n      .catch(() => {\n        throw new NotFoundException(`Poi with id ${idPoi} Not Found`);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiTransformationPipe.html":{"url":"injectables/PoiTransformationPipe.html","title":"injectable - PoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/pipe/poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/pipe/poi.transformation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { filterInt } from '../../utils/function.utils';\nimport { PoiDto } from '../poiDto';\n\n@Injectable()\nexport class PoiTransformationPipe implements PipeTransform {\n\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    if (newValue.type) {\n      newValue.type = value.type.map((type) => {\n        return filterInt(type);\n      });\n    }\n    if (newValue.tags) {\n      newValue.tags = value.tags.map((idTags) => {\n        return filterInt(idTags);\n      });\n    }\n    return newValue;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/roleEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 15,\n  })\n  role: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {CanActivate, ExecutionContext, Injectable} from '@nestjs/common';\nimport {Reflector} from '@nestjs/core';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Role]),\n  ],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n            \n                Description\n            \n            \n                Role service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInfRole\n                            \n                            \n                                    Async\n                                getOneOrFailByRole\n                            \n                            \n                                    Async\n                                getOnlyRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRoleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRoleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfRole(idRole: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idRole\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneOrFailByRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneOrFailByRole(roleType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOnlyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnlyRole(roles)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * Role service\n */\n@Injectable()\nexport class RoleService {\n  /**\n   *\n   * @param roleRoleRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRoleRepository: Repository,\n  ) {}\n\n  /**\n   * @param roleType\n   */\n  async getOneOrFailByRole(roleType: string) {\n    return await this.roleRoleRepository.findOneOrFail({\n      where: {\n        role: roleType,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`Role ${roleType} not found`);\n    });\n  }\n\n  /**\n   * @param idRole {number}\n   */\n  async getInfRole(idRole: number): Promise {\n    return await this.roleRoleRepository.createQueryBuilder()\n      .select('role')\n      .where(`id = :id`, { id: idRole })\n      .orWhere('id > :idSup', { idSup: idRole  })\n      .getRawMany();\n  }\n\n  async getOnlyRole(roles): Promise {\n    return roles.map((role) => {\n      return role.role;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Tag {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  tag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto: TagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TagsDto } from './tagsDto';\nimport { TagsService } from './tags.service';\nimport { Tag } from './tagEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n@Controller('tags')\n@UseGuards(AuthGuard('jwt'))\nexport class TagsController {\n  constructor(private readonly tagsService: TagsService) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addTag(@Body() tagDto: TagsDto) {\n    return await this.tagsService.addTag(tagDto);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true}))\n  async deleteTag(@Param('id', new ParseIntPipe()) idTag: number) {\n    await this.tagsService.getOneTag(idTag);\n    return await this.tagsService.deleteTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async getOneTag(@Param('id', new ParseIntPipe()) idTag: number): Promise {\n    return await this.tagsService.getOneTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTag(): Promise {\n    return await this.tagsService.getAllTag();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagsDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TagsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'name of tag (ex: bio, vegan etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagsDto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagsInterface } from './interfaces/tags.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TagsDto implements TagsInterface {\n  @ApiProperty({\n    description: 'name of tag (ex: bio, vegan etc...)',\n  })\n  @IsString()\n  readonly tag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsInterface.html":{"url":"interfaces/TagsInterface.html","title":"interface - TagsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TagsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/interfaces/tags.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TagsInterface {\n  readonly tag: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagsService } from './tags.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { TagsController } from './tags.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Tag]),\n  ],\n  providers: [TagsService],\n  controllers: [TagsController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTags(idsTags: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTags\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: Repository,\n  ) {}\n\n  async addTag(tagDto) {\n    return await this.tagRepository.save(tagDto);\n  }\n\n  async deleteTag(idTag: number) {\n    return await this.tagRepository.delete(idTag);\n  }\n\n  async getAllTag(): Promise {\n    return await this.tagRepository.find();\n  }\n\n  async getOneTag(idTag: number): Promise {\n    return await this.tagRepository.findOneOrFail(idTag)\n      .catch(() => {\n        throw new NotFoundException(`Tag with id ${idTag} not found`);\n      });\n  }\n\n  async getTags(idsTags: number[]) {\n    return await this.tagRepository.findByIds(idsTags)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Type {\n\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeController.html":{"url":"controllers/TypeController.html","title":"controller - TypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type\n            \n\n            \n                Description\n            \n            \n                type controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                delteType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto: TypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n                                    \n                                                TypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delteType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TypeDto } from './typeDto';\nimport { Type } from './typeEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * type controller\n */\n@Controller('type')\n@UseGuards(AuthGuard('jwt'))\nexport class TypeController {\n  /**\n   *\n   * @param typeService\n   */\n  constructor(private readonly typeService: TypeService) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addType(@Body() typeDto: TypeDto) {\n    return await this.typeService.addType(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneType(@Param('id', new ParseIntPipe()) idType: number): Promise {\n    return await this.typeService.getOneType(idType);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getTypes(): Promise {\n    return await this.typeService.getAllType();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async delteType(@Param('id', new ParseIntPipe()) idType: number) {\n    await this.typeService.getOneType(idType);\n    return await this.typeService.deleteType(idType);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeDto.html":{"url":"classes/TypeDto.html","title":"class - TypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of company (ex: Co-Working, PME, etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeDto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeInterface } from './interface/type.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeDto implements TypeInterface {\n\n  @ApiProperty({\n    description: 'Type of company (ex: Co-Working, PME, etc...)',\n  })\n  @IsString()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScore.html":{"url":"classes/TypeGreenScore.html","title":"class - TypeGreenScore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 70})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class TypeGreenScore {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 70,\n  })\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController.html":{"url":"controllers/TypeGreenScoreController.html","title":"controller - TypeGreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * Type green score controller\n */\n@Controller('type-green-score')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScoreDto.html":{"url":"classes/TypeGreenScoreDto.html","title":"class - TypeGreenScoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeGreenScoreInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeGreenScoreInterface } from './interfaces/type-green-score.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeGreenScoreDto implements TypeGreenScoreInterface{\n  @ApiProperty()\n  @IsString()\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeGreenScoreInterface.html":{"url":"interfaces/TypeGreenScoreInterface.html","title":"interface - TypeGreenScoreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeGreenScoreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/interfaces/type-green-score.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeGreenScoreInterface {\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeGreenScoreModule.html":{"url":"modules/TypeGreenScoreModule.html","title":"module - TypeGreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeGreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type-green-score/type-green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeGreenScoreController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { TypeGreenScoreController } from './type-green-score.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([TypeGreenScore]),\n  ],\n  providers: [TypeGreenScoreService],\n  controllers: [TypeGreenScoreController],\n  exports: [TypeGreenScoreService],\n})\nexport class TypeGreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeGreenScoreService.html":{"url":"injectables/TypeGreenScoreService.html","title":"injectable - TypeGreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeGreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeGreenScoreRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type-green-score/type-green-score.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeGreenScoreRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGreenScore(typeGreenScoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class TypeGreenScoreService {\n  constructor(\n    @InjectRepository(TypeGreenScore)\n    private readonly typeGreenScoreRepository: Repository,\n  ) {}\n\n  async addGreenScore(typeGreenScoreDto) {\n    return await this.typeGreenScoreRepository.save(typeGreenScoreDto);\n  }\n\n  async getAllType(): Promise {\n    return await this.typeGreenScoreRepository.find();\n  }\n\n  async getType(idType: number): Promise {\n    return await this.typeGreenScoreRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type Green Score With id ${idType} Not Found`);\n      });\n  }\n\n  async deleteTypeGreenScore(idTypeGreenScore) {\n    const typeGreenScore = await this.getType(idTypeGreenScore);\n    return await this.typeGreenScoreRepository.delete(typeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeInterface.html":{"url":"interfaces/TypeInterface.html","title":"interface - TypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/interface/type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeInterface {\n  readonly type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeModule.html":{"url":"modules/TypeModule.html","title":"module - TypeModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_providers\n\n\n\n\nTypeService\n\nTypeService\n\n\n\nTypeModule\n\nTypeModule\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type/type.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { TypeController } from './type.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Type]),\n  ],\n  providers: [TypeService],\n  controllers: [TypeController],\n})\nexport class TypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeService.html":{"url":"injectables/TypeService.html","title":"injectable - TypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                deleteType\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type/type.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class TypeService {\n  constructor(\n    @InjectRepository(Type)\n    private readonly typeRepository: Repository,\n  ) {}\n\n  async addType(typeDto) {\n    return await this.typeRepository.save(typeDto);\n  }\n\n  async getOneType(idType: number): Promise {\n    return await this.typeRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type with id ${idType} not found`);\n      });\n  }\n\n  async getAllType(): Promise {\n    return await this.typeRepository.find();\n  }\n\n  async deleteType(idType: number) {\n    return await this.typeRepository.delete(idType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'roleId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Role } from '../role/roleEntity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 255,\n    unique: true,\n  })\n  mail: string;\n\n  @Column({\n    length: 50,\n  })\n  firstName: string;\n\n  @Column({\n    length: 50,\n  })\n  lastName: string;\n\n  @Column({\n    length: 200,\n  })\n  password: string;\n\n  @ManyToOne(type => Role, (role) => role.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'roleId',\n  })\n  role: Role;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAppModule.html":{"url":"modules/UserAppModule.html","title":"module - UserAppModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\n\nUserAppService\n\nUserAppService\n\n\n\nUserAppModule\n\nUserAppModule\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-app/user-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserAppService } from './user-app.service';\n\n@Module({\n  providers: [UserAppService]\n})\nexport class UserAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAppService.html":{"url":"injectables/UserAppService.html","title":"injectable - UserAppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-app/user-app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserAppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                User controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                toto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:22\n                \n            \n\n\n            \n                \n                    method call to add new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            toto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toto()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('test')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:32\n                \n            \n\n\n            \n                \n                    test\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './userDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\n\n/**\n * User controller\n */\n@Controller('user')\nexport class UserController {\n  constructor(readonly userService: UserService) {}\n\n  /**\n   * method call to add new user\n   * @param userDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addUser(@Body() userDto: UserDto) {\n    return this.userService.addUser(userDto);\n  }\n\n  /**\n   * test\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('test')\n  async toto() {\n    // tslint:disable-next-line:no-console\n    console.log('toto');\n    return 'TOTOT';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            UserInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                mail\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'first name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'last name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'preset role user', enum: RoleEnum})@IsEnum(RoleEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './interfaces/user.interface';\nimport { IsEmail, IsEnum, IsString } from 'class-validator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto implements UserInterface {\n  @ApiProperty({\n    description: 'first name of user',\n  })\n  @IsString()\n  readonly firstName: string;\n\n  @ApiProperty({\n    description: 'last name of user',\n  })\n  @IsString()\n  readonly lastName: string;\n\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  readonly mail: string;\n\n  @ApiProperty({\n    description: 'password of user',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    description: 'preset role user',\n    enum: RoleEnum,\n  })\n  @IsEnum(RoleEnum)\n  readonly role: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        mail\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n  readonly mail: string;\n  readonly firstName: string;\n  readonly lastName: string;\n  readonly password: string;\n  readonly role: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    RoleModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserByMail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByMail(eMail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { RoleService } from '../role/role.service';\nimport { Role } from '../role/roleEntity';\n\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly roleService: RoleService,\n  ) {}\n\n  async hashPassword(password: string): Promise {\n    const saltRounds = 10;\n    return await bcrypt.hash(password, saltRounds);\n  }\n\n  async addUser(userDto) {\n    const user = userDto;\n    user.password = await this.hashPassword(user.password);\n    user.role = await this.roleService.getOneOrFailByRole(user.role);\n    return this.userRepository.save(user);\n  }\n\n  async getUserByMail(eMail: string) {\n    return this.userRepository.findOneOrFail({\n      where: {\n        mail: eMail,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`User ${eMail} not found`);\n    });\n  }\n\n  async getUser(userId: number) {\n    return await this.userRepository.findOneOrFail(userId, {\n      relations: ['role'],\n    })\n      .catch(() => {\n        throw new NotFoundException(`user with ${userId} not found`);\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/access-token.ts\n            \n            class\n            AccessToken\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token.interfaces.ts\n            \n            interface\n            AccessTokenInterfaces\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/company/companyDto.ts\n            \n            injectable\n            CompanyDto\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/company/companyEntity.ts\n            \n            class\n            Company\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/company/interface/company.interface.ts\n            \n            interface\n            CompanyInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.controller.ts\n            \n            controller\n            GreenScoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.service.ts\n            \n            injectable\n            GreenScoreService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/join-tag-poi/join-tag-poi.service.ts\n            \n            injectable\n            JoinTagPoiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/join-tag-poi/joinTagPoiEntity.ts\n            \n            class\n            JoinTagPoiEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/join-type-poi/join-type-poi.service.ts\n            \n            injectable\n            JoinTypePoiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/join-type-poi/joinTypePoi.ts\n            \n            class\n            JoinTypePoi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n            \n            class\n            PercentTypeGreenScoreAndPoiDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n            \n            interface\n            PercentTypeGreenScoreAndPoiInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n            \n            controller\n            PercentTypeGreenScoreAndPoiController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n            \n            class\n            PercentTypeGreenScoreAndPoi\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/poi/interfaces/poi.interface.ts\n            \n            interface\n            PoiInterface\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/poi/pipe/poi.transformation.pipe.ts\n            \n            injectable\n            PoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/poi/poi.controller.ts\n            \n            controller\n            PoiController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/poi/poi.service.ts\n            \n            injectable\n            PoiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/poi/poiDto.ts\n            \n            injectable\n            PoiDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/poi/poiEntity.ts\n            \n            class\n            Poi\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/role/roleEntity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tags/interfaces/tags.interface.ts\n            \n            interface\n            TagsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tagEntity.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tags/tagsDto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/interfaces/type-green-score.interface.ts\n            \n            interface\n            TypeGreenScoreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.service.ts\n            \n            injectable\n            TypeGreenScoreService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreDto.ts\n            \n            class\n            TypeGreenScoreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreEntity.ts\n            \n            class\n            TypeGreenScore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/type/interface/type.interface.ts\n            \n            interface\n            TypeInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/type.controller.ts\n            \n            controller\n            TypeController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type/type.service.ts\n            \n            injectable\n            TypeService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/type/typeDto.ts\n            \n            class\n            TypeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/typeEntity.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user-app/user-app.service.ts\n            \n            injectable\n            UserAppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userEntity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            filterInt\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.2.3\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/compression : ^1.0.1\n        \n            @types/cookie-parser : ^1.4.2\n        \n            bcrypt : ^3.0.7\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.3\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceEnum   (src/.../price.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                        \n                            TypeEnum   (src/.../type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/poi/enum/price.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceEnum\n                    \n                \n                        \n                            \n                                 low\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n            \n        \n\n    src/role/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                 company\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n            \n        \n\n    src/company/enum/type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeEnum\n                    \n                \n                        \n                            \n                                 Agence\n                            \n                        \n                        \n                            \n                                 Ecole\n                            \n                        \n                        \n                            \n                                 Co-working\n                            \n                        \n                        \n                            \n                                 Start-up\n                            \n                        \n                        \n                            \n                                 Grand compte\n                            \n                        \n                        \n                            \n                                 PME\n                            \n                        \n                        \n                            \n                                 Incubateur\n                            \n                        \n                        \n                            \n                                 autre\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main function who call the different router and middleware for the app to work properly\nHelmet helps you secure your Express apps by setting various HTTP headers\nUse to limit repeated requests to  APIs\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinTagPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinTypePoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PercentTypeGreenScoreAndPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeGreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\ncluster_JoinTypePoiModule\n\n\n\ncluster_JoinTypePoiModule_exports\n\n\n\ncluster_JoinTypePoiModule_providers\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_providers\n\n\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinTypePoiModule\n\nJoinTypePoiModule\n\nAppModule -->\n\nJoinTypePoiModule->AppModule\n\n\n\n\n\nJoinTypePoiService \n\nJoinTypePoiService \n\nJoinTypePoiService  -->\n\nJoinTypePoiModule->JoinTypePoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPoiModule->PercentTypeGreenScoreAndPoiModule\n\n\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPercentTypeGreenScoreAndPoiModule -->\n\nTypeGreenScoreModule->PercentTypeGreenScoreAndPoiModule\n\n\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeModule\n\nTypeModule\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\nJoinTypePoiService\n\nJoinTypePoiService\n\nJoinTypePoiModule -->\n\nJoinTypePoiService->JoinTypePoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\nUserAppService\n\nUserAppService\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    16 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            filterInt   (src/.../function.utils.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/function.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            filterInt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value) => {\n  if (/^(-|\\+)?(\\d+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n  return NaN;\n}\n                        \n                    \n\n                \n                    \n                        Function who check if the value is an integer return null if not\n\n                    \n                \n\n            \n        \n\n    src/decorator/role.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string []) => SetMetadata('roles', roles)\n                        \n                    \n\n                \n                    \n                        this function set roles who have the right to access an a method or class\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
