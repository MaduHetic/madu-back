var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AccessToken.html",[0,0.159,1,3.222]],["body/classes/AccessToken.html",[0,0.184,1,5.978,2,1.32,3,0.077,4,0.077,5,0.068,6,6.781,7,4.671,8,2.121,9,2.076,10,5.578,11,5.578,12,2.168,13,4.22,14,5.763,15,3.512,16,5.78,17,0.361,18,1.657,19,7.786,20,1.662,21,6.874,22,0.706,23,6.874,24,5.462,25,5.193,26,1.347,27,0.008,28,1.192,29,1.168,30,3.897,31,6.874,32,0.337,33,1.802,34,6.874,35,2.73,36,0.174,37,5.27,38,5.27,39,0.077,40,3.981,41,3.746,42,5.27,43,1.816,44,5.27,45,0.004,46,0.006,47,0.004]],["title/interfaces/AccessTokenInterfaces.html",[16,3.425,35,1.801]],["body/interfaces/AccessTokenInterfaces.html",[3,0.091,4,0.091,5,0.08,8,1.918,10,6.192,13,3.815,14,4.417,16,5.765,17,0.426,18,1.56,19,7.633,25,5.765,27,0.008,30,3.523,32,0.398,33,1.946,35,3.031,39,0.091,45,0.005,46,0.006,47,0.005,48,3.397,49,5.508,50,5.508,51,6.215,52,5.508,53,4.684,54,4.897,55,5.424,56,4.684,57,6.192,58,7.631]],["title/controllers/AppController.html",[9,1.369,59,3.425]],["body/controllers/AppController.html",[0,0.149,1,4.224,3,0.062,4,0.062,5,0.054,8,1.311,9,2.242,10,6.022,13,4.556,14,5.552,17,0.291,22,0.61,26,1.519,27,0.008,28,1.03,29,1.317,32,0.272,36,0.268,39,0.062,40,3.209,41,3.02,43,2.361,45,0.004,46,0.005,47,0.004,56,4.207,59,4.489,60,1.34,61,3.765,62,4.821,63,5.942,64,5.267,65,5.942,66,5.942,67,1.519,68,2.156,69,5.942,70,5.267,71,4.248,72,1.239,73,4.248,74,4.248,75,4.763,76,5.267,77,5.267,78,6.115,79,1.519,80,4.248,81,6.022,82,5.901,83,4.248,84,4.248,85,4.489,86,5.942,87,2.048,88,2.17,89,2.103,90,3.036,91,0.53,92,4.398,93,4.248,94,2.103,95,1.775,96,4.248,97,3.036,98,5.561,99,2.103,100,6.074,101,1.179,102,4.248,103,3.02,104,1.682,105,4.248,106,4.248,107,4.248,108,3.447,109,3.765,110,1.204,111,4.248,112,2.103,113,2.243,114,2.862,115,4.248,116,4.248,117,3.765]],["title/modules/AppModule.html",[118,1.005,119,3.425]],["body/modules/AppModule.html",[0,0.08,3,0.034,4,0.034,5,0.029,27,0.008,32,0.448,36,0.305,39,0.034,45,0.002,46,0.003,47,0.002,54,2.393,59,3.554,60,1.176,91,0.287,118,1.043,119,7.021,120,0.81,121,0.81,122,0.849,123,0.849,124,0.81,125,1.738,126,0.849,127,2.036,128,2.036,129,2.036,130,4.531,131,4.531,132,3.914,133,4.531,134,4.294,135,4.091,136,4.294,137,4.294,138,4.531,139,4.294,140,4.531,141,4.091,142,4.091,143,4.091,144,4.294,145,4.091,146,4.531,147,4.091,148,4.531,149,4.091,150,4.091,151,4.531,152,3.914,153,4.531,154,1.377,155,0.849,156,0.849,157,2.298,158,1.519,159,2.298,160,2.036,161,2.298,162,1.736,163,1.864,164,1.864,165,1.736,166,0.986,167,0.625,168,1.846,169,1.548,170,2.158,171,1.354,172,1.846,173,1.864,174,1.864,175,1.864,176,2.298,177,2.425,178,1.736,179,1.519,180,1.354,181,3.188,182,1.905,183,4.393,184,1.736,185,2.298,186,2.393,187,2.036,188,2.54,189,1.633,190,3.025,191,1.302,192,1.846,193,1.966,194,1.302,195,1.738,196,1.736,197,2.289,198,2.036,199,2.298,200,2.036,201,2.113,202,1.354,203,4.393,204,1.548,205,2.298,206,2.298,207,2.511,208,2.298,209,1.905,210,1.736,211,2.511,212,2.298,213,2.289,214,2.817,215,2.298,216,1.474,217,2.036,218,2.113,219,1.864,220,2.511,221,2.298,222,2.196,223,1.474,224,2.511,225,2.298,226,3.041,227,1.633,228,2.038,229,1.633,230,2.393,231,2.298,232,2.511,233,2.298,234,2.298,235,1.864,236,2.298,237,2.298,238,2.298,239,2.298,240,2.298,241,1.864,242,2.298,243,2.036,244,1.302,245,2.298,246,2.298,247,1.633,248,2.298,249,2.036,250,2.298,251,2.298,252,0.936]],["title/injectables/AppService.html",[153,3.222,253,0.707]],["body/injectables/AppService.html",[0,0.213,3,0.089,4,0.089,5,0.078,8,1.875,17,0.416,22,0.624,27,0.008,33,1.926,36,0.201,39,0.089,45,0.005,46,0.006,47,0.005,67,1.924,75,4.829,79,1.924,91,0.758,104,1.491,153,5.349,253,1.174,254,1.875,255,5.385,256,8.545,257,6.106,258,8.545,259,8.545,260,6.076,261,5.385,262,6.076]],["title/classes/AppUserDto.html",[0,0.159,263,3.425]],["body/classes/AppUserDto.html",[0,0.221,2,1.162,3,0.068,4,0.068,5,0.06,8,2.488,17,0.318,18,1.291,22,0.827,27,0.008,28,1.336,29,1.708,32,0.516,33,2.092,36,0.237,39,0.068,45,0.004,46,0.005,47,0.004,72,1.682,101,1.289,170,2.147,241,5.826,244,4.57,263,4.772,264,4.113,265,1.47,266,5.424,267,5.424,268,4.07,269,5.191,270,5.598,271,6.364,272,4.641,273,5.598,274,4.641,275,4.641,276,6.253,277,5.598,278,4.641,279,4.641,280,4.641,281,3.299,282,4.113,283,5.826,284,3.506,285,4.772,286,3.593,287,1.843,288,3.304]],["title/modules/AuthModule.html",[118,1.005,130,3.222]],["body/modules/AuthModule.html",[0,0.169,3,0.071,4,0.071,5,0.062,27,0.008,36,0.289,39,0.071,45,0.004,46,0.005,47,0.004,91,0.604,92,5.836,95,2.023,118,1.626,120,1.707,121,1.707,122,1.788,123,1.788,124,1.707,125,2.71,126,2.71,130,6.569,145,5.404,152,5.17,154,2.4,155,1.788,156,1.788,158,2.647,162,3.658,163,3.928,289,4.291,290,4.842,291,4.291,292,4.291,293,5.986,294,5.986,295,4.842,296,4.291,297,6.499,298,4.842,299,3.658,300,4.842,301,4.842,302,4.842,303,3.658,304,4.842,305,4.291,306,3.928,307,4.291,308,4.842,309,4.842,310,4.842]],["title/injectables/AuthService.html",[92,2.909,253,0.707]],["body/injectables/AuthService.html",[0,0.224,1,3.862,3,0.055,4,0.055,5,0.048,8,1.156,11,4.409,12,1.182,13,3.336,14,3.862,17,0.257,20,1.714,22,0.656,24,3.66,25,2.831,26,1.634,27,0.008,28,1.108,29,1.417,32,0.348,33,1.933,36,0.246,39,0.055,43,2.565,45,0.006,46,0.005,47,0.003,55,3.862,62,4.409,67,1.389,68,2.068,70,6.215,75,4.983,79,1.793,87,1.872,91,0.468,92,3.487,104,1.965,110,1.812,170,1.983,244,4.22,253,0.848,254,1.156,265,0.884,268,3.624,299,2.831,311,3.321,312,5.434,313,4.724,314,5.434,315,5.434,316,5.434,317,5.434,318,3.321,319,4.642,320,8.603,321,3.747,322,5.434,323,3.747,324,4.816,325,5.434,326,7.013,327,3.747,328,5.434,329,4.816,330,4.069,331,2.663,332,4.105,333,1.916,334,3.321,335,2.53,336,3.747,337,3.747,338,3.321,339,3.04,340,2.524,341,2.524,342,3.747,343,3.747,344,3.747]],["title/classes/Challenge.html",[0,0.159,218,2.57]],["body/classes/Challenge.html",[0,0.181,2,1.298,3,0.076,4,0.076,5,0.066,8,2.342,17,0.355,18,1.39,22,0.859,27,0.008,32,0.568,33,2.023,36,0.171,39,0.076,45,0.004,46,0.006,47,0.004,72,1.745,218,3.855,252,2.77,330,2.833,345,4.594,346,6.158,347,5.112,348,2.197,349,4.471,350,1.486,351,2.833,352,6.027,353,5.184,354,5.112,355,6.087,356,5.184,357,6.027,358,5.184,359,3.256,360,5.184,361,3.855,362,3.345,363,2.349,364,5.184,365,3.791,366,2.111,367,1.41,368,5.184]],["title/controllers/ChallengeController.html",[9,1.369,369,3.425]],["body/controllers/ChallengeController.html",[0,0.126,3,0.053,4,0.053,5,0.046,9,1.091,12,1.668,17,0.247,20,1.139,22,0.753,26,1.762,27,0.008,28,1.195,29,1.528,32,0.401,36,0.279,39,0.053,43,1.245,45,0.003,46,0.004,47,0.003,56,3.248,60,1.139,67,1.352,68,2.359,72,1.53,78,4.729,79,1.875,88,2.703,89,1.788,90,1.846,91,0.451,94,1.788,95,1.51,97,2.703,99,1.788,101,1.003,104,1.8,110,2.173,112,1.788,113,3.639,114,3.564,170,2.109,181,2.27,216,2.318,218,2.999,252,1.471,265,0.861,333,1.865,335,2.259,350,1.414,369,3.997,370,3.202,371,1.734,372,4.689,373,4.689,374,6.892,375,4.689,376,5.291,377,3.202,378,5.629,379,3.612,380,3.612,381,3.202,382,3.612,383,3.612,384,6.108,385,2.568,386,3.612,387,3.202,388,3.612,389,3.612,390,3.612,391,3.612,392,3.612,393,1.907,394,3.422,395,1.907,396,1.907,397,2.729,398,4.217,399,3.997,400,1.788,401,1.974,402,1.684,403,1.974,404,4.018,405,4.293,406,2.568,407,3.612,408,3.612,409,3.612,410,2.892,411,4.689,412,3.612,413,3.612,414,3.612,415,3.612,416,3.612,417,3.612,418,1.974,419,3.612,420,3.612,421,3.612,422,3.612,423,2.931,424,3.612,425,4.293,426,3.612]],["title/classes/ChallengeDto.html",[0,0.159,378,3.222]],["body/classes/ChallengeDto.html",[0,0.252,2,1.418,3,0.083,4,0.083,5,0.073,8,2.443,17,0.388,18,1.471,22,0.812,27,0.008,32,0.507,33,1.963,36,0.238,39,0.083,45,0.005,46,0.006,47,0.005,72,1.651,101,1.572,265,1.485,286,3.69,287,2.249,288,3.309,349,4.663,350,1.328,378,5.117,427,5.017,428,7.015,429,5.438,430,5.661,431,4.277,432,5.661,433,5.661,434,5.017,435,5.017,436,5.661,437,4.419]],["title/modules/ChallengeModule.html",[118,1.005,131,3.222]],["body/modules/ChallengeModule.html",[0,0.187,3,0.078,4,0.078,5,0.069,27,0.008,36,0.286,39,0.078,45,0.004,46,0.006,47,0.004,60,2.187,91,0.667,118,1.707,120,1.884,121,1.884,122,1.974,123,1.974,124,1.884,125,2.845,126,2.845,131,6.419,136,5.832,154,2.562,155,1.974,156,1.974,158,2.825,166,2.293,167,1.453,170,1.848,181,2.293,216,3.429,217,4.736,218,3.029,369,5.819,398,6.217,399,4.037,405,4.336,438,4.736,439,5.344,440,4.736,441,4.736,442,5.344,443,5.344,444,5.344]],["title/injectables/ChallengeService.html",[253,0.707,398,3.054]],["body/injectables/ChallengeService.html",[0,0.139,3,0.058,4,0.058,5,0.051,12,1.25,17,0.272,20,1.785,22,0.812,26,1.946,27,0.008,28,1.32,29,1.687,32,0.423,36,0.262,39,0.058,45,0.003,46,0.005,47,0.003,67,1.447,68,2.394,79,1.946,87,2.48,91,0.495,104,1.942,110,2.361,167,1.078,170,1.917,171,2.336,181,1.701,216,2.545,218,4.314,253,0.883,254,1.224,265,0.921,333,1.995,335,2.042,348,1.148,350,1.46,367,1.078,372,5.016,373,5.016,375,5.016,377,5.016,378,2.819,381,5.016,384,5.85,387,5.016,398,3.813,399,2.996,404,5.228,405,3.218,445,3.515,446,5.66,447,7.198,448,3.965,449,3.173,450,3.965,451,5.66,452,3.965,453,3.965,454,5.66,455,3.965,456,3.965,457,3.965,458,2.248,459,1.748,460,3.965,461,3.965,462,5.66,463,3.965,464,3.965,465,3.965,466,3.965,467,3.965,468,2.026,469,1.849,470,3.965,471,2.248,472,3.965,473,3.965]],["title/classes/Company.html",[0,0.159,172,2.244]],["body/classes/Company.html",[0,0.084,2,0.599,3,0.035,4,0.035,5,0.031,8,0.738,11,4.499,17,0.164,18,0.787,22,0.839,27,0.008,28,1.054,32,0.554,33,2.06,36,0.079,39,0.035,45,0.002,46,0.003,47,0.002,53,3.987,54,2.472,57,3.126,72,1.706,172,4.328,247,2.738,252,3.193,268,2.184,330,3.03,348,1.76,350,1.311,351,2.106,354,2.595,359,2.075,361,4.027,362,3.643,363,2.512,365,3.705,366,3.481,367,0.651,474,2.121,475,4.094,476,3.924,477,4.094,478,4.286,479,3.654,480,3.924,481,3.438,482,3.924,483,3.438,484,3.924,485,3.258,486,5.541,487,4.023,488,4.616,489,2.393,490,7.326,491,7.326,492,6.296,493,5.544,494,4.361,495,2.393,496,4.914,497,3.853,498,3.853,499,2.393,500,3.924,501,2.393,502,3.415,503,2.393,504,3.126,505,4.188,506,3.415,507,3.941,508,3.415,509,2.393,510,3.415,511,2.393,512,3.924,513,2.393,514,3.126,515,5.756,516,5.544,517,5.544,518,4.914,519,3.126,520,2.393,521,2.393,522,3.126,523,2.393,524,3.872,525,4.188,526,2.393,527,2.911,528,2.393,529,3.415,530,3.126,531,3.126,532,3.415,533,3.415,534,2.393,535,3.415,536,3.126,537,3.853,538,2.393,539,2.393,540,2.911,541,2.911,542,3.415,543,2.911]],["title/controllers/CompanyController.html",[9,1.369,544,3.425]],["body/controllers/CompanyController.html",[0,0.094,3,0.039,4,0.039,5,0.034,8,1.302,9,1.575,12,2.253,17,0.184,22,0.701,26,1.512,27,0.008,28,1.025,29,1.311,32,0.412,33,0.994,36,0.252,39,0.039,43,2.353,45,0.002,46,0.004,47,0.002,53,4.192,60,0.846,67,1.079,68,2.291,72,1.424,75,5.322,77,3.74,79,1.992,85,4.468,87,2.55,88,2.156,89,1.328,90,2.156,91,0.335,94,1.328,95,1.121,97,2.156,98,5.218,99,1.328,100,6.052,101,0.745,104,1.912,110,2.025,112,1.328,113,3.605,172,4.189,247,4.204,252,2.409,265,0.437,313,2.842,348,2.204,350,1.466,366,1.719,371,1.288,393,3.123,394,3.233,395,1.416,396,3.772,397,2.026,400,1.328,401,1.466,402,1.251,403,1.466,410,3.732,418,1.466,544,3.188,545,2.377,546,4.219,547,4.219,548,3.74,549,3.74,550,5.241,551,5.914,552,4.219,553,4.219,554,2.377,555,6.067,556,2.682,557,2.682,558,2.682,559,4.204,560,4.219,561,2.377,562,2.682,563,2.682,564,4.623,565,2.682,566,2.682,567,2.682,568,2.682,569,2.682,570,2.682,571,2.682,572,5.241,573,2.682,574,2.682,575,2.682,576,3.74,577,2.377,578,3.073,579,2.377,580,2.176,581,1.906,582,2.377,583,2.377,584,4.219,585,3.74,586,5.241,587,2.682,588,2.682,589,1.807,590,3.233,591,3.188,592,2.682,593,4.219,594,1.906,595,2.392,596,2.682,597,2.682,598,2.377,599,2.682,600,2.377,601,2.682,602,2.682,603,2.682,604,2.682,605,2.682,606,2.377,607,2.682]],["title/injectables/CompanyDto.html",[253,0.707,555,3.222]],["body/injectables/CompanyDto.html",[0,0.139,3,0.036,4,0.036,5,0.032,8,2.446,12,1.255,15,1.274,17,0.171,18,0.814,22,0.813,27,0.008,28,1.204,29,0.883,32,0.547,33,2.028,36,0.205,39,0.036,45,0.002,46,0.003,47,0.002,53,4.427,54,3.643,57,4.606,72,1.653,91,0.311,101,0.692,172,3.569,253,0.621,254,0.769,265,1.486,268,3.218,269,5.135,284,1.883,285,4.288,286,3.466,287,0.99,288,3.092,334,3.529,348,1.439,350,1.33,434,2.209,435,2.209,437,2.444,475,4.677,476,4.033,477,4.677,479,3.755,480,4.033,481,3.533,483,3.533,484,4.033,485,3.348,490,5.031,491,5.031,492,5.863,496,6.391,504,4.606,505,6.645,506,5.031,507,4.702,508,4.406,510,5.031,514,3.231,515,5.031,522,3.231,529,5.031,530,4.606,531,4.606,532,5.031,533,4.406,535,5.031,536,4.606,540,3.008,541,3.008,542,3.529,543,3.008,555,2.83,559,2.83,608,2.209,609,3.981,610,3.981,611,3.981,612,3.981,613,4.971,614,2.493,615,5.031,616,3.981,617,2.493,618,2.493,619,2.493,620,2.493,621,2.493,622,2.493,623,2.493,624,3.981,625,3.981,626,3.981,627,2.493,628,2.493,629,2.493,630,2.209,631,2.493,632,2.493,633,2.493,634,2.493,635,3.231,636,2.493,637,2.493,638,3.008,639,2.493,640,3.529,641,3.008,642,2.493,643,4.406,644,2.493]],["title/interfaces/CompanyInterface.html",[35,1.801,638,3.425]],["body/interfaces/CompanyInterface.html",[3,0.076,4,0.076,5,0.067,17,0.358,18,1.397,27,0.008,28,1.401,29,1.792,32,0.592,33,2.245,35,2.076,39,0.076,45,0.004,46,0.006,47,0.004,48,2.857,265,1.464,350,1.406,475,5.445,476,6.558,477,5.445,479,6.106,480,6.558,484,6.558,485,5.445,638,5.165,645,4.632]],["title/modules/CompanyModule.html",[118,1.005,132,2.783]],["body/modules/CompanyModule.html",[0,0.198,3,0.082,4,0.082,5,0.072,27,0.008,36,0.284,39,0.082,45,0.005,46,0.006,47,0.005,60,2.266,91,0.704,118,1.752,120,1.99,121,1.99,122,2.085,123,2.085,124,1.99,125,2.919,126,2.919,132,5.479,154,2.654,155,2.085,156,2.085,158,2.299,166,2.422,167,1.535,172,2.794,544,5.971,578,5.479,579,5.002,580,4.58,646,5.002,647,5.002,648,5.002,649,5.644,650,5.644,651,5.644]],["title/injectables/CompanyService.html",[253,0.707,578,2.671]],["body/injectables/CompanyService.html",[0,0.181,3,0.038,4,0.038,5,0.034,8,1.285,12,1.627,17,0.181,20,1.313,22,0.796,24,2.805,26,1.814,27,0.008,28,1.344,29,1.573,30,1.495,32,0.485,33,1.784,36,0.194,39,0.038,43,2.198,45,0.002,46,0.003,47,0.002,53,2.556,55,2.96,67,1.064,68,2.389,75,4.721,79,2.112,87,2.535,91,0.329,104,1.903,110,2.198,167,0.717,172,4.274,247,5.229,253,0.649,254,0.814,257,3.379,265,0.429,268,1.495,330,4.021,333,0.93,335,1.502,348,2.192,350,1.397,362,1.163,366,1.696,367,0.717,393,3.094,449,3.128,458,1.495,459,1.163,468,2.127,469,2.405,471,2.924,478,2.338,479,3.898,504,2.14,548,3.691,549,3.691,550,5.193,554,3.691,555,4.165,559,4.165,561,3.691,564,5.654,572,5.193,576,5.193,578,2.453,580,2.14,652,2.338,653,5.859,654,4.164,655,4.164,656,3.691,657,5.193,658,4.164,659,2.638,660,2.638,661,5.159,662,2.638,663,3.146,664,2.638,665,4.164,666,2.638,667,2.638,668,2.638,669,4.164,670,2.638,671,4.164,672,2.638,673,3.691,674,4.164,675,2.638,676,4.164,677,2.638,678,1.993,679,1.993,680,2.638,681,5.159,682,2.638,683,1.693,684,2.638,685,2.638,686,2.338,687,2.638,688,2.638,689,2.638,690,2.638,691,2.638,692,2.638,693,2.638,694,4.164,695,2.338,696,2.338,697,2.638,698,2.638,699,2.638]],["title/injectables/EntityTypeInterceptor.html",[253,0.707,581,3.222]],["body/injectables/EntityTypeInterceptor.html",[0,0.174,3,0.073,4,0.073,5,0.064,15,2.545,17,0.341,22,0.511,26,1.273,27,0.008,28,0.863,29,1.104,32,0.319,36,0.273,39,0.073,41,5.638,43,2.282,45,0.004,46,0.006,47,0.004,53,4.066,67,1.693,79,1.273,87,2.282,91,0.621,104,1.946,177,2.698,253,1.033,254,1.537,363,2.257,527,3.763,581,4.708,683,3.196,700,5.87,701,4.414,702,6.623,703,6.623,704,7.03,705,7.931,706,4.981,707,5.87,708,6.595,709,6.623,710,3.763,711,4.981,712,4.981,713,4.981,714,4.981,715,3.763,716,3.355,717,3.355,718,3.058,719,4.981,720,4.981,721,6.623,722,4.041,723,4.981,724,4.981,725,4.981,726,3.763,727,4.981]],["title/controllers/GreenScoreController.html",[9,1.369,728,3.425]],["body/controllers/GreenScoreController.html",[0,0.239,3,0.1,4,0.1,5,0.088,9,2.066,27,0.008,36,0.226,39,0.1,45,0.006,46,0.007,47,0.006,60,2.157,91,0.853,188,2.587,189,4.861,193,3.378,371,3.284,728,6.107,729,5.166,730,5.166,731,6.839]],["title/modules/GreenScoreModule.html",[118,1.005,133,3.222]],["body/modules/GreenScoreModule.html",[0,0.211,3,0.088,4,0.088,5,0.077,27,0.008,36,0.269,39,0.088,45,0.005,46,0.006,47,0.005,60,2.359,91,0.751,118,1.805,120,2.122,121,2.122,122,2.223,123,2.223,124,2.122,125,3.007,126,2.223,133,6.346,154,2.763,155,2.223,156,2.223,188,2.83,189,4.278,728,6.15,729,4.547,732,5.334,733,5.334,734,6.346,735,5.334,736,4.054,737,5.334]],["title/injectables/GreenScoreService.html",[253,0.707,734,3.222]],["body/injectables/GreenScoreService.html",[0,0.243,3,0.101,4,0.101,5,0.089,27,0.008,36,0.229,39,0.101,45,0.006,46,0.007,47,0.006,91,0.866,189,4.932,253,1.272,254,2.141,729,5.242,734,5.795,738,5.63]],["title/classes/ImgPoi.html",[0,0.159,224,3.054]],["body/classes/ImgPoi.html",[0,0.189,2,1.35,3,0.079,4,0.079,5,0.069,17,0.369,18,1.426,22,0.794,27,0.008,28,0.934,32,0.495,33,1.643,36,0.231,39,0.079,45,0.004,46,0.006,47,0.004,72,1.613,179,3.646,180,3.175,222,4.556,224,4.698,348,2.239,350,1.287,359,3.318,363,2.442,365,3.161,366,2.195,367,1.465,487,3.175,524,2.846,739,5.813,740,4.776,741,5.389,742,5.659,743,5.389,744,3.055,745,3.954,746,4.384,747,3.954,748,3.308,749,4.109,750,5.389,751,3.954,752,3.055,753,5.389,754,3.055,755,4.071]],["title/classes/ImgPoiDto.html",[0,0.159,756,3.425]],["body/classes/ImgPoiDto.html",[0,0.26,2,1.488,3,0.087,4,0.087,5,0.076,17,0.407,18,1.517,22,0.762,27,0.008,30,3.369,32,0.475,33,1.749,36,0.197,39,0.087,45,0.005,46,0.006,47,0.005,72,1.548,222,4.769,265,1.449,285,5.608,286,3.774,287,2.361,362,2.62,739,5.754,756,5.608,757,5.268,758,8.095,759,5.943,760,4.373,761,5,762,5.943,763,5.943,764,6.023]],["title/modules/ImgPoiModule.html",[118,1.005,134,3.054]],["body/modules/ImgPoiModule.html",[0,0.201,3,0.084,4,0.084,5,0.074,27,0.008,36,0.277,39,0.084,45,0.005,46,0.006,47,0.005,91,0.717,118,1.767,120,2.026,121,2.026,122,2.122,123,2.122,124,2.026,125,2.944,126,2.944,134,6.036,154,2.684,155,2.122,156,2.122,158,2.341,166,2.465,167,1.563,222,3.385,223,3.688,224,3.871,739,4.084,765,5.093,766,5.093,767,5.093,768,5.983,769,4.341,770,3.257,771,5.093,772,5.746]],["title/injectables/ImgPoiService.html",[253,0.707,768,2.909]],["body/injectables/ImgPoiService.html",[0,0.158,3,0.066,4,0.066,5,0.058,17,0.309,20,1.953,22,0.782,26,1.946,27,0.008,28,1.32,29,1.688,32,0.453,36,0.264,39,0.066,45,0.004,46,0.005,47,0.004,67,1.583,68,2.325,79,1.808,87,2.134,91,0.563,104,1.869,110,1.756,167,1.226,179,3.688,180,2.657,222,3.649,223,5.122,224,4.765,253,0.966,254,1.392,265,0.734,333,1.59,335,1.627,367,1.226,449,3.356,459,1.988,739,5.673,768,3.974,771,3.997,773,3.205,774,6.193,775,6.193,776,6.193,777,4.509,778,3.997,779,6.193,780,6.193,781,3.997,782,6.193,783,4.509,784,6.193,785,4.509,786,3.997,787,4.509,788,4.509,789,4.509,790,4.509,791,2.894,792,3.997,793,3.997]],["title/classes/JoinTagPoiEntity.html",[0,0.159,186,2.909]],["body/classes/JoinTagPoiEntity.html",[0,0.174,2,1.247,3,0.073,4,0.073,5,0.064,17,0.341,18,1.354,22,0.764,27,0.008,28,1.148,32,0.477,36,0.246,39,0.073,45,0.004,46,0.006,47,0.004,72,1.552,177,3.72,178,3.763,179,3.585,180,2.934,186,4.251,252,2.029,348,2.154,350,1.222,359,3.193,361,3.754,363,3.001,366,2.698,367,1.354,744,3.754,745,4.496,746,4.912,747,4.496,748,3.058,751,4.218,752,2.823,754,3.754,755,3.763,794,3.403,795,4.414,796,4.981,797,5.87,798,4.981,799,4.414,800,5.374,801,4.981,802,4.414]],["title/modules/JoinTagPoiModule.html",[118,1.005,135,2.909]],["body/modules/JoinTagPoiModule.html",[0,0.199,3,0.083,4,0.083,5,0.073,27,0.008,36,0.276,39,0.083,45,0.005,46,0.006,47,0.005,91,0.711,118,1.76,120,2.008,121,2.008,122,2.103,123,2.103,124,2.008,125,2.931,126,2.931,135,5.739,154,2.669,155,2.103,156,2.103,158,2.32,166,2.443,167,1.549,177,3.233,181,2.443,182,2.91,186,4.637,769,4.302,770,3.228,794,2.443,803,5.047,804,5.047,805,5.047,806,5.486,807,5.695]],["title/injectables/JoinTagPoiService.html",[253,0.707,806,2.671]],["body/injectables/JoinTagPoiService.html",[0,0.105,3,0.044,4,0.044,5,0.039,17,0.206,20,1.454,22,0.789,26,1.905,27,0.008,28,1.292,29,1.652,32,0.477,36,0.237,39,0.044,43,2.567,45,0.003,46,0.004,47,0.003,67,1.179,68,2.374,79,1.905,87,2.466,91,0.375,104,1.886,110,2.029,167,0.818,177,3.779,178,2.272,179,3.613,180,1.772,182,4.027,186,4.353,253,0.719,254,0.928,265,0.49,333,1.06,335,1.085,367,0.818,449,2.772,459,1.326,749,2.717,773,2.138,791,1.93,794,3.382,800,2.441,802,2.666,806,2.717,808,4.612,809,4.612,810,4.612,811,4.612,812,6.29,813,4.612,814,4.612,815,3.008,816,3.008,817,5.61,818,4.612,819,6.783,820,3.008,821,5.61,822,4.612,823,3.008,824,4.612,825,3.008,826,4.612,827,3.008,828,6.783,829,3.008,830,4.612,831,3.008,832,4.612,833,3.008,834,3.107,835,3.008,836,3.008,837,3.008,838,4.612,839,3.484,840,2.666,841,2.666,842,3.008,843,3.008,844,2.441,845,3.008,846,3.008,847,2.666,848,3.008,849,3.008]],["title/classes/JoinUserChallenge.html",[0,0.159,220,3.054]],["body/classes/JoinUserChallenge.html",[0,0.169,2,1.206,3,0.07,4,0.07,5,0.062,17,0.33,18,1.324,22,0.803,27,0.008,28,1.123,32,0.501,36,0.242,39,0.07,45,0.004,46,0.005,47,0.004,72,1.632,170,2.435,171,2.838,218,4.951,219,3.909,220,4.363,340,4.363,341,3.245,348,2.118,350,1.195,351,2.633,359,3.14,362,2.123,363,2.935,365,2.935,366,1.962,367,1.31,744,3.672,745,4.436,746,4.767,747,4.436,748,3.976,751,4.148,752,2.731,754,3.672,760,3.816,761,4.363,794,3.503,850,4.269,851,6.477,852,4.817,853,4.817,854,4.817,855,4.817,856,4.817,857,4.817]],["title/classes/JoinUserChallengeDto.html",[0,0.159,406,3.222]],["body/classes/JoinUserChallengeDto.html",[0,0.262,2,1.507,3,0.088,4,0.088,5,0.077,17,0.412,18,1.529,22,0.768,27,0.008,32,0.479,36,0.199,39,0.088,45,0.005,46,0.006,47,0.005,72,1.56,170,2.168,218,4.614,265,1.453,286,2.806,287,2.39,350,1.38,406,5.317,425,6.605,437,4.997,760,4.407,764,6.605,794,3.493,858,5.334,859,6.018,860,6.018]],["title/modules/JoinUserChallengeModule.html",[118,1.005,136,3.054]],["body/modules/JoinUserChallengeModule.html",[0,0.185,3,0.077,4,0.077,5,0.068,27,0.008,36,0.291,39,0.077,45,0.004,46,0.006,47,0.004,91,0.661,118,1.701,120,1.868,121,1.868,122,1.957,123,1.957,124,1.868,125,2.833,126,2.833,136,6.074,152,5.303,154,2.548,155,1.957,156,1.957,158,2.81,162,4.003,166,2.274,167,1.441,170,2.043,181,2.274,216,3.401,220,3.569,319,2.896,331,3.767,399,4.003,404,5.916,406,4.904,794,2.274,861,4.697,862,5.299,863,4.697,864,4.697,865,5.299,866,4.697,867,5.299]],["title/injectables/JoinUserChallengeService.html",[253,0.707,404,2.909]],["body/injectables/JoinUserChallengeService.html",[0,0.135,3,0.056,4,0.056,5,0.05,12,1.22,17,0.265,20,1.754,22,0.73,26,1.819,27,0.008,28,1.234,29,1.578,32,0.417,36,0.267,39,0.056,45,0.003,46,0.005,47,0.003,67,1.421,68,2.245,79,1.664,91,0.483,104,1.746,110,2.225,167,1.052,170,2.451,171,2.279,216,4.838,218,5.042,219,3.139,220,3.746,253,0.867,254,1.194,265,0.905,319,4.42,330,2.115,331,2.75,333,2.658,335,1.396,367,1.052,404,3.569,425,6.117,449,3.137,459,1.705,468,1.977,469,1.804,656,4.929,760,3.835,794,3.235,866,3.429,868,3.429,869,5.561,870,5.561,871,3.869,872,3.869,873,5.561,874,5.561,875,3.869,876,5.561,877,3.869,878,5.561,879,3.869,880,3.139,881,3.869,882,3.869,883,3.869,884,3.869,885,3.869,886,3.869,887,3.869,888,3.869,889,3.869,890,3.869,891,3.869,892,3.869,893,3.139,894,3.869,895,3.429]],["title/classes/JoinUserPoi.html",[0,0.159,230,2.909]],["body/classes/JoinUserPoi.html",[0,0.166,2,1.185,3,0.069,4,0.069,5,0.061,17,0.324,18,1.308,22,0.797,27,0.008,28,1.11,32,0.498,36,0.24,39,0.069,45,0.004,46,0.005,47,0.004,72,1.621,170,2.429,171,2.789,179,3.544,180,2.789,230,4.108,252,2.607,330,2.587,340,4.312,341,3.188,348,2.1,350,1.181,351,2.587,359,3.112,361,3.628,362,2.086,363,3.287,365,2.901,366,2.607,367,1.287,744,3.628,745,4.404,746,4.742,747,4.404,748,3.929,751,4.111,752,2.683,754,3.628,755,3.576,760,3.771,794,3.483,797,5.673,896,4.195,897,7.253,898,4.733,899,4.733,900,4.733,901,4.733]],["title/classes/JoinUserPoiDto.html",[0,0.159,902,3.678]],["body/classes/JoinUserPoiDto.html",[0,0.247,2,1.77,3,0.103,4,0.103,5,0.091,27,0.007,39,0.103,45,0.006,46,0.007,47,0.006,170,1.882,794,3.032,902,6.687,903,6.263]],["title/interfaces/JoinUserPoiInterface.html",[35,1.801,904,3.222]],["body/interfaces/JoinUserPoiInterface.html",[3,0.091,4,0.091,5,0.08,17,0.429,18,1.566,27,0.008,32,0.491,35,2.485,36,0.253,39,0.091,45,0.005,46,0.006,47,0.005,48,3.419,170,2.488,171,3.685,179,3.753,180,3.685,182,3.196,265,1.247,794,2.684,904,5.446,905,5.076]],["title/modules/JoinUserPoiModule.html",[118,1.005,137,3.054]],["body/modules/JoinUserPoiModule.html",[0,0.199,3,0.083,4,0.083,5,0.073,27,0.008,36,0.276,39,0.083,45,0.005,46,0.006,47,0.005,91,0.711,118,1.76,120,2.008,121,2.008,122,2.103,123,2.103,124,2.008,125,2.931,126,2.931,137,6.024,154,2.669,155,2.103,156,2.103,158,2.32,166,2.443,167,1.549,170,2.114,181,2.443,182,2.91,230,3.655,769,4.302,770,3.228,794,2.443,906,5.047,907,5.047,908,5.047,909,6.273,910,5.047,911,5.695]],["title/injectables/JoinUserPoiService.html",[253,0.707,909,3.054]],["body/injectables/JoinUserPoiService.html",[0,0.172,3,0.072,4,0.072,5,0.063,17,0.336,20,2.067,22,0.758,26,1.887,27,0.008,28,1.28,29,1.637,32,0.42,36,0.272,39,0.072,45,0.004,46,0.005,47,0.004,67,1.676,68,2.251,79,1.676,91,0.612,104,1.609,110,1.858,167,1.333,170,2.41,179,1.997,181,2.104,182,4.027,230,4.207,253,1.022,254,1.513,265,0.798,333,1.729,367,1.333,449,3.474,459,2.161,773,3.486,778,4.346,781,4.346,794,3.382,839,3.705,904,5.603,909,4.416,910,4.346,912,6.555,913,5.81,914,4.904,915,6.555,916,6.555,917,6.555,918,4.904,919,3.979,920,4.904,921,4.904,922,4.904]],["title/modules/JoinUserQuizzModule.html",[118,1.005,138,3.222]],["body/modules/JoinUserQuizzModule.html",[0,0.215,3,0.09,4,0.09,5,0.079,27,0.008,36,0.251,39,0.09,45,0.005,46,0.006,47,0.005,91,0.768,118,1.823,120,2.17,121,2.17,122,2.273,123,2.273,124,2.17,125,3.037,126,2.273,138,6.381,154,2.801,155,2.273,156,2.273,170,2.19,181,2.641,213,3.778,794,2.641,923,5.455,924,5.455,925,6.381,926,4.649,927,3.626]],["title/injectables/JoinUserQuizzService.html",[253,0.707,925,3.222]],["body/injectables/JoinUserQuizzService.html",[0,0.241,3,0.1,4,0.1,5,0.088,27,0.008,36,0.228,39,0.1,45,0.006,46,0.007,47,0.006,91,0.86,170,2.162,213,4.229,253,1.266,254,2.126,794,2.955,925,5.77,928,4.896]],["title/classes/JoinUserQuzz.html",[0,0.159,214,3.425]],["body/classes/JoinUserQuzz.html",[0,0.167,2,1.197,3,0.07,4,0.07,5,0.061,17,0.328,18,1.317,22,0.801,27,0.008,28,1.117,32,0.5,36,0.241,39,0.07,45,0.004,46,0.005,47,0.004,72,1.627,170,2.433,171,2.817,209,4.455,210,3.612,214,4.868,340,4.341,341,3.22,348,2.11,350,1.189,351,2.613,359,3.128,362,2.107,363,2.92,365,2.92,366,1.947,367,1.3,744,3.653,745,4.422,746,4.756,747,4.422,748,3.956,751,4.132,752,2.71,754,3.653,760,3.797,761,4.341,794,3.494,929,4.237,930,5.181,931,4.781,932,4.781,933,5.712,934,4.781,935,4.781,936,4.781,937,4.237]],["title/classes/JoinUserThemeQuizz.html",[0,0.159,232,3.054]],["body/classes/JoinUserThemeQuizz.html",[0,0.174,2,1.244,3,0.072,4,0.072,5,0.064,17,0.34,18,1.351,22,0.763,27,0.008,28,1.146,32,0.476,36,0.246,39,0.072,45,0.004,46,0.006,47,0.004,72,1.55,170,2.432,171,2.927,226,4.215,228,4.807,229,3.531,232,4.454,340,4.454,341,3.346,348,2.152,350,1.22,359,3.189,363,2.996,366,2.693,367,1.351,744,3.748,745,4.491,746,4.809,747,4.491,748,4.059,751,4.213,752,2.816,754,3.748,794,3.399,938,4.403,939,4.968,940,6.612,941,4.968,942,4.968,943,4.403]],["title/modules/JoinUserThemeQuizzModule.html",[118,1.005,139,3.054]],["body/modules/JoinUserThemeQuizzModule.html",[0,0.196,3,0.082,4,0.082,5,0.072,27,0.008,36,0.275,39,0.082,45,0.005,46,0.006,47,0.005,91,0.7,118,1.747,120,1.978,121,1.978,122,2.072,123,2.072,124,1.978,125,2.911,126,2.911,139,6.004,154,2.644,155,2.072,156,2.072,158,2.285,166,2.407,167,1.526,170,2.1,181,2.407,213,3.445,226,4.027,232,4.822,794,2.407,926,4.239,927,3.306,944,4.973,945,4.973,946,4.973,947,6.26,948,4.973,949,5.611]],["title/injectables/JoinUserThemeQuizzService.html",[253,0.707,947,3.054]],["body/injectables/JoinUserThemeQuizzService.html",[0,0.155,3,0.064,4,0.064,5,0.057,17,0.303,20,1.925,22,0.718,26,1.788,27,0.008,28,1.213,29,1.551,32,0.448,36,0.271,39,0.064,45,0.004,46,0.005,47,0.004,67,1.56,68,2.182,79,1.56,91,0.551,104,1.717,110,1.73,167,1.201,170,2.471,171,2.601,213,4.633,226,4.439,228,4.99,229,3.138,232,2.974,253,0.952,254,1.363,265,0.719,330,2.413,333,1.557,335,1.593,367,1.201,449,3.326,459,1.946,468,2.256,794,3.238,893,3.583,895,3.913,928,3.138,947,4.112,948,3.913,950,6.104,951,6.104,952,4.415,953,4.415,954,6.104,955,6.104,956,4.415,957,6.104,958,4.415,959,4.415,960,4.415,961,4.415,962,4.415]],["title/injectables/JwtStrategy.html",[253,0.707,293,3.222]],["body/injectables/JwtStrategy.html",[0,0.237,3,0.099,4,0.061,5,0.053,8,1.282,12,1.31,13,5.261,17,0.285,20,1.845,22,0.601,24,5.414,26,1.496,27,0.008,28,1.014,29,1.297,32,0.266,36,0.256,39,0.061,43,2.333,45,0.006,46,0.005,47,0.003,53,3.592,55,4.159,56,4.512,62,4.747,67,1.496,68,1.804,79,1.062,91,0.519,95,1.737,104,1.662,110,1.92,117,5.186,170,1.804,244,3.839,252,1.693,253,0.913,254,1.282,265,0.952,293,4.159,305,5.186,306,3.372,307,3.683,313,3.941,318,3.683,319,4.608,329,5.186,331,2.954,333,2.063,335,2.111,339,4.747,402,2.728,469,1.937,505,4.42,663,4.42,679,4.42,963,3.683,964,5.851,965,4.747,966,5.5,967,4.156,968,5.851,969,5.186,970,5.186,971,4.156,972,5.851,973,3.372,974,3.683,975,3.372,976,2.954,977,3.683,978,3.372,979,3.372,980,3.372,981,3.683,982,3.683,983,3.683,984,3.683,985,3.683,986,4.156,987,4.156,988,4.156]],["title/classes/KnowIt.html",[0,0.159,207,3.054]],["body/classes/KnowIt.html",[0,0.179,2,1.284,3,0.075,4,0.075,5,0.066,8,2.33,17,0.351,18,1.38,22,0.856,27,0.008,32,0.559,33,2.087,36,0.17,39,0.075,45,0.004,46,0.006,47,0.004,72,1.739,207,4.548,347,5.085,348,2.186,349,4.448,350,1.246,354,4.548,355,5.101,359,3.239,362,2.976,363,2.324,365,3.778,366,2.089,367,1.394,487,3.978,502,5.985,524,3.566,989,5.493,990,4.545,991,5.703,992,6.753,993,5.128,994,6.753,995,5.128,996,5.128,997,5.128,998,5.128,999,5.128,1000,5.128]],["title/controllers/KnowItController.html",[9,1.369,1001,3.425]],["body/controllers/KnowItController.html",[0,0.155,3,0.065,4,0.065,5,0.057,9,1.34,12,1.399,17,0.304,20,1.399,22,0.72,26,1.565,27,0.008,28,1.062,29,1.357,32,0.392,36,0.278,39,0.065,43,1.529,45,0.004,46,0.005,47,0.004,54,3.93,60,1.399,67,1.565,68,2.316,72,1.463,79,1.793,88,3.129,89,2.196,90,2.266,91,0.554,94,2.196,95,1.854,97,3.129,99,2.196,101,1.232,104,1.721,110,1.988,112,2.196,113,3.703,114,2.988,204,5.094,265,0.722,333,1.564,350,1.294,371,2.13,393,2.342,394,3.347,395,2.342,396,3.233,400,2.196,401,2.425,402,2.068,403,2.425,410,3.347,418,2.425,590,2.425,989,4.853,1001,4.626,1002,3.932,1003,5.427,1004,5.427,1005,6.702,1006,4.436,1007,6.352,1008,3.153,1009,3.599,1010,4.436,1011,3.932,1012,3.932,1013,4.436,1014,5.427,1015,3.599,1016,4.436,1017,4.724,1018,3.932,1019,4.436,1020,4.436,1021,4.436,1022,4.436,1023,4.436,1024,4.436,1025,4.436]],["title/classes/KnowItDto.html",[0,0.159,1007,3.425]],["body/classes/KnowItDto.html",[0,0.247,2,1.377,3,0.08,4,0.08,5,0.07,8,2.409,15,3.61,17,0.377,18,1.444,22,0.801,27,0.008,32,0.5,33,2.055,36,0.258,39,0.08,45,0.005,46,0.006,47,0.005,54,3.528,72,1.628,101,1.526,265,1.478,286,3.842,287,2.184,288,3.273,349,4.599,429,5.898,989,5.288,991,5.898,1007,5.337,1026,4.873,1027,5.898,1028,5.498,1029,5.498,1030,5.498,1031,5.498]],["title/interfaces/KnowItInterface.html",[35,1.801,1027,3.425]],["body/interfaces/KnowItInterface.html",[3,0.093,4,0.093,5,0.082,8,2.679,17,0.436,18,1.582,27,0.008,32,0.534,33,2.193,35,2.526,39,0.093,45,0.005,46,0.006,47,0.005,48,3.476,204,4.284,349,5.114,989,4.081,991,6.558,1027,5.847,1032,5.637]],["title/modules/KnowItModule.html",[118,1.005,140,3.222]],["body/modules/KnowItModule.html",[0,0.195,3,0.081,4,0.081,5,0.072,27,0.008,36,0.283,39,0.081,45,0.005,46,0.006,47,0.005,54,4.577,60,2.249,91,0.696,118,1.743,120,1.966,121,1.966,122,2.06,123,2.06,124,1.966,125,2.903,126,2.903,140,6.327,154,2.634,155,2.06,156,2.06,158,2.272,166,2.393,167,1.517,204,3.757,207,3.757,989,3.58,1001,5.939,1017,6.255,1018,4.944,1033,4.944,1034,4.944,1035,4.944,1036,5.578,1037,5.578,1038,4.944,1039,5.578]],["title/injectables/KnowItService.html",[253,0.707,1017,3.054]],["body/injectables/KnowItService.html",[0,0.17,3,0.071,4,0.071,5,0.062,8,1.502,17,0.333,20,2.056,22,0.807,26,1.88,27,0.008,28,1.275,29,1.631,32,0.418,36,0.26,39,0.071,45,0.004,46,0.005,47,0.004,67,1.667,68,2.362,79,1.88,91,0.607,104,1.805,110,2.085,167,1.323,204,5.519,207,4.393,253,1.017,254,1.502,265,0.792,333,1.715,348,1.409,350,1.357,367,1.323,449,3.463,459,2.145,791,3.123,989,5.258,991,3.676,1003,5.78,1004,5.78,1005,6.964,1011,5.78,1014,4.313,1017,4.393,1038,4.313,1040,4.313,1041,4.866,1042,4.866,1043,6.522,1044,6.522,1045,4.866,1046,4.866,1047,4.866,1048,4.866,1049,4.866,1050,4.866,1051,4.866]],["title/injectables/LocalStrategy.html",[253,0.707,294,3.222]],["body/injectables/LocalStrategy.html",[0,0.255,3,0.069,4,0.069,5,0.061,8,1.468,12,1.5,17,0.326,20,1.5,22,0.659,24,4.326,26,1.642,27,0.008,28,1.113,29,1.424,32,0.411,33,2.052,36,0.257,39,0.069,43,2.505,45,0.004,46,0.005,47,0.004,55,4.565,64,5.692,67,1.642,68,1.937,76,5.692,79,1.216,91,0.594,92,5.725,95,1.988,104,1.784,110,1.349,170,2.166,244,4.609,253,1.002,254,1.468,265,0.774,268,3.641,294,4.565,296,4.216,303,3.594,313,4.326,335,1.716,469,2.218,505,4.852,589,3.204,663,4.852,673,5.692,679,4.852,686,5.692,893,5.211,965,5.211,973,3.86,975,3.86,976,3.381,978,3.86,979,3.86,980,3.86,1052,4.216,1053,4.757,1054,4.757,1055,6.423,1056,4.757,1057,4.757,1058,4.757]],["title/classes/LoginDto.html",[0,0.159,82,3.425]],["body/classes/LoginDto.html",[0,0.262,2,1.507,3,0.088,4,0.088,5,0.077,17,0.412,18,1.529,22,0.768,27,0.008,32,0.479,33,2.006,36,0.247,39,0.088,45,0.005,46,0.006,47,0.005,72,1.56,82,5.652,101,1.671,241,6.605,244,4.614,265,1.453,283,6.07,286,3.488,287,2.39,288,3.233,1059,5.334,1060,4.883,1061,6.018,1062,6.018,1063,6.018]],["title/classes/PercentAndIdTag.html",[0,0.159,1064,2.909]],["body/classes/PercentAndIdTag.html",[0,0.231,2,1.653,3,0.096,4,0.096,5,0.085,17,0.452,18,1.618,22,0.812,27,0.008,32,0.507,39,0.096,45,0.005,46,0.007,47,0.005,192,4.197,350,1.622,1064,5.08,1065,5.851,1066,6.405,1067,6.602,1068,6.602]],["title/classes/PercentTypeGreenScoreAndPoi.html",[0,0.159,197,2.783]],["body/classes/PercentTypeGreenScoreAndPoi.html",[0,0.153,2,1.093,3,0.064,4,0.064,5,0.056,17,0.299,18,1.238,22,0.771,27,0.008,28,1.05,29,1.342,32,0.562,36,0.248,39,0.064,45,0.004,46,0.005,47,0.004,72,1.566,101,1.212,179,3.476,180,2.571,188,3.088,192,3.442,193,3.297,195,3.979,196,3.297,197,3.717,265,1.455,288,2.983,348,2.013,350,1.385,359,2.598,361,4.257,363,2.744,365,2.744,366,2.466,367,1.187,744,2.474,745,4.257,746,4.627,747,4.257,748,3.717,749,3.567,751,3.941,752,2.474,754,3.432,755,3.297,761,5.058,1069,4.843,1070,3.869,1071,3.297,1072,4.365,1073,4.365,1074,4.365,1075,4.365,1076,4.365,1077,3.886,1078,4.365,1079,4.365]],["title/controllers/PercentTypeGreenScoreAndPoiController.html",[9,1.369,1080,3.425]],["body/controllers/PercentTypeGreenScoreAndPoiController.html",[0,0.122,3,0.051,4,0.051,5,0.045,8,1.076,9,1.852,12,1.934,27,0.008,32,0.501,36,0.272,39,0.051,43,2.113,45,0.003,46,0.004,47,0.003,60,1.1,68,2.016,87,2.113,88,2.634,89,1.726,90,1.781,91,0.435,94,1.726,95,1.457,103,2.478,104,1.857,110,2.05,112,1.726,113,3.997,168,1.726,169,2.349,179,2.1,188,3.041,192,3.354,193,3.36,194,1.976,197,2.14,252,2.76,350,1.131,371,1.674,393,1.841,394,3.704,395,1.841,396,3.818,400,1.726,401,1.906,402,1.626,403,1.906,410,4.137,418,1.906,531,2.829,590,3.704,594,2.478,595,3.841,749,2.054,770,1.976,1069,2.14,1080,3.894,1081,3.09,1082,6.005,1083,6.776,1084,3.841,1085,4.87,1086,2.829,1087,2.634,1088,3.487,1089,3.487,1090,3.487,1091,3.487,1092,3.487,1093,3.487,1094,3.487,1095,3.487,1096,3.487,1097,3.487,1098,3.487,1099,3.487,1100,4.569,1101,3.487,1102,3.487,1103,3.487,1104,3.487,1105,3.487,1106,3.487]],["title/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.159,1085,3.054]],["body/classes/PercentTypeGreenScoreAndPoiDto.html",[0,0.241,2,1.323,3,0.077,4,0.077,5,0.068,15,3.518,17,0.362,18,1.408,22,0.786,27,0.008,32,0.571,36,0.253,39,0.077,45,0.004,46,0.006,47,0.004,72,1.598,101,1.467,188,3.184,192,3.792,193,3.518,265,1.467,287,2.099,288,3.224,350,1.592,437,4.983,749,4.513,919,4.288,1069,4.983,1077,4.916,1085,4.639,1107,4.684,1108,5.787,1109,7.661,1110,5.284,1111,5.284,1112,5.284,1113,5.284]],["title/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[35,1.801,1108,3.425]],["body/interfaces/PercentTypeGreenScoreAndPoiInterface.html",[3,0.09,4,0.09,5,0.079,17,0.423,18,1.553,27,0.008,32,0.565,35,2.452,39,0.09,45,0.005,46,0.006,47,0.005,48,3.375,188,2.875,192,4.253,193,3.176,265,1.34,350,1.709,749,5.062,905,5.01,1069,3.79,1077,5.514,1108,5.742,1114,5.472]],["title/modules/PercentTypeGreenScoreAndPoiModule.html",[118,1.005,141,2.909]],["body/modules/PercentTypeGreenScoreAndPoiModule.html",[0,0.178,3,0.074,4,0.074,5,0.065,27,0.008,32,0.547,36,0.292,39,0.074,45,0.004,46,0.006,47,0.004,60,2.114,91,0.633,118,1.665,120,1.789,121,1.789,122,1.874,123,1.874,124,1.789,125,2.774,126,2.774,141,5.586,142,3.256,149,3.256,154,2.476,155,1.874,156,1.874,158,2.066,164,4.117,166,2.177,167,1.38,188,3.292,190,4.117,191,2.876,192,3.319,193,3.339,194,2.876,195,2.365,196,3.833,197,3.115,769,3.833,770,2.876,1069,3.115,1080,5.673,1084,5.192,1086,4.117,1115,4.497,1116,4.497,1117,4.497,1118,5.074,1119,4.497,1120,5.074]],["title/injectables/PercentTypeGreenScoreAndPoiService.html",[253,0.707,1084,2.57]],["body/injectables/PercentTypeGreenScoreAndPoiService.html",[0,0.082,3,0.034,4,0.034,5,0.03,12,0.742,17,0.161,20,1.199,22,0.696,26,1.734,27,0.008,28,1.176,29,1.504,32,0.561,36,0.241,39,0.034,43,2.077,45,0.002,46,0.003,47,0.002,67,0.972,68,2.311,79,1.648,87,2.077,91,0.294,104,1.974,110,2.281,167,0.64,179,3.515,180,1.387,188,3.2,191,1.335,192,2.368,193,3.442,194,4.002,195,3.638,196,1.779,197,3.958,253,0.593,254,0.727,265,0.383,333,0.83,335,2.447,348,0.682,350,1.382,367,0.64,449,2.421,458,1.335,459,1.038,468,1.203,469,1.098,471,1.335,494,2.334,683,3.07,736,1.586,773,1.673,791,1.511,839,2.873,1069,4.334,1077,1.511,1084,2.156,1085,3.222,1086,1.91,1100,2.087,1121,3.803,1122,3.803,1123,3.803,1124,3.803,1125,3.086,1126,3.803,1127,2.354,1128,2.354,1129,4.784,1130,3.803,1131,2.354,1132,3.803,1133,3.803,1134,5.492,1135,2.354,1136,2.354,1137,3.803,1138,2.354,1139,3.803,1140,2.354,1141,3.803,1142,2.354,1143,3.803,1144,2.354,1145,2.354,1146,1.387,1147,2.087,1148,1.387,1149,2.354,1150,2.354,1151,2.354,1152,2.354,1153,3.803,1154,2.354,1155,3.803,1156,2.354,1157,2.354,1158,2.354,1159,2.354,1160,6.028,1161,2.354,1162,2.354,1163,2.354,1164,2.354,1165,2.354,1166,2.354,1167,2.354,1168,2.354,1169,2.354,1170,2.354,1171,3.803,1172,4.784,1173,2.354,1174,2.354,1175,2.354,1176,2.354,1177,3.803,1178,2.354,1179,2.354,1180,2.354,1181,2.354,1182,2.087,1183,2.354,1184,1.91,1185,2.354,1186,2.354,1187,2.354]],["title/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[253,0.707,1087,3.425]],["body/injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html",[0,0.188,3,0.078,4,0.078,5,0.069,15,2.745,17,0.368,22,0.552,26,1.374,27,0.008,28,0.932,29,1.191,30,4.378,32,0.542,36,0.255,39,0.078,43,2.399,45,0.004,46,0.006,47,0.004,67,1.78,79,1.374,87,2.399,91,0.671,104,1.319,188,3.09,193,3.414,253,1.086,254,1.658,335,1.939,595,3.946,717,3.62,718,3.299,1069,4.274,1085,4.69,1087,5.26,1188,6.17,1189,4.763,1190,6.17,1191,6.172,1192,7.24,1193,5.374,1194,6.17,1195,6.17,1196,5.374,1197,5.374,1198,5.374,1199,5.374,1200,5.374,1201,5.374]],["title/classes/Poi.html",[0,0.159,179,1.846]],["body/classes/Poi.html",[0,0.117,2,0.837,3,0.049,4,0.049,5,0.043,8,1.845,17,0.229,18,1.02,22,0.897,27,0.008,28,1.037,32,0.574,33,2.153,36,0.11,39,0.049,45,0.003,46,0.004,47,0.003,72,1.823,179,2.034,252,3.531,330,4.072,347,4.027,348,1.731,350,1.375,351,1.826,354,2.25,357,4.425,359,2.565,361,4.601,362,3.786,363,3.376,365,3.929,366,2.034,367,0.908,475,4.027,477,4.027,481,4.25,482,4.851,483,4.25,485,4.027,487,4.677,488,5.296,500,4.851,512,4.051,524,4.364,525,5.629,742,4.051,1202,2.96,1203,4.517,1204,5.299,1205,4.851,1206,4.851,1207,4.993,1208,3.34,1209,3.34,1210,3.34,1211,3.34,1212,5.299,1213,3.34,1214,3.34,1215,3.34,1216,3.34,1217,3.34,1218,3.34,1219,4.993,1220,3.34,1221,4.993,1222,3.34,1223,3.34,1224,3.34,1225,3.34]],["title/classes/PoiAndTags.html",[0,0.159,1226,3.678]],["body/classes/PoiAndTags.html",[0,0.194,2,1.385,3,0.081,4,0.081,5,0.071,17,0.379,18,1.449,20,1.744,22,0.804,26,1.413,27,0.008,28,0.959,29,1.226,32,0.501,36,0.259,39,0.081,43,2.444,45,0.005,46,0.006,47,0.005,177,2.888,178,4.177,179,3.796,181,2.372,186,5.701,187,4.901,834,6.061,1226,5.754,1227,4.901,1228,7.092,1229,7.092,1230,5.53,1231,3.93,1232,5.53,1233,5.53]],["title/controllers/PoiController.html",[9,1.369,1234,3.425]],["body/controllers/PoiController.html",[0,0.077,3,0.032,4,0.032,5,0.028,8,0.683,9,1.385,12,1.669,17,0.152,20,0.698,22,0.771,26,1.762,27,0.008,28,1.195,29,1.528,32,0.401,36,0.265,39,0.032,43,2.158,45,0.002,46,0.003,47,0.002,56,2.814,60,0.698,67,0.924,68,2.382,72,1.567,78,5.544,79,1.921,87,1.824,88,1.847,89,1.095,90,1.847,91,0.276,94,1.095,95,0.925,97,2.342,98,5.082,99,1.095,101,0.614,104,1.915,110,2.174,112,1.095,113,3.968,114,4.219,170,1.554,177,1.473,179,2.377,181,1.967,182,2.342,230,1.42,247,2.57,252,1.867,265,0.95,333,2.057,335,0.798,348,1.047,350,1.481,371,1.062,393,1.168,394,3.19,395,1.168,396,3.307,397,1.671,400,1.095,401,1.209,402,1.031,403,1.209,410,3.19,418,1.209,423,2.933,577,1.961,581,1.572,582,1.961,583,1.961,585,3.204,586,3.204,590,2.894,594,1.572,595,2.599,598,1.961,600,1.961,606,1.961,717,1.49,718,1.358,749,4.596,770,2.599,806,2.701,904,2.57,909,3.088,913,3.204,919,1.795,1084,2.049,1146,2.701,1231,1.572,1234,2.731,1235,1.961,1236,3.204,1237,3.204,1238,3.204,1239,3.204,1240,4.692,1241,3.615,1242,3.204,1243,3.615,1244,5.294,1245,5.294,1246,3.204,1247,3.615,1248,1.961,1249,5.407,1250,2.212,1251,2.212,1252,2.212,1253,1.961,1254,2.212,1255,2.212,1256,2.212,1257,2.212,1258,2.212,1259,2.212,1260,2.212,1261,2.212,1262,2.212,1263,2.212,1264,2.212,1265,2.212,1266,2.212,1267,2.212,1268,2.212,1269,2.212,1270,2.212,1271,2.212,1272,2.212,1273,2.212,1274,2.212,1275,2.212,1276,2.212,1277,2.212,1278,2.212,1279,2.212,1280,2.212,1281,2.212,1282,1.671,1283,2.212,1284,7.339,1285,2.942,1286,1.795,1287,2.212,1288,2.212,1289,2.212,1290,2.212,1291,2.212,1292,2.212,1293,2.212,1294,1.961,1295,2.212,1296,2.212,1297,2.212,1298,2.212,1299,2.212,1300,2.212,1301,2.212,1302,2.212,1303,2.212,1304,2.212,1305,2.212,1306,2.212,1307,2.212,1308,2.212,1309,2.212,1310,2.212,1311,2.212,1312,2.212,1313,2.212,1314,2.212,1315,2.212]],["title/injectables/PoiDto.html",[253,0.707,1249,3.054]],["body/injectables/PoiDto.html",[0,0.178,3,0.038,4,0.038,5,0.033,8,2.704,12,1.295,15,1.324,17,0.178,18,0.839,22,0.845,27,0.008,28,1.096,30,1.469,32,0.573,33,2.064,36,0.249,39,0.038,45,0.002,46,0.003,47,0.002,52,3.639,53,2.52,72,1.716,91,0.323,101,0.719,179,3.529,188,1.553,193,1.083,195,2.378,222,1.526,253,0.64,254,0.8,265,1.51,269,4.26,284,1.957,285,5.827,286,3.409,287,1.029,288,2.672,348,1.831,350,1.301,362,1.142,363,1.86,437,2.52,475,4.748,477,4.748,481,3.625,483,3.625,485,4.26,486,3.331,494,2.52,507,2.918,514,4.707,522,3.331,559,2.918,630,5.142,635,3.331,640,3.639,643,6.673,756,1.957,834,3.908,1064,4.058,1203,3.852,1204,4.52,1205,5.131,1236,3.639,1237,3.639,1249,2.766,1316,2.296,1317,5.099,1318,5.099,1319,2.591,1320,2.591,1321,4.106,1322,5.099,1323,2.591,1324,2.591,1325,2.591,1326,2.591,1327,2.591,1328,2.591,1329,2.591,1330,2.591,1331,2.591,1332,2.591,1333,2.591,1334,2.591,1335,2.591,1336,2.591,1337,4.106,1338,6.324,1339,2.591,1340,2.591,1341,2.591,1342,2.591,1343,2.591,1344,2.591,1345,3.102,1346,2.591,1347,6.324,1348,2.918,1349,3.639,1350,2.591,1351,2.591,1352,2.102,1353,2.296,1354,2.591,1355,1.663,1356,2.591,1357,2.591,1358,2.591]],["title/injectables/PoiGeoCalcService.html",[253,0.707,1285,2.909]],["body/injectables/PoiGeoCalcService.html",[0,0.119,3,0.05,4,0.05,5,0.044,17,0.233,20,1.597,22,0.688,26,1.712,27,0.008,28,1.161,29,1.485,32,0.458,36,0.264,39,0.05,45,0.003,46,0.004,47,0.003,67,1.295,68,1.907,79,1.546,91,0.425,104,1.243,110,1.436,170,1.611,172,3.952,173,2.763,177,2.063,179,2.063,181,1.461,182,1.74,188,1.916,192,1.686,193,2.117,194,1.931,222,2.006,223,2.186,253,0.79,254,1.051,265,1.165,333,2.524,335,3.139,350,1.532,518,3.019,578,4.421,749,2.006,768,4.987,770,3.797,806,4.578,1084,4.405,1146,4.578,1231,2.421,1242,4.49,1285,3.251,1294,3.019,1359,3.019,1360,5.066,1361,5.066,1362,3.406,1363,3.406,1364,5.066,1365,7.772,1366,7.504,1367,3.406,1368,3.406,1369,3.406,1370,5.066,1371,3.406,1372,2.763,1373,6.049,1374,3.406,1375,5.066,1376,3.406,1377,3.406,1378,3.406,1379,3.406,1380,6.698,1381,6.698,1382,3.406,1383,3.406,1384,3.406,1385,5.066,1386,5.066,1387,6.346,1388,3.406,1389,3.406,1390,5.066,1391,5.066,1392,3.406,1393,3.406,1394,3.406,1395,3.406,1396,3.406,1397,3.406,1398,3.406,1399,5.066,1400,3.406,1401,3.406]],["title/interfaces/PoiInterface.html",[35,1.801,1345,3.425]],["body/interfaces/PoiInterface.html",[3,0.07,4,0.07,5,0.061,8,2.41,17,0.328,18,1.319,27,0.008,28,1.354,29,1.431,32,0.594,33,2.249,35,1.904,36,0.159,39,0.07,45,0.004,46,0.005,47,0.004,48,2.62,195,3.641,265,1.478,350,1.347,475,5.261,477,5.261,481,5.551,482,6.337,483,5.551,485,5.261,1064,5.231,1203,5.9,1205,6.337,1345,4.877,1402,4.248]],["title/modules/PoiModule.html",[118,1.005,142,2.909]],["body/modules/PoiModule.html",[0,0.139,3,0.058,4,0.058,5,0.051,27,0.008,32,0.424,36,0.296,39,0.058,45,0.003,46,0.005,47,0.003,60,1.79,91,0.497,118,1.466,120,1.404,121,1.404,122,1.471,123,1.471,124,1.404,125,2.443,126,2.443,132,4.865,134,5.339,135,5.086,137,5.339,141,5.086,142,5.988,147,5.086,149,5.086,150,5.086,154,2.097,155,1.471,156,1.471,158,2.312,165,3.008,166,1.708,167,1.083,170,1.512,174,3.231,175,3.231,177,2.312,179,1.622,181,2.436,182,2.9,183,5.851,188,2.728,190,3.231,191,2.257,192,1.971,193,2.372,194,2.257,222,2.346,223,2.555,770,2.257,1119,3.529,1146,5.182,1231,2.83,1234,4.998,1285,5.086,1286,3.231,1403,3.529,1404,3.982,1405,3.529,1406,3.529,1407,3.982,1408,3.982]],["title/injectables/PoiService.html",[253,0.707,1146,2.671]],["body/injectables/PoiService.html",[0,0.06,3,0.025,4,0.025,5,0.022,12,0.543,17,0.118,20,0.924,22,0.758,26,1.654,27,0.008,28,1.162,29,1.435,32,0.464,33,0.902,36,0.252,39,0.025,43,2.138,45,0.001,46,0.002,47,0.001,67,0.749,68,2.359,79,1.851,87,2.441,91,0.215,104,1.978,110,2.55,167,0.468,170,1.02,177,2.248,179,3.221,181,0.738,182,0.879,188,1.918,191,0.976,192,1.895,193,1.6,194,0.976,195,1.367,197,1.056,198,1.525,222,1.727,223,1.104,253,0.457,254,0.531,265,0.28,333,2.187,335,2.997,347,1.159,348,0.498,350,1.307,367,0.468,449,1.993,458,0.976,459,0.759,468,0.879,469,0.802,471,0.976,657,4.008,695,2.598,696,2.598,716,1.159,718,1.056,726,1.3,736,1.159,749,3.813,768,3.982,770,2.171,786,2.598,792,1.525,793,1.525,800,1.396,806,3.655,834,3.417,1064,3.255,1082,1.525,1084,3.517,1146,1.727,1148,3.655,1231,1.223,1238,2.598,1239,2.598,1240,4.008,1246,2.598,1248,2.598,1249,1.975,1253,2.598,1285,1.104,1286,1.396,1352,1.396,1353,1.525,1409,1.525,1410,4.522,1411,2.932,1412,2.932,1413,2.932,1414,2.932,1415,4.522,1416,2.932,1417,4.522,1418,1.721,1419,6.205,1420,3.809,1421,3.809,1422,1.721,1423,3.829,1424,1.721,1425,1.721,1426,2.932,1427,1.721,1428,1.721,1429,2.932,1430,3.829,1431,1.721,1432,1.721,1433,2.932,1434,1.721,1435,2.932,1436,1.721,1437,1.721,1438,2.932,1439,1.721,1440,1.721,1441,1.721,1442,2.932,1443,1.721,1444,1.525,1445,1.525,1446,1.3,1447,1.721,1448,1.525,1449,1.721,1450,1.721,1451,1.721,1452,1.721,1453,1.721,1454,1.721,1455,1.721,1456,1.721,1457,1.721,1458,3.829,1459,1.721,1460,1.721,1461,1.721,1462,1.721,1463,1.721,1464,1.721,1465,1.721,1466,1.721,1467,1.721,1468,1.721,1469,1.721,1470,1.721,1471,1.721,1472,1.721,1473,1.721,1474,1.721,1475,1.721,1476,2.932,1477,1.721,1478,1.721,1479,2.932,1480,4.522,1481,4.522,1482,1.721,1483,1.721,1484,3.829,1485,2.932,1486,3.829,1487,1.721,1488,1.721,1489,3.829,1490,3.829,1491,2.932,1492,4.522,1493,2.932,1494,2.932,1495,4.522,1496,2.932,1497,2.932,1498,2.932,1499,2.932,1500,2.932,1501,1.721,1502,2.932,1503,1.721,1504,1.721,1505,1.721,1506,2.932,1507,1.721,1508,1.721,1509,1.721,1510,2.932,1511,1.721,1512,1.721,1513,1.721,1514,1.721,1515,1.721,1516,1.721,1517,1.721,1518,1.721,1519,1.721,1520,1.721,1521,1.721,1522,1.721,1523,1.721,1524,1.721,1525,1.721,1526,1.721,1527,1.721,1528,1.721,1529,1.721,1530,1.721,1531,1.721,1532,1.721,1533,1.721,1534,1.721,1535,1.721]],["title/injectables/PoiTransformationPipe.html",[253,0.707,1282,3.425]],["body/injectables/PoiTransformationPipe.html",[0,0.179,3,0.075,4,0.075,5,0.066,12,1.613,15,2.613,17,0.35,22,0.525,26,1.307,27,0.008,28,0.887,29,1.134,30,3.821,32,0.328,36,0.249,39,0.075,45,0.004,46,0.006,47,0.004,67,1.723,68,2.008,79,1.307,87,2.323,91,0.638,104,1.85,177,2.083,192,2.532,193,2.137,253,1.051,254,1.578,335,1.845,350,0.944,469,2.384,595,3.821,683,3.282,717,3.445,718,3.14,880,4.15,1190,5.974,1191,5.696,1192,7.103,1194,5.974,1195,5.974,1249,4.54,1282,5.092,1536,4.533,1537,5.114,1538,7.54,1539,5.114,1540,5.114,1541,6.741,1542,5.114,1543,5.114,1544,5.114,1545,5.114,1546,5.114,1547,5.114,1548,5.114,1549,5.114,1550,5.114,1551,5.114,1552,5.114]],["title/classes/QuestionQuizz.html",[0,0.159,211,3.054]],["body/classes/QuestionQuizz.html",[0,0.178,2,1.271,3,0.074,4,0.074,5,0.065,17,0.348,18,1.37,22,0.82,27,0.008,28,0.88,32,0.512,33,1.58,36,0.222,39,0.074,45,0.004,46,0.006,47,0.004,72,1.666,209,4.514,210,3.833,211,4.516,348,2.174,350,1.237,351,2.773,359,3.222,361,3.801,362,2.236,363,2.299,365,3.403,366,2.066,367,1.38,487,2.989,519,5.44,524,2.679,744,2.876,745,3.801,746,4.529,747,3.801,751,3.801,752,2.876,754,2.876,760,3.95,761,5.059,930,5.338,933,5.943,937,4.497,1553,5.596,1554,4.497,1555,5.338,1556,5.074,1557,5.074,1558,5.074,1559,4.497,1560,5.074,1561,5.074]],["title/controllers/QuestionQuizzController.html",[9,1.369,1562,3.425]],["body/controllers/QuestionQuizzController.html",[0,0.234,3,0.098,4,0.098,5,0.086,9,2.022,27,0.008,36,0.264,39,0.098,45,0.006,46,0.007,47,0.006,60,2.111,91,0.835,99,3.951,101,1.859,201,3.795,202,3.944,209,4.078,371,3.214,1553,4.51,1562,6.03,1563,5.432,1564,6.695]],["title/classes/QuestionQuizzDto.html",[0,0.159,1565,3.222]],["body/classes/QuestionQuizzDto.html",[0,0.26,2,1.493,3,0.087,4,0.087,5,0.076,17,0.408,18,1.52,22,0.763,27,0.008,32,0.476,33,1.752,36,0.246,39,0.087,45,0.005,46,0.006,47,0.005,72,1.551,101,1.655,265,1.45,286,3.468,287,2.368,288,3.22,760,4.382,764,6.035,930,5.762,1060,4.838,1553,5.46,1555,5.762,1565,5.286,1566,5.284,1567,5.962,1568,5.962,1569,5.962]],["title/modules/QuestionQuizzModule.html",[118,1.005,143,2.909]],["body/modules/QuestionQuizzModule.html",[0,0.195,3,0.081,4,0.081,5,0.072,27,0.008,36,0.283,39,0.081,45,0.005,46,0.006,47,0.005,60,2.249,91,0.696,118,1.743,120,1.966,121,1.966,122,2.06,123,2.06,124,1.966,125,2.903,126,2.903,143,5.713,154,2.634,155,2.06,156,2.06,158,2.272,166,2.393,167,1.517,201,4.042,202,3.286,211,3.757,926,4.214,927,3.286,1553,3.757,1562,5.939,1570,4.944,1571,4.944,1572,4.944,1573,5.7,1574,4.526,1575,4.944,1576,5.578]],["title/injectables/QuestionQuizzService.html",[253,0.707,1573,2.783]],["body/injectables/QuestionQuizzService.html",[0,0.153,3,0.064,4,0.064,5,0.056,12,1.38,17,0.3,20,1.913,22,0.772,26,1.922,27,0.008,28,1.303,29,1.666,32,0.446,36,0.261,39,0.064,45,0.004,46,0.005,47,0.004,67,1.55,68,2.309,79,1.78,87,2.09,91,0.546,104,1.708,110,1.973,167,1.19,202,4.651,209,4.28,210,3.305,211,2.947,253,0.946,254,1.35,265,0.712,333,1.542,348,1.756,350,1.507,367,1.19,449,3.313,459,1.928,468,2.235,469,2.04,678,3.305,791,2.808,928,3.11,930,3.11,1553,5.318,1555,3.11,1565,3.11,1573,3.723,1575,3.877,1577,6.065,1578,5.375,1579,6.065,1580,4.375,1581,4.375,1582,6.065,1583,6.065,1584,4.375,1585,6.065,1586,6.662,1587,4.375,1588,5.375,1589,6.065,1590,4.375,1591,4.375,1592,4.375,1593,4.375,1594,4.375,1595,4.375,1596,4.375,1597,4.375,1598,4.375,1599,3.877,1600,3.877]],["title/classes/Quizz.html",[0,0.159,209,2.316]],["body/classes/Quizz.html",[0,0.161,2,1.154,3,0.067,4,0.067,5,0.059,17,0.316,18,1.285,22,0.852,27,0.008,28,0.799,32,0.554,33,1.955,36,0.208,39,0.067,45,0.004,46,0.005,47,0.004,72,1.731,201,4.055,209,3.211,226,2.354,228,4.726,229,3.275,252,2.56,330,2.518,346,5.804,347,4.818,348,2.071,349,4.214,350,1.418,351,2.518,354,4.234,355,5.805,359,3.069,361,4.355,362,3.153,363,2.848,365,3.644,366,1.877,367,1.253,487,2.714,494,3.858,519,5.1,524,2.433,744,2.612,745,3.563,746,4.355,747,3.563,751,3.563,752,2.612,754,2.612,761,3.104,943,4.084,1559,4.084,1601,4.084,1602,4.608,1603,4.608,1604,4.608,1605,4.608,1606,4.608,1607,4.748,1608,4.608,1609,4.608]],["title/classes/QuizzAndQuestionDto.html",[0,0.159,1610,3.054]],["body/classes/QuizzAndQuestionDto.html",[0,0.275,2,1.397,3,0.081,4,0.081,5,0.072,17,0.382,18,1.458,22,0.732,27,0.008,32,0.548,36,0.283,39,0.081,45,0.005,46,0.006,47,0.005,72,1.487,101,1.549,201,4.696,265,1.425,287,2.216,288,3.122,1348,5.587,1355,3.58,1565,5.889,1610,4.804,1611,4.944,1612,5.939,1613,5.786,1614,5.578,1615,6.086,1616,5.578,1617,5.939,1618,5.578]],["title/controllers/QuizzController.html",[9,1.369,1619,3.425]],["body/controllers/QuizzController.html",[0,0.174,3,0.073,4,0.073,5,0.064,9,1.504,17,0.341,20,1.571,22,0.68,26,1.273,27,0.008,28,0.863,29,1.104,32,0.319,36,0.287,39,0.073,45,0.004,46,0.006,47,0.004,60,1.571,67,1.693,68,2.261,72,1.382,79,1.693,88,3.384,89,2.465,90,2.545,91,0.621,94,2.465,95,2.082,97,3.384,99,2.465,101,1.383,104,1.625,110,1.878,112,2.465,113,3.497,114,3.355,209,2.545,265,0.811,333,1.756,371,2.391,395,2.63,396,3.497,400,2.465,401,2.722,402,2.322,403,2.722,410,2.722,590,2.722,927,2.934,1008,3.54,1009,4.041,1015,4.041,1610,5.562,1619,5.004,1620,4.414,1621,5.87,1622,7.931,1623,4.981,1624,4.981,1625,6.623,1626,4.981,1627,4.776,1628,4.981,1629,4.981,1630,4.981,1631,4.981,1632,4.981]],["title/classes/QuizzDto.html",[0,0.159,1615,3.222]],["body/classes/QuizzDto.html",[0,0.25,2,1.397,3,0.081,4,0.081,5,0.072,17,0.382,18,1.458,22,0.807,27,0.008,29,1.581,30,3.162,32,0.503,33,1.952,36,0.236,39,0.081,45,0.005,46,0.006,47,0.005,72,1.64,101,1.549,201,4.456,265,1.482,286,3.665,287,2.216,288,3.291,346,6.378,349,4.631,350,1.316,362,2.459,429,5.387,431,4.214,437,4.378,494,4.378,1615,5.069,1633,4.944,1634,5.578,1635,5.578,1636,5.578]],["title/modules/QuizzModule.html",[118,1.005,144,3.054]],["body/modules/QuizzModule.html",[0,0.184,3,0.077,4,0.077,5,0.068,27,0.008,36,0.291,39,0.077,45,0.004,46,0.006,47,0.004,60,2.168,91,0.658,118,1.696,120,1.858,121,1.858,122,1.946,123,1.946,124,1.858,125,2.826,126,2.826,143,5.535,144,6.067,154,2.539,155,1.946,156,1.946,158,2.8,166,2.261,167,1.433,201,3.897,202,4.05,203,4.276,209,2.692,927,4.05,1573,3.235,1574,4.276,1619,5.78,1627,5.911,1637,4.671,1638,5.27,1639,4.671,1640,4.671,1641,5.27,1642,4.671,1643,5.27]],["title/injectables/QuizzService.html",[253,0.707,1627,2.909]],["body/injectables/QuizzService.html",[0,0.143,3,0.06,4,0.06,5,0.052,17,0.28,20,1.823,22,0.749,26,1.715,27,0.008,28,1.163,29,1.487,32,0.37,36,0.264,39,0.06,45,0.003,46,0.005,47,0.003,67,1.477,68,2.274,79,1.715,91,0.51,104,1.961,110,2.329,167,1.111,201,4.135,202,2.406,209,4.288,226,3.427,228,4.207,229,2.903,253,0.901,254,1.26,265,0.941,333,2.038,335,2.883,348,1.673,367,1.111,449,3.215,459,1.8,791,3.709,927,2.406,1555,2.903,1573,5.044,1612,3.086,1615,4.108,1621,5.123,1627,3.709,1642,3.62,1644,3.62,1645,5.78,1646,7.294,1647,4.084,1648,4.084,1649,5.78,1650,5.78,1651,4.084,1652,5.78,1653,4.084,1654,4.084,1655,4.084,1656,4.084,1657,3.62,1658,4.084,1659,4.084,1660,5.123,1661,5.78,1662,5.123,1663,7.294,1664,5.78,1665,5.78]],["title/classes/Role.html",[0,0.159,168,2.244]],["body/classes/Role.html",[0,0.216,2,1.546,3,0.09,4,0.09,5,0.079,17,0.423,18,1.553,22,0.78,27,0.008,32,0.487,33,1.791,36,0.204,39,0.09,45,0.005,46,0.006,47,0.005,72,1.585,168,4.367,348,2.384,350,1.402,359,3.533,365,3.444,366,3.096,367,1.679,487,3.637,524,3.26,1666,5.472,1667,6.174,1668,7.601,1669,6.174]],["title/guards/RoleGuard.html",[400,2.244,1670,3.678]],["body/guards/RoleGuard.html",[0,0.173,3,0.072,4,0.072,5,0.064,8,1.529,15,2.531,17,0.339,20,1.562,22,0.677,26,1.687,27,0.008,28,1.144,29,1.463,32,0.423,36,0.245,39,0.072,43,2.274,45,0.004,46,0.005,47,0.004,56,3.042,67,1.687,79,1.267,87,2.274,91,0.618,104,1.62,168,3.267,170,2.108,252,2.018,253,1.029,265,0.806,313,4.446,335,2.855,400,3.267,402,3.077,589,3.338,704,7.015,707,5.85,708,6.578,710,3.743,760,3.889,1671,4.955,1672,4.391,1673,7.915,1674,4.955,1675,8.654,1676,4.955,1677,6.601,1678,4.955,1679,4.02,1680,4.955,1681,4.955,1682,4.955,1683,4.955,1684,6.601,1685,4.955,1686,4.955,1687,4.955]],["title/modules/RoleModule.html",[118,1.005,145,2.909]],["body/modules/RoleModule.html",[0,0.203,3,0.085,4,0.085,5,0.074,27,0.008,36,0.278,39,0.085,45,0.005,46,0.006,47,0.005,91,0.724,118,1.774,120,2.044,121,2.044,122,2.142,123,2.142,124,2.044,125,2.956,126,2.956,145,5.763,154,2.699,155,2.142,156,2.142,158,2.362,166,2.488,167,1.577,168,2.87,966,5.991,1688,5.139,1689,5.139,1690,5.139,1691,5.799,1692,5.799,1693,5.139,1694,5.799]],["title/injectables/RoleService.html",[253,0.707,966,2.909]],["body/injectables/RoleService.html",[0,0.147,3,0.061,4,0.061,5,0.054,8,1.294,12,1.322,17,0.287,20,1.856,22,0.757,26,1.886,27,0.008,28,1.279,29,1.636,32,0.436,33,1.603,36,0.244,39,0.061,43,2.543,45,0.003,46,0.005,47,0.003,67,1.505,68,2.287,79,1.739,87,2.543,91,0.523,104,1.811,110,1.669,167,1.14,168,3.653,253,0.918,254,1.294,257,4.777,265,0.682,333,1.478,348,1.704,350,1.361,367,1.14,402,2.745,449,3.426,458,2.376,459,1.848,468,2.142,469,1.955,471,2.376,847,3.715,966,3.778,1693,3.715,1695,3.715,1696,5.887,1697,5.887,1698,5.887,1699,4.192,1700,4.192,1701,6.804,1702,5.887,1703,4.192,1704,7.379,1705,5.887,1706,4.192,1707,7.379,1708,5.887,1709,4.192,1710,4.192,1711,4.192,1712,4.192,1713,4.192,1714,4.192,1715,4.192,1716,4.192,1717,5.887,1718,4.192,1719,4.192]],["title/controllers/StatsController.html",[9,1.369,1720,3.425]],["body/controllers/StatsController.html",[0,0.207,3,0.086,4,0.086,5,0.076,9,1.784,17,0.405,22,0.606,27,0.008,36,0.28,39,0.086,45,0.005,46,0.006,47,0.005,60,1.863,67,1.89,68,2.15,72,1.232,79,1.51,89,2.924,91,0.737,94,2.924,95,2.468,97,3.778,99,2.924,101,1.64,104,1.449,110,1.674,112,2.924,265,0.961,371,2.836,589,3.979,1720,5.586,1721,5.235,1722,5.907,1723,7.497,1724,5.907,1725,5.437,1726,5.235,1727,5.907,1728,5.907,1729,5.907]],["title/modules/StatsModule.html",[118,1.005,146,3.222]],["body/modules/StatsModule.html",[0,0.164,3,0.069,4,0.069,5,0.06,27,0.008,32,0.408,36,0.291,39,0.069,45,0.004,46,0.005,47,0.004,60,2.008,91,0.586,118,1.602,120,1.656,121,1.656,122,1.735,123,1.735,124,1.656,125,2.669,126,1.735,132,5.125,135,5.357,141,5.357,142,5.357,146,6.619,147,5.357,150,5.357,154,2.352,155,1.735,156,1.735,158,2.594,164,3.812,165,3.549,174,3.812,175,3.812,177,2.594,181,2.016,182,2.4,183,5.168,188,2.409,192,2.326,193,2.662,194,2.663,1720,5.458,1725,5.623,1726,4.164,1730,4.164,1731,4.698,1732,4.164,1733,4.698,1734,4.698]],["title/injectables/StatsService.html",[253,0.707,1725,3.054]],["body/injectables/StatsService.html",[0,0.13,3,0.054,4,0.054,5,0.048,17,0.255,20,1.706,22,0.654,26,0.952,27,0.008,28,0.646,29,0.826,32,0.476,36,0.264,39,0.054,40,2.814,41,2.648,45,0.003,46,0.005,47,0.003,67,1.383,68,2.064,79,1.383,87,1.864,91,0.465,104,1.716,108,3.023,110,2.404,172,1.844,177,2.204,179,1.517,181,1.598,182,1.903,188,2.047,192,1.844,193,2.261,194,2.112,253,0.844,254,1.15,265,1.261,333,2.943,335,2.884,350,0.687,486,5.674,488,2.648,494,3.322,525,2.814,578,4.71,770,3.067,806,4.565,1084,4.532,1146,4.71,1147,3.302,1182,3.302,1184,4.39,1203,2.814,1372,3.023,1420,4.908,1421,4.908,1444,3.302,1445,3.302,1723,6.198,1725,3.645,1735,3.302,1736,6.993,1737,3.725,1738,3.725,1739,3.725,1740,3.725,1741,5.411,1742,3.725,1743,3.302,1744,3.725,1745,3.725,1746,5.411,1747,3.725,1748,5.411,1749,3.725,1750,3.302,1751,5.411,1752,3.725,1753,3.725,1754,5.411,1755,5.411,1756,3.725,1757,3.725,1758,3.725,1759,3.725,1760,3.725,1761,5.411,1762,3.725,1763,3.725,1764,3.725]],["title/classes/SubmitDto.html",[0,0.159,1765,3.425]],["body/classes/SubmitDto.html",[0,0.261,2,1.498,3,0.087,4,0.087,5,0.077,17,0.41,18,1.523,22,0.765,27,0.008,32,0.477,36,0.246,39,0.087,45,0.005,46,0.006,47,0.005,72,1.554,101,1.66,265,1.451,287,2.375,288,3.224,350,1.568,431,5.63,437,4.983,1586,7.195,1588,7.195,1765,5.63,1766,4.782,1767,5.301,1768,5.981,1769,5.981]],["title/classes/Tag.html",[0,0.159,177,1.846]],["body/classes/Tag.html",[0,0.201,2,1.435,3,0.084,4,0.084,5,0.073,17,0.393,18,1.482,22,0.817,27,0.008,32,0.51,33,1.971,36,0.24,39,0.084,45,0.005,46,0.006,47,0.005,72,1.66,101,1.591,177,3.516,288,3.161,348,2.304,350,1.338,351,3.131,359,3.112,362,2.525,365,3.607,366,2.954,367,1.558,524,3.025,1071,4.328,1770,5.078,1771,7.959,1772,7.253,1773,5.729,1774,5.729,1775,4.649,1776,6.429,1777,5.729]],["title/controllers/TagsController.html",[9,1.369,1778,3.425]],["body/controllers/TagsController.html",[0,0.139,3,0.058,4,0.058,5,0.051,9,1.198,12,1.785,17,0.272,22,0.739,26,1.687,27,0.008,28,1.144,29,1.463,32,0.423,36,0.28,39,0.058,43,1.366,45,0.003,46,0.005,47,0.003,60,1.25,67,1.447,68,2.341,72,1.501,79,1.84,87,2.48,88,2.892,89,1.963,90,2.026,91,0.495,94,1.963,95,1.657,97,2.892,99,1.963,101,1.101,104,1.766,110,2.158,112,1.963,113,3.485,177,2.932,252,2.305,265,0.645,335,1.431,350,1.46,371,1.904,385,2.819,393,2.094,394,3.608,395,2.094,396,4.179,400,1.963,401,2.167,402,1.849,403,2.167,410,3.608,418,2.167,589,2.671,590,3.608,591,2.996,594,2.819,595,2.248,716,2.671,718,2.434,726,2.996,834,2.671,844,5.84,1008,2.819,1420,4.052,1778,4.276,1779,3.515,1780,5.016,1781,5.016,1782,6.379,1783,5.016,1784,3.515,1785,5.75,1786,3.965,1787,5.016,1788,3.515,1789,3.515,1790,3.965,1791,3.965,1792,3.515,1793,3.515,1794,3.965,1795,3.515,1796,3.218,1797,3.965,1798,3.965,1799,3.965,1800,3.965,1801,3.965,1802,5.66,1803,3.965,1804,3.965,1805,3.965]],["title/classes/TagsDto.html",[0,0.159,1785,3.425]],["body/classes/TagsDto.html",[0,0.259,2,1.484,3,0.086,4,0.086,5,0.076,8,1.828,15,3.785,17,0.406,18,1.514,22,0.608,27,0.008,28,1.284,32,0.379,33,1.745,36,0.267,39,0.086,45,0.005,46,0.006,47,0.005,72,1.236,101,1.645,177,3.551,265,1.316,269,3.991,286,3.454,287,2.353,288,2.943,507,5.266,543,4.476,1785,5.597,1806,5.251,1807,6.106,1808,7.409,1809,7.409,1810,5.251,1811,5.925,1812,5.925]],["title/interfaces/TagsInterface.html",[35,1.801,1807,3.425]],["body/interfaces/TagsInterface.html",[3,0.099,4,0.099,5,0.087,17,0.465,18,1.645,27,0.008,32,0.435,33,2.022,35,2.697,39,0.099,45,0.006,46,0.007,47,0.006,48,3.711,177,3.614,265,1.105,1807,6.081,1813,6.018]],["title/modules/TagsModule.html",[118,1.005,147,2.909]],["body/modules/TagsModule.html",[0,0.198,3,0.082,4,0.082,5,0.072,27,0.008,36,0.284,39,0.082,45,0.005,46,0.006,47,0.005,60,2.266,91,0.704,118,1.752,120,1.99,121,1.99,122,2.085,123,2.085,124,1.99,125,2.919,126,2.919,147,5.728,154,2.654,155,2.085,156,2.085,158,2.299,166,2.422,167,1.535,177,2.299,1420,5.71,1778,5.971,1795,5.002,1796,4.58,1814,5.002,1815,5.002,1816,5.002,1817,5.644,1818,5.644,1819,5.644]],["title/injectables/TagsService.html",[253,0.707,1420,2.783]],["body/injectables/TagsService.html",[0,0.137,3,0.057,4,0.057,5,0.05,12,1.235,17,0.268,20,1.769,22,0.833,26,1.936,27,0.008,28,1.313,29,1.679,32,0.458,36,0.251,39,0.057,45,0.003,46,0.005,47,0.003,67,1.434,68,2.427,79,2.015,87,2.466,91,0.489,104,1.992,110,2.234,167,1.065,177,2.285,253,0.875,254,1.209,265,0.637,333,1.381,335,2.024,348,1.134,350,1.559,367,1.065,449,3.155,458,2.22,459,1.726,468,2.001,469,1.826,471,2.22,716,2.638,718,2.404,726,2.959,834,4.415,840,3.471,841,3.471,844,5.318,1420,3.444,1780,4.972,1781,4.972,1782,6.343,1783,4.972,1784,4.972,1787,3.471,1788,4.972,1792,4.972,1796,3.178,1820,3.471,1821,5.61,1822,7.157,1823,3.917,1824,3.917,1825,5.61,1826,3.917,1827,3.917,1828,3.917,1829,3.917,1830,5.61,1831,3.917,1832,3.917,1833,3.917,1834,4.552,1835,3.917,1836,3.917,1837,3.917,1838,3.917,1839,3.917,1840,3.917,1841,3.917,1842,3.917,1843,3.917,1844,3.917]],["title/classes/TestStrategy.html",[0,0.159,1845,3.678]],["body/classes/TestStrategy.html",[0,0.195,2,1.393,3,0.081,4,0.081,5,0.071,12,1.754,13,3.414,17,0.381,20,2.475,22,0.731,26,1.422,27,0.008,28,0.964,29,1.233,36,0.26,39,0.081,40,4.202,41,3.953,45,0.006,46,0.006,47,0.005,67,1.82,68,2.091,79,1.422,81,4.513,91,0.694,95,2.324,104,1.747,108,4.513,109,4.93,170,1.481,252,2.265,261,4.93,306,4.513,339,4.513,469,2.593,679,5.377,965,5.776,970,6.309,973,4.513,974,4.93,975,4.513,976,3.953,978,4.513,979,4.513,980,4.513,981,4.93,982,4.93,983,4.93,984,4.93,985,4.93,1845,5.776,1846,4.93,1847,5.562,1848,5.562]],["title/classes/ThemeAndQuizzDto.html",[0,0.159,1849,3.222]],["body/classes/ThemeAndQuizzDto.html",[0,0.274,2,1.385,3,0.081,4,0.081,5,0.071,17,0.379,18,1.449,22,0.728,27,0.008,32,0.547,36,0.282,39,0.081,45,0.005,46,0.006,47,0.005,72,1.479,101,1.535,226,4,265,1.422,286,2.578,287,2.196,288,3.109,1348,5.564,1355,3.549,1610,5.562,1613,5.754,1617,5.914,1766,4.612,1849,5.041,1850,4.901,1851,6.939,1852,5.53,1853,6.069,1854,5.53,1855,4.901]],["title/classes/ThemeQuizz.html",[0,0.159,228,2.478]],["body/classes/ThemeQuizz.html",[0,0.157,2,1.127,3,0.066,4,0.066,5,0.058,17,0.308,18,1.264,22,0.866,27,0.008,32,0.559,33,2.025,36,0.149,39,0.066,45,0.004,46,0.005,47,0.004,72,1.76,226,3.609,228,3.38,252,3.098,265,1.341,330,3.38,347,4.759,348,2.045,349,4.162,350,1.52,351,3.38,354,4.165,355,5.747,359,3.031,361,4.005,362,3.632,363,2.802,365,3.825,366,1.832,367,1.223,487,2.65,488,5.407,524,3.73,742,5.017,1206,5.732,1212,3.987,1387,5.48,1766,5.065,1856,3.987,1857,7.065,1858,6.261,1859,4.499,1860,4.499,1861,4.499,1862,4.499,1863,4.499,1864,4.499,1865,4.499,1866,4.499]],["title/controllers/ThemeQuizzController.html",[9,1.369,1867,3.425]],["body/controllers/ThemeQuizzController.html",[0,0.125,3,0.052,4,0.052,5,0.046,9,1.075,12,1.65,17,0.244,20,1.122,22,0.748,26,1.864,27,0.008,28,1.264,29,1.616,32,0.438,36,0.278,39,0.052,43,1.226,45,0.003,46,0.004,47,0.003,56,3.212,60,1.122,67,1.338,68,2.354,72,1.521,78,5.508,79,1.864,87,1.803,88,2.673,89,1.761,90,1.818,91,0.444,94,1.761,95,1.487,97,2.673,99,1.761,101,0.988,104,1.789,110,2.067,112,1.761,113,3.85,114,4.18,209,3.171,226,2.673,227,5.419,228,1.945,265,0.579,333,1.254,350,1.407,371,1.709,393,1.879,394,3.392,395,1.879,396,2.763,397,2.688,400,1.761,401,1.945,402,1.659,403,1.945,410,2.86,411,3.154,418,1.945,423,2.887,590,1.945,927,2.096,1008,2.529,1009,2.887,1012,3.154,1015,2.887,1563,2.887,1607,3.953,1766,4.492,1849,5.602,1853,3.719,1867,3.953,1868,5.233,1869,4.638,1870,4.638,1871,4.638,1872,5.233,1873,3.558,1874,3.558,1875,3.154,1876,3.558,1877,3.154,1878,3.558,1879,3.558,1880,4.638,1881,3.558,1882,3.558,1883,3.558,1884,5.954,1885,3.558,1886,3.558,1887,4.18,1888,2.887,1889,3.558,1890,3.558,1891,3.558,1892,3.558,1893,3.558,1894,3.558,1895,3.558,1896,3.558,1897,3.558,1898,3.558,1899,3.558,1900,3.558,1901,3.558,1902,3.558,1903,3.558]],["title/classes/ThemeQuizzDto.html",[0,0.159,1853,3.222]],["body/classes/ThemeQuizzDto.html",[0,0.271,2,1.357,3,0.079,4,0.079,5,0.069,17,0.371,18,1.431,22,0.796,27,0.008,29,1.552,32,0.525,33,2.047,36,0.271,39,0.079,45,0.005,46,0.006,47,0.005,72,1.617,101,1.505,226,3.962,265,1.474,286,3.821,287,2.153,288,3.255,349,4.568,429,5.858,1348,3.852,1355,3.478,1610,3.651,1617,4.094,1766,4.828,1853,4.976,1855,4.803,1858,6.873,1904,4.803,1905,5.42,1906,5.42,1907,5.42]],["title/modules/ThemeQuizzModule.html",[118,1.005,148,3.222]],["body/modules/ThemeQuizzModule.html",[0,0.17,3,0.071,4,0.071,5,0.062,27,0.008,36,0.293,39,0.071,45,0.004,46,0.005,47,0.004,60,2.053,91,0.606,118,1.628,120,1.711,121,1.711,122,1.793,123,1.793,124,1.711,125,2.713,126,1.793,139,5.677,143,5.408,144,5.677,148,6.541,152,5.174,154,2.404,155,1.793,156,1.793,158,2.652,162,3.667,166,2.083,167,1.32,170,1.734,181,2.083,200,4.302,201,2.751,202,2.86,203,5.282,213,2.98,226,4.01,227,3.45,228,2.653,926,3.667,927,2.86,1574,3.938,1766,2.86,1867,5.55,1887,5.677,1888,3.938,1908,4.302,1909,4.854,1910,4.302,1911,4.854]],["title/injectables/ThemeQuizzService.html",[253,0.707,1887,3.054]],["body/injectables/ThemeQuizzService.html",[0,0.095,3,0.04,4,0.04,5,0.035,12,1.655,17,0.186,20,1.341,22,0.736,26,1.833,27,0.008,28,1.243,29,1.59,32,0.439,36,0.253,39,0.04,45,0.002,46,0.004,47,0.002,67,1.087,68,2.295,79,1.753,87,2.049,91,0.338,104,1.874,110,2.424,167,0.737,170,1.91,181,1.162,201,1.536,202,1.596,209,3.503,213,1.663,226,3.038,227,5.278,228,3.25,253,0.663,254,0.836,265,1.052,319,3.919,331,1.925,333,2.278,335,2.755,348,1.231,350,1.494,367,0.737,428,4.652,449,2.621,458,1.536,459,1.194,468,1.384,469,2.447,471,1.536,678,2.046,683,2.729,880,2.198,927,2.505,928,1.925,930,4.226,947,4.83,1206,2.198,1555,1.925,1573,4.402,1578,2.401,1599,2.401,1600,2.401,1607,4.492,1612,2.046,1627,4.602,1657,2.401,1660,3.769,1662,2.401,1766,4.374,1849,5.097,1851,2.401,1869,3.769,1870,3.769,1871,3.769,1875,3.769,1877,3.769,1880,5.27,1887,2.864,1888,2.198,1912,4.252,1913,4.252,1914,4.252,1915,2.709,1916,2.709,1917,4.252,1918,4.252,1919,2.709,1920,4.252,1921,2.709,1922,2.709,1923,4.252,1924,2.709,1925,2.709,1926,4.252,1927,2.709,1928,2.709,1929,2.709,1930,5.249,1931,2.709,1932,2.709,1933,2.709,1934,2.709,1935,2.709,1936,2.709,1937,2.709,1938,4.252,1939,2.709,1940,2.709,1941,2.709,1942,2.709,1943,2.709,1944,2.709,1945,2.709,1946,2.401,1947,2.709,1948,2.709,1949,2.709,1950,5.249,1951,4.252,1952,4.252,1953,2.709,1954,2.709,1955,2.709,1956,5.946,1957,2.709,1958,2.709,1959,2.709,1960,2.709,1961,2.709,1962,2.709]],["title/classes/Type.html",[0,0.159,32,0.29]],["body/classes/Type.html",[0,0.211,2,1.512,3,0.088,4,0.088,5,0.077,17,0.414,18,1.532,22,0.769,27,0.008,32,0.58,33,1.766,36,0.248,39,0.088,45,0.005,46,0.006,47,0.005,72,1.564,101,1.676,288,3.238,348,2.36,350,1.383,359,3.216,365,3.397,366,3.053,367,1.642,524,3.188,1071,4.561,1775,4.899,1776,6.644,1963,5.351,1964,6.038,1965,6.038]],["title/controllers/TypeController.html",[9,1.369,1966,3.425]],["body/controllers/TypeController.html",[0,0.129,3,0.054,4,0.054,5,0.047,8,1.138,9,1.914,12,1.694,17,0.253,22,0.714,26,1.62,27,0.008,28,1.099,29,1.405,32,0.523,36,0.28,39,0.054,43,2.549,45,0.003,46,0.004,47,0.003,60,1.163,67,1.373,68,2.309,72,1.452,79,1.779,87,1.851,88,2.745,89,1.826,90,1.885,91,0.46,94,1.826,95,1.542,97,2.745,99,1.826,101,1.024,104,1.708,110,2.097,112,1.826,113,3.676,252,2.188,265,0.6,350,1.425,371,1.771,385,2.622,393,1.948,394,3.464,395,1.948,396,4.078,400,1.826,401,2.016,402,1.72,403,2.016,410,3.805,418,2.016,589,2.485,590,3.464,591,2.787,594,2.622,595,2.091,641,2.787,1066,5.834,1421,4.273,1750,3.27,1789,3.27,1793,3.27,1966,4.059,1967,3.27,1968,4.762,1969,5.373,1970,4.762,1971,6.17,1972,3.27,1973,5.806,1974,2.993,1975,3.689,1976,3.689,1977,3.689,1978,3.27,1979,3.689,1980,3.689,1981,3.27,1982,2.993,1983,3.27,1984,3.689,1985,2.993,1986,2.993,1987,3.689,1988,3.689,1989,3.689,1990,5.373,1991,3.689,1992,3.689]],["title/classes/TypeDto.html",[0,0.159,1973,3.222]],["body/classes/TypeDto.html",[0,0.258,2,1.475,3,0.086,4,0.086,5,0.075,8,1.817,15,3.77,17,0.403,18,1.508,22,0.604,27,0.008,32,0.569,33,1.739,36,0.267,39,0.086,45,0.005,46,0.006,47,0.005,72,1.228,101,1.635,172,3.653,265,1.312,269,3.966,286,3.441,287,2.339,288,2.931,507,5.245,540,5.575,541,5.575,543,4.448,1810,5.219,1973,5.245,1993,5.219,1994,6.089,1995,6.541,1996,5.888,1997,5.888]],["title/classes/TypeGreenScore.html",[0,0.159,195,2.114]],["body/classes/TypeGreenScore.html",[0,0.204,2,1.457,3,0.085,4,0.085,5,0.075,17,0.399,18,1.497,22,0.752,27,0.008,32,0.469,33,1.725,36,0.242,39,0.085,45,0.005,46,0.006,47,0.005,72,1.527,101,1.615,188,3.032,195,4.043,265,1.441,288,3.184,348,2.32,350,1.351,359,3.142,365,3.318,366,2.983,367,1.582,524,3.071,1071,4.394,1775,4.719,1998,4.92,1999,5.155,2000,5.816,2001,7.323,2002,5.816]],["title/controllers/TypeGreenScoreController.html",[9,1.369,2003,3.054]],["body/controllers/TypeGreenScoreController.html",[0,0.122,3,0.051,4,0.051,5,0.045,8,1.08,9,2.05,12,1.63,17,0.24,22,0.697,26,1.571,27,0.008,28,1.066,29,1.362,32,0.502,36,0.272,39,0.051,43,2.495,45,0.003,46,0.004,47,0.003,60,1.104,67,1.321,68,2.285,72,1.416,79,1.735,87,2.339,88,2.641,89,1.732,90,1.788,91,0.437,94,1.732,95,1.463,97,2.641,99,1.732,101,0.972,103,2.487,104,1.666,110,1.924,112,1.732,113,3.584,168,1.732,169,2.357,188,3.376,191,4.105,193,3.167,195,1.632,252,2.105,350,1.398,371,1.68,385,2.487,393,1.848,394,3.359,395,1.848,396,3.584,400,1.732,401,1.913,402,1.632,403,1.913,410,3.71,418,1.913,590,2.825,595,2.93,730,2.644,736,2.357,1077,4.864,1148,3.999,1974,2.84,1985,2.84,1986,4.194,1998,4.445,2003,3.482,2004,4.581,2005,4.194,2006,6.016,2007,4.581,2008,3.102,2009,4.878,2010,3.102,2011,5.447,2012,2.84,2013,3.102,2014,3.102,2015,3.102,2016,3.102,2017,3.102,2018,3.102,2019,3.102,2020,2.644,2021,3.102,2022,3.102,2023,3.102,2024,3.102,2025,3.102,2026,3.102,2027,3.102,2028,3.102]],["title/controllers/TypeGreenScoreController-1.html",[9,1.139,527,2.849,2003,2.541]],["body/controllers/TypeGreenScoreController-1.html",[0,0.122,3,0.051,4,0.051,5,0.045,8,1.078,9,2.186,12,1.628,17,0.239,22,0.696,26,1.569,27,0.008,28,1.064,29,1.361,32,0.502,36,0.272,39,0.051,43,2.493,45,0.003,46,0.004,47,0.003,60,1.102,67,1.319,68,2.284,72,1.415,79,1.734,87,2.337,88,2.637,89,1.729,90,1.785,91,0.436,94,1.729,95,1.46,97,2.637,99,1.729,101,0.97,103,2.483,104,1.664,110,1.922,112,1.729,113,3.581,168,1.729,169,2.353,188,3.375,191,4.102,193,3.165,195,1.629,252,2.102,350,1.397,371,1.677,385,2.483,393,1.845,394,3.356,395,1.845,396,3.581,400,1.729,401,1.909,402,1.629,403,1.909,410,3.707,418,1.909,590,2.821,595,2.926,730,2.639,736,2.353,1077,4.861,1148,3.995,1974,2.834,1985,2.834,1986,4.188,1998,4.442,2003,3.477,2004,4.575,2005,4.188,2006,6.011,2007,4.575,2008,3.096,2009,4.874,2010,3.096,2011,5.441,2012,2.834,2013,3.096,2014,3.096,2015,3.096,2016,3.096,2017,3.096,2018,3.096,2019,3.096,2020,2.639,2021,3.096,2022,3.096,2023,3.096,2024,3.096,2025,3.096,2026,3.096,2027,3.096,2028,3.096]],["title/classes/TypeGreenScoreDto.html",[0,0.159,2009,3.054]],["body/classes/TypeGreenScoreDto.html",[0,0.264,2,1.527,3,0.089,4,0.089,5,0.078,15,3.852,17,0.418,18,1.541,22,0.626,27,0.008,32,0.39,33,1.776,36,0.271,39,0.089,45,0.005,46,0.006,47,0.005,72,1.271,101,1.692,188,3.097,195,3.817,265,1.333,286,3.516,287,2.421,288,2.995,1060,4.946,1998,4.629,2009,5.079,2029,5.402,2030,6.185,2031,6.095,2032,6.095,2033,6.095]],["title/interfaces/TypeGreenScoreInterface.html",[35,1.801,2030,3.425]],["body/interfaces/TypeGreenScoreInterface.html",[3,0.098,4,0.098,5,0.086,17,0.459,18,1.631,27,0.008,32,0.429,33,2.009,35,2.659,39,0.098,45,0.006,46,0.007,47,0.006,48,3.659,188,3.019,195,4.118,265,1.09,1998,4.11,2030,6.03,2034,5.934,2035,5.934]],["title/modules/TypeGreenScoreModule.html",[118,1.005,149,2.909]],["body/modules/TypeGreenScoreModule.html",[0,0.193,3,0.08,4,0.08,5,0.071,27,0.008,32,0.453,36,0.282,39,0.08,45,0.005,46,0.006,47,0.005,60,2.232,91,0.688,118,1.733,120,1.944,121,1.944,122,2.036,123,2.036,124,1.944,125,2.887,126,2.887,149,5.697,154,2.614,155,2.036,156,2.036,158,2.246,166,2.366,167,1.499,188,3.12,191,3.125,195,2.571,735,4.887,736,3.714,737,4.887,1148,5.462,1998,3.385,2003,5.266,2020,4.165,2036,4.887,2037,4.887,2038,4.887,2039,5.514]],["title/injectables/TypeGreenScoreService.html",[253,0.707,1148,2.671]],["body/injectables/TypeGreenScoreService.html",[0,0.13,3,0.054,4,0.054,5,0.048,12,1.175,17,0.255,20,1.706,22,0.795,26,1.899,27,0.008,28,1.288,29,1.647,32,0.408,36,0.246,39,0.054,43,2.559,45,0.003,46,0.005,47,0.003,67,1.383,68,2.371,79,1.899,87,2.41,91,0.465,104,1.823,110,2.197,167,1.013,188,3.367,191,4.532,193,1.557,195,2.523,253,0.844,254,1.15,265,0.606,333,1.313,335,1.344,348,1.078,350,1.43,367,1.013,449,3.082,458,2.112,459,1.642,468,1.903,469,1.737,471,2.112,738,3.023,1064,2.391,1066,4.814,1077,3.472,1125,4.39,1148,3.188,1998,4.908,2005,4.39,2009,3.645,2012,4.39,2020,2.814,2040,5.411,2041,6.198,2042,5.411,2043,3.725,2044,3.725,2045,6.372,2046,5.411,2047,3.725,2048,3.725,2049,3.725,2050,5.411,2051,3.725,2052,5.411,2053,5.411,2054,3.725,2055,3.725,2056,3.725,2057,3.725,2058,3.725,2059,3.725,2060,3.302,2061,3.725,2062,3.725,2063,3.725]],["title/interfaces/TypeInterface.html",[35,1.801,1994,3.425]],["body/interfaces/TypeInterface.html",[3,0.099,4,0.099,5,0.087,17,0.465,18,1.645,27,0.008,32,0.58,33,2.022,35,2.697,39,0.099,45,0.006,46,0.007,47,0.006,48,3.711,265,1.105,1994,6.081,2064,6.018]],["title/modules/TypeModule.html",[118,1.005,150,2.909]],["body/modules/TypeModule.html",[0,0.198,3,0.082,4,0.082,5,0.072,27,0.008,32,0.361,36,0.284,39,0.082,45,0.005,46,0.006,47,0.005,60,2.266,91,0.704,118,1.752,120,1.99,121,1.99,122,2.085,123,2.085,124,1.99,125,2.919,126,2.919,150,5.728,154,2.654,155,2.085,156,2.085,158,2.299,166,2.422,167,1.535,1421,5.71,1966,5.971,1981,5.002,1982,4.58,2065,5.002,2066,5.002,2067,5.002,2068,5.644,2069,5.644,2070,5.644]],["title/injectables/TypeService.html",[253,0.707,1421,2.783]],["body/injectables/TypeService.html",[0,0.125,3,0.052,4,0.052,5,0.046,12,1.126,17,0.245,20,1.655,22,0.81,26,1.867,27,0.008,28,1.266,29,1.619,32,0.468,33,1.236,36,0.252,39,0.052,43,2.516,45,0.003,46,0.004,47,0.003,67,1.341,68,2.397,79,1.952,87,2.631,91,0.446,104,1.936,110,2.164,167,0.971,253,0.818,254,1.102,265,0.581,333,1.259,335,2.244,348,1.034,350,1.524,367,0.971,449,3.021,458,2.025,459,1.574,468,1.825,469,1.665,471,2.025,641,3.964,718,2.193,722,2.898,1066,5.517,1125,5.562,1184,4.257,1421,3.221,1446,2.698,1968,4.65,1970,4.65,1971,4.65,1972,4.65,1973,3.73,1978,4.65,1982,2.898,1983,3.166,2041,6.075,2060,3.166,2071,3.166,2072,5.247,2073,3.572,2074,3.572,2075,6.22,2076,3.572,2077,5.247,2078,3.572,2079,3.572,2080,3.572,2081,3.572,2082,5.247,2083,3.572,2084,5.247,2085,3.572,2086,3.572,2087,3.572,2088,3.572,2089,3.572,2090,3.572,2091,3.572,2092,5.247,2093,3.166,2094,3.572,2095,3.572]],["title/classes/User.html",[0,0.159,170,1.207]],["body/classes/User.html",[0,0.139,2,0.997,3,0.058,4,0.058,5,0.051,17,0.273,18,1.16,22,0.871,27,0.008,28,0.984,32,0.543,33,2.028,36,0.219,39,0.058,45,0.003,46,0.005,47,0.003,72,1.77,168,4.128,169,2.682,170,1.512,172,4.128,173,3.231,244,3.75,252,2.694,266,4.998,267,4.998,268,3.75,348,1.915,350,1.33,351,2.177,359,2.838,361,3.218,362,1.755,363,2.572,365,3.591,366,2.312,367,1.083,487,4.248,500,5.368,512,4.606,524,3.808,525,5.448,683,3.643,744,3.218,745,4.088,746,4.623,747,4.088,748,2.444,751,3.75,752,2.257,754,3.218,799,3.529,2096,3.529,2097,5.863,2098,6.615,2099,5.677,2100,3.982,2101,3.982,2102,3.982,2103,3.982,2104,3.982,2105,3.982,2106,5.677,2107,3.982,2108,5.677,2109,3.982,2110,5.677,2111,3.982,2112,3.982,2113,3.982]],["title/modules/UserAppModule.html",[118,1.005,151,3.222]],["body/modules/UserAppModule.html",[0,0.218,3,0.091,4,0.091,5,0.08,27,0.008,36,0.252,39,0.091,45,0.005,46,0.006,47,0.005,91,0.775,118,1.831,120,2.191,121,2.191,122,2.295,123,2.295,124,2.191,125,3.05,126,2.295,151,6.396,154,2.818,155,2.295,156,2.295,160,5.508,170,1.655,184,4.695,2114,5.508,2115,5.508,2116,6.396,2117,5.043,2118,6.215]],["title/injectables/UserAppService.html",[253,0.707,2116,3.222]],["body/injectables/UserAppService.html",[0,0.243,3,0.101,4,0.101,5,0.089,27,0.008,36,0.229,39,0.101,45,0.006,46,0.007,47,0.006,91,0.866,184,5.242,253,1.272,254,2.141,2116,5.795,2117,5.63,2119,6.149]],["title/controllers/UserController.html",[9,1.369,2120,3.425]],["body/controllers/UserController.html",[0,0.13,3,0.054,4,0.054,5,0.048,8,1.15,9,1.925,12,2.205,17,0.255,22,0.718,26,1.788,27,0.008,28,1.212,29,1.55,32,0.448,36,0.256,39,0.054,43,2.196,45,0.003,46,0.005,47,0.003,56,3.322,60,1.175,67,1.383,68,2.314,72,1.459,75,4.488,79,1.788,85,4.088,88,2.764,89,1.844,90,1.903,91,0.465,94,1.844,95,1.557,97,2.764,99,1.844,101,1.034,103,2.648,104,1.716,110,1.534,112,1.844,170,2.259,252,2.848,263,6.04,319,3.483,350,1.43,371,1.789,393,3.365,394,3.483,395,1.967,396,4.222,418,2.036,559,3.846,590,3.822,591,4.088,595,3.067,1008,2.648,2120,4.088,2121,3.302,2122,5.411,2123,5.411,2124,4.796,2125,5.411,2126,3.725,2127,3.725,2128,3.725,2129,3.725,2130,3.725,2131,3.725,2132,3.725,2133,5.411,2134,3.302,2135,5.822,2136,3.725,2137,3.725,2138,3.725,2139,3.725,2140,6.372,2141,3.725,2142,3.302,2143,3.725,2144,3.725,2145,3.725,2146,3.725,2147,3.725,2148,3.725,2149,3.725,2150,3.725,2151,3.725,2152,3.725,2153,3.725,2154,3.725,2155,3.725,2156,3.725,2157,3.725]],["title/classes/UserDto.html",[0,0.159,2135,3.222]],["body/classes/UserDto.html",[0,0.217,2,1.129,3,0.066,4,0.066,5,0.058,8,2.463,15,3.164,17,0.309,18,1.266,22,0.819,27,0.008,28,1.32,32,0.511,33,2.081,36,0.252,39,0.066,45,0.004,46,0.005,47,0.004,72,1.665,101,1.252,168,3.951,170,2.196,244,4.524,265,1.49,266,5.344,267,5.344,268,4.01,269,5.376,270,5.489,271,6.269,273,5.489,276,5.025,277,3.997,281,5.028,282,3.997,283,5.025,284,3.407,286,3.55,287,1.791,288,3.275,635,5.025,2135,4.402,2158,3.997,2159,4.509,2160,4.509,2161,4.509,2162,4.509,2163,6.193,2164,4.509,2165,4.509,2166,5.489,2167,4.509,2168,4.509]],["title/interfaces/UserInterface.html",[35,1.801,281,3.222]],["body/interfaces/UserInterface.html",[3,0.087,4,0.087,5,0.076,17,0.407,18,1.517,27,0.008,32,0.559,33,2.23,35,2.361,39,0.087,45,0.005,46,0.006,47,0.005,48,3.249,168,4.197,244,4.806,265,1.42,266,6.405,267,6.405,268,4.806,281,5.276,2169,5.268]],["title/modules/UserModule.html",[118,1.005,152,2.783]],["body/modules/UserModule.html",[0,0.182,3,0.076,4,0.076,5,0.067,27,0.008,36,0.29,39,0.076,45,0.004,46,0.006,47,0.004,60,2.152,91,0.65,118,1.687,120,1.837,121,1.837,122,1.925,123,1.925,124,1.837,125,2.811,126,2.811,132,5.279,145,5.518,152,5.61,154,2.521,155,1.925,156,1.925,158,2.78,163,4.229,165,3.938,166,2.236,167,1.417,170,1.388,319,5.027,2120,5.749,2142,4.62,2170,4.62,2171,5.212,2172,4.62,2173,4.62,2174,5.212,2175,5.212,2176,4.62,2177,5.212]],["title/injectables/UserService.html",[253,0.707,319,2.478]],["body/injectables/UserService.html",[0,0.089,3,0.037,4,0.037,5,0.033,12,1.807,17,0.174,18,0.825,20,1.273,22,0.803,26,1.959,27,0.008,28,1.328,29,1.699,30,1.437,32,0.465,33,1.904,36,0.24,39,0.037,43,2.409,45,0.002,46,0.003,47,0.002,67,1.032,68,2.377,79,1.911,81,2.058,87,1.391,91,0.316,104,1.835,110,2.291,167,0.69,168,1.998,169,1.708,170,1.933,172,1.255,244,2.85,253,0.63,254,0.783,265,0.818,268,3.249,276,5.077,319,2.206,332,3.049,333,2.636,335,2.404,338,2.248,340,3.387,341,3.387,348,1.456,350,1.29,362,1.118,367,0.69,449,2.526,458,1.437,459,1.118,468,2.569,469,2.672,471,1.437,494,1.557,578,4.274,678,1.916,791,1.627,839,1.916,966,4.656,977,2.248,1372,2.058,1946,2.248,2097,4.456,2124,3.577,2134,3.577,2135,3.574,2176,2.248,2178,2.248,2179,5.028,2180,4.036,2181,4.036,2182,4.036,2183,4.036,2184,4.036,2185,4.036,2186,4.036,2187,4.036,2188,2.536,2189,4.036,2190,5.028,2191,4.036,2192,2.536,2193,2.536,2194,4.036,2195,2.536,2196,2.536,2197,4.036,2198,2.536,2199,4.036,2200,2.536,2201,4.036,2202,2.536,2203,4.036,2204,2.536,2205,4.036,2206,2.536,2207,4.036,2208,2.536,2209,2.536,2210,4.036,2211,2.536,2212,2.536,2213,2.536,2214,2.536,2215,2.536,2216,4.036,2217,2.536,2218,2.536,2219,2.536,2220,4.036,2221,2.536,2222,2.536,2223,2.536,2224,2.536,2225,2.536,2226,2.536,2227,2.536,2228,2.536,2229,2.536,2230,2.536,2231,2.536,2232,2.536,2233,2.536,2234,2.536,2235,2.536,2236,2.536,2237,4.036,2238,2.536,2239,2.536,2240,2.536,2241,2.536,2242,2.536,2243,5.028,2244,2.536,2245,2.536,2246,2.536,2247,2.536,2248,2.536,2249,2.536]],["title/classes/ValidationDto.html",[0,0.159,1884,3.425]],["body/classes/ValidationDto.html",[0,0.279,2,1.435,3,0.084,4,0.084,5,0.073,17,0.393,18,1.482,22,0.744,27,0.008,32,0.536,36,0.277,39,0.084,45,0.005,46,0.006,47,0.005,72,1.513,101,1.591,265,1.295,287,2.276,288,3.161,350,1.338,431,4.328,437,4.453,1348,5.156,1355,3.677,1607,6.013,1612,6.013,1613,4.649,1617,5.48,1765,6.521,1766,4.689,1884,5.48,2250,5.078,2251,5.729,2252,5.729]],["title/coverage.html",[2253,5.509]],["body/coverage.html",[0,0.313,1,1.297,5,0.023,6,1.617,7,1.617,9,2.339,12,0.575,16,1.379,27,0.008,32,0.463,35,2.723,45,0.002,46,0.003,47,0.002,49,1.617,50,1.617,59,1.379,61,1.617,82,1.379,92,1.171,124,0.643,153,1.297,168,0.903,170,2.09,172,0.903,177,1.913,179,0.743,182,2.043,184,1.379,186,1.171,188,3.062,189,2.19,191,2.266,193,2.865,194,1.746,195,0.851,197,1.12,202,1.815,204,2.693,207,1.229,209,0.932,211,1.229,213,1.891,214,1.379,216,1.171,218,1.034,220,1.229,223,1.171,224,1.229,226,2.043,227,2.19,228,0.997,230,1.171,232,1.229,253,1.354,255,1.617,263,1.379,264,1.617,281,1.297,293,1.297,294,1.297,311,1.617,319,0.997,345,1.617,352,4.163,369,1.379,370,1.617,378,1.297,398,1.229,400,0.903,402,0.851,404,1.171,406,1.297,427,1.617,445,1.617,474,1.617,488,5.34,544,1.379,545,1.617,555,1.297,578,1.075,581,1.297,608,1.617,638,1.379,645,1.617,652,1.617,683,6.015,700,1.617,701,1.617,716,1.229,717,1.229,728,1.379,729,2.327,730,3.02,734,1.297,738,2.5,739,2.842,740,1.617,756,1.379,757,1.617,768,1.171,773,3.339,794,3.165,795,1.617,806,1.075,850,1.617,858,1.617,868,1.617,896,1.617,902,1.481,903,1.617,904,1.297,905,2.5,909,1.229,925,1.297,928,3.339,929,1.617,938,1.617,947,1.229,963,1.617,966,1.171,989,3.368,990,1.617,1001,1.379,1002,1.617,1007,1.379,1017,1.229,1026,1.617,1027,1.379,1032,1.617,1040,1.617,1052,1.617,1059,1.617,1064,1.171,1065,1.617,1069,3.495,1070,1.617,1080,1.379,1081,1.617,1084,1.034,1085,1.229,1087,1.379,1107,1.617,1108,1.379,1114,1.617,1146,1.075,1148,1.075,1188,1.617,1189,1.617,1202,1.617,1226,1.481,1227,1.617,1234,1.379,1235,1.617,1249,1.229,1282,1.379,1285,1.171,1316,1.617,1345,1.379,1359,1.617,1402,1.617,1409,1.617,1420,1.12,1421,1.12,1446,1.379,1536,1.617,1553,3.164,1554,1.617,1562,1.379,1563,2.5,1565,1.297,1566,1.617,1573,1.12,1601,1.617,1610,1.229,1611,1.617,1615,1.297,1619,1.379,1620,1.617,1627,1.171,1633,1.617,1644,1.617,1666,1.617,1670,1.481,1672,1.617,1695,1.617,1720,1.379,1721,1.617,1725,1.229,1735,1.617,1743,4.651,1765,1.379,1766,3.57,1767,1.617,1770,1.617,1778,1.379,1779,1.617,1785,1.379,1806,1.617,1807,1.379,1813,1.617,1820,1.617,1834,1.481,1845,1.481,1846,1.617,1849,1.297,1850,1.617,1853,1.297,1856,1.617,1867,1.379,1884,1.379,1887,1.229,1904,1.617,1963,1.617,1966,1.379,1967,1.617,1973,1.297,1993,1.617,1994,1.379,1998,3.495,1999,1.617,2003,2.075,2009,1.229,2029,1.617,2030,1.379,2034,1.617,2035,1.617,2064,1.617,2071,1.617,2096,1.617,2116,1.297,2117,1.481,2119,1.617,2120,1.379,2121,1.617,2135,1.297,2158,1.617,2169,1.617,2178,1.617,2250,1.617,2253,1.617,2254,1.617,2255,1.825,2256,1.825,2257,4.697,2258,3.081,2259,1.825,2260,7.635,2261,6.06,2262,3.998,2263,7.745,2264,1.825,2265,1.825,2266,1.825,2267,1.825,2268,1.825,2269,1.825,2270,1.825,2271,1.825,2272,3.081,2273,1.617,2274,6.06,2275,5.693,2276,3.081,2277,1.825,2278,7.225,2279,6.856,2280,1.825,2281,1.617,2282,1.481,2283,5.248,2284,1.825,2285,1.617,2286,1.825,2287,1.825,2288,1.825,2289,1.825,2290,4.697,2291,1.825,2292,1.825,2293,1.825,2294,4.163,2295,1.825,2296,1.825]],["title/dependencies.html",[121,1.925,2297,3.772]],["body/dependencies.html",[0,0.244,13,3.299,27,0.008,45,0.004,46,0.006,47,0.004,91,0.671,95,2.246,101,1.492,121,1.894,167,1.461,235,4.36,287,2.134,299,4.06,303,4.06,332,4.06,367,1.461,710,4.06,715,4.06,976,5.489,1191,4.06,1355,3.449,1679,4.36,2298,7.723,2299,6.962,2300,4.763,2301,6.266,2302,5.374,2303,5.374,2304,4.763,2305,6.962,2306,4.763,2307,5.374,2308,4.763,2309,6.17,2310,5.374,2311,5.374,2312,5.374,2313,5.374,2314,4.763,2315,5.374,2316,4.763,2317,5.374,2318,4.763,2319,4.36,2320,5.374,2321,4.36,2322,5.374,2323,4.763,2324,5.374,2325,4.763,2326,5.374,2327,5.374,2328,5.374,2329,5.374,2330,5.374,2331,4.763,2332,5.374,2333,4.763,2334,5.374,2335,4.763,2336,4.763,2337,5.374,2338,5.374]],["title/miscellaneous/enumerations.html",[2339,2.541,2340,4.839]],["body/miscellaneous/enumerations.html",[17,0.437,27,0.006,45,0.005,46,0.006,47,0.005,170,1.7,172,3.159,243,5.655,540,4.821,541,4.821,615,5.655,641,5.859,1349,6.873,1352,6.292,1995,5.655,2166,6.873,2339,4.298,2340,5.655,2341,6.381,2342,6.381,2343,6.381,2344,6.381,2345,6.381,2346,6.381,2347,6.381,2348,6.381,2349,6.381,2350,6.381,2351,6.381,2352,6.381,2353,6.381,2354,6.381,2355,6.381,2356,6.381,2357,6.381,2358,6.381,2359,6.381,2360,6.381,2361,6.381,2362,6.381,2363,6.381,2364,6.381]],["title/miscellaneous/functions.html",[2339,2.541,2365,4.839]],["body/miscellaneous/functions.html",[17,0.454,27,0.007,45,0.006,46,0.007,47,0.006,85,5.005,124,2.993,530,5.375,663,5.005,2281,5.872,2282,5.375,2301,5.375,2319,5.375,2321,5.375,2339,4.463,2365,5.872,2366,6.625,2367,6.625,2368,6.625,2369,6.625,2370,6.625,2371,6.625,2372,6.625,2373,6.625,2374,6.625,2375,6.625,2376,6.625,2377,6.625,2378,6.625,2379,6.625,2380,6.625,2381,6.625,2382,6.625]],["title/index.html",[17,0.258,2383,3.772,2384,3.772]],["body/index.html",[0,0.231,8,1.533,13,4.059,14,3.531,27,0.006,45,0.004,46,0.006,47,0.004,91,0.62,95,2.076,101,1.379,167,1.351,235,5.365,249,4.403,287,1.973,299,3.753,303,4.995,324,4.403,332,3.753,367,1.798,710,3.753,715,3.753,976,5.282,1191,3.753,1355,3.188,1448,4.403,1679,4.031,2254,4.403,2300,4.403,2301,6.03,2304,4.403,2306,4.403,2308,4.403,2309,5.86,2314,4.403,2316,4.403,2318,4.403,2319,4.031,2321,4.031,2323,4.403,2325,4.403,2331,4.403,2333,4.403,2335,5.86,2336,4.403,2385,7.432,2386,6.612,2387,4.968,2388,4.968,2389,4.968,2390,6.612,2391,4.968,2392,4.968,2393,4.968,2394,6.612,2395,4.968,2396,4.968,2397,4.968,2398,4.968,2399,4.968,2400,4.968,2401,4.968,2402,4.968,2403,4.968,2404,4.968,2405,4.968,2406,4.968,2407,4.968,2408,4.968,2409,4.968,2410,4.968,2411,4.968,2412,4.968,2413,8.795,2414,4.968,2415,4.968,2416,4.968,2417,4.968,2418,4.968,2419,4.968,2420,4.968,2421,4.968,2422,4.968,2423,4.968,2424,4.968,2425,4.968,2426,4.968,2427,4.968,2428,4.968,2429,4.968,2430,4.968,2431,4.968,2432,4.968,2433,6.612,2434,4.968,2435,6.612,2436,4.968,2437,4.968,2438,7.432,2439,4.968,2440,4.968,2441,4.968,2442,4.968,2443,4.968]],["title/modules.html",[120,2.191]],["body/modules.html",[27,0.006,45,0.004,46,0.006,47,0.004,119,3.812,120,1.779,130,3.587,131,3.587,132,3.098,133,3.587,134,3.399,135,3.239,136,3.399,137,3.399,138,3.587,139,3.399,140,3.587,141,3.239,142,3.239,143,3.239,144,3.399,145,3.239,146,3.587,147,3.239,148,3.587,149,3.239,150,3.239,151,3.587,152,3.098,2444,9.504,2445,9.504,2446,9.504,2447,9.504]],["title/overview.html",[2448,5.509]],["body/overview.html",[2,0.557,27,0.008,45,0.002,46,0.003,47,0.002,48,1.215,60,0.701,92,4.25,118,0.493,119,6.985,120,0.784,121,0.784,122,0.821,123,0.821,124,0.784,125,0.821,126,0.821,127,1.97,128,1.97,129,1.97,130,5.637,131,4.91,132,4.387,133,4.158,134,4.461,135,4.433,136,4.814,137,4.461,138,4.158,139,4.461,140,4.462,141,4.433,142,5.574,143,4.433,144,4.814,145,4.433,146,5.841,147,4.433,148,5.553,149,4.25,150,4.433,151,4.158,152,4.796,153,3.269,154,1.34,155,0.821,156,0.821,254,0.686,289,1.97,291,1.97,292,1.97,293,3.269,294,3.269,319,3.62,398,4.461,404,4.25,438,1.97,440,1.97,441,1.97,494,1.364,527,1.679,578,3.901,646,1.97,647,1.97,648,1.97,732,1.97,733,1.97,734,3.269,765,1.97,766,1.97,767,1.97,768,4.25,803,1.97,804,1.97,805,1.97,806,3.901,861,1.97,863,1.97,864,1.97,906,1.97,907,1.97,908,1.97,909,4.461,923,1.97,924,1.97,925,3.269,944,1.97,945,1.97,946,1.97,947,4.461,966,4.25,1017,4.461,1033,1.97,1034,1.97,1035,1.97,1084,3.754,1115,1.97,1116,1.97,1117,1.97,1146,3.901,1148,3.901,1285,2.951,1403,1.97,1405,1.97,1406,1.97,1420,4.065,1421,4.065,1570,1.97,1571,1.97,1572,1.97,1573,4.065,1627,4.25,1637,1.97,1639,1.97,1640,1.97,1670,1.803,1688,1.97,1689,1.97,1690,1.97,1725,3.098,1730,1.97,1732,1.97,1814,1.97,1815,1.97,1816,1.97,1887,3.098,1908,1.97,1910,1.97,2036,1.97,2037,1.97,2038,1.97,2065,1.97,2066,1.97,2067,1.97,2114,1.97,2115,1.97,2116,3.269,2170,1.97,2172,1.97,2173,1.97,2285,1.97,2448,1.97,2449,2.223,2450,2.223,2451,2.223]],["title/miscellaneous/variables.html",[2339,2.541,2452,4.839]],["body/miscellaneous/variables.html",[0,0.167,17,0.328,24,4.341,25,3.612,27,0.008,30,4.861,33,1.838,45,0.004,46,0.005,47,0.004,68,1.273,75,3.068,104,1.999,313,3.22,330,2.613,335,2.815,350,0.882,362,3.59,402,3.797,536,3.879,715,3.612,716,4.341,717,4.341,722,5.229,969,4.237,1446,4.868,1834,5.229,2093,4.237,2273,4.237,2282,5.229,2294,4.237,2339,3.22,2452,4.237,2453,7.802,2454,4.781,2455,4.781,2456,4.781,2457,4.781,2458,4.781,2459,4.781,2460,4.781,2461,4.781,2462,4.781,2463,4.781,2464,4.781,2465,4.781,2466,4.781,2467,4.781,2468,4.781,2469,4.781,2470,4.781,2471,4.781,2472,4.781,2473,4.781,2474,4.781,2475,4.781,2476,4.781,2477,4.781,2478,4.781,2479,4.781,2480,4.781,2481,4.781,2482,7.29,2483,6.444,2484,4.781,2485,4.781,2486,4.781,2487,4.781]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":683,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/ThemeQuizzService.html":{},"classes/User.html":{},"coverage.html":{}}}],["0.1.13",{"_index":2332,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":2313,"title":{},"body":{"dependencies.html":{}}}],["0.2.22",{"_index":2338,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":2312,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":2328,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2275,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2272,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2293,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2284,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2287,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2289,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2279,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2260,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2263,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2278,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2261,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2262,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2283,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":527,"title":{"controllers/TypeGreenScoreController-1.html":{}},"body":{"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"overview.html":{}}}],["1.0.0",{"_index":2330,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":2307,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":2310,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":2317,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":2315,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2274,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2277,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2290,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":494,"title":{},"body":{"classes/Company.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{},"injectables/StatsService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["100",{"_index":488,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"classes/ThemeQuizz.html":{},"coverage.html":{}}}],["1000",{"_index":537,"title":{},"body":{"classes/Company.html":{}}}],["11/13",{"_index":2269,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":2271,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1668,"title":{},"body":{"classes/Role.html":{}}}],["150",{"_index":1207,"title":{},"body":{"classes/Poi.html":{}}}],["16",{"_index":2285,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16777215",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["180",{"_index":1381,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["2",{"_index":1387,"title":{},"body":{"injectables/PoiGeoCalcService.html":{},"classes/ThemeQuizz.html":{}}}],["2.0.1",{"_index":2324,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":2327,"title":{},"body":{"dependencies.html":{}}}],["2.26.0",{"_index":2326,"title":{},"body":{"dependencies.html":{}}}],["2/12",{"_index":2286,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":2258,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":352,"title":{},"body":{"classes/Challenge.html":{},"coverage.html":{}}}],["200",{"_index":2108,"title":{},"body":{"classes/User.html":{}}}],["2020",{"_index":493,"title":{},"body":{"classes/Company.html":{}}}],["24",{"_index":2449,"title":{},"body":{"overview.html":{}}}],["25",{"_index":1776,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{}}}],["255",{"_index":2106,"title":{},"body":{"classes/User.html":{}}}],["3.0.0",{"_index":2305,"title":{},"body":{"dependencies.html":{}}}],["3.0.7",{"_index":2311,"title":{},"body":{"dependencies.html":{}}}],["3.21.2",{"_index":2322,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2257,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2292,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1219,"title":{},"body":{"classes/Poi.html":{}}}],["300",{"_index":742,"title":{},"body":{"classes/ImgPoi.html":{},"classes/Poi.html":{},"classes/ThemeQuizz.html":{}}}],["308",{"_index":2151,"title":{},"body":{"controllers/UserController.html":{}}}],["308)@usepipes(new",{"_index":2128,"title":{},"body":{"controllers/UserController.html":{}}}],["32",{"_index":2450,"title":{},"body":{"overview.html":{}}}],["33",{"_index":2276,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["3600s",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.0",{"_index":2329,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":2337,"title":{},"body":{"dependencies.html":{}}}],["4.2.3",{"_index":2302,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2259,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":498,"title":{},"body":{"classes/Company.html":{}}}],["42",{"_index":2451,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":2320,"title":{},"body":{"dependencies.html":{}}}],["5/15",{"_index":2288,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":525,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"injectables/StatsService.html":{},"classes/User.html":{}}}],["500",{"_index":519,"title":{},"body":{"classes/Company.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{}}}],["54",{"_index":2266,"title":{},"body":{"coverage.html":{}}}],["5ea565",{"_index":1772,"title":{},"body":{"classes/Tag.html":{}}}],["6",{"_index":1221,"title":{},"body":{"classes/Poi.html":{}}}],["6.1.1",{"_index":2299,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2303,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":2334,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":2298,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":2267,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2265,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2291,"title":{},"body":{"coverage.html":{}}}],["6371e3",{"_index":1378,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["70",{"_index":2001,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["75",{"_index":502,"title":{},"body":{"classes/Company.html":{},"classes/KnowIt.html":{}}}],["750",{"_index":994,"title":{},"body":{"classes/KnowIt.html":{}}}],["81",{"_index":2270,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":2268,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2264,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":25,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":19,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{}}}],["accesstoken",{"_index":1,"title":{"classes/AccessToken.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["accesstoken(token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstokeninterfaces",{"_index":16,"title":{"interfaces/AccessTokenInterfaces.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["account",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["activity",{"_index":2364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":559,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/PoiDto.html":{},"controllers/UserController.html":{}}}],["addanswerquizz",{"_index":1577,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["addanswerquizz(questionquizzdto",{"_index":1583,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["addappuser",{"_index":2122,"title":{},"body":{"controllers/UserController.html":{}}}],["addappuser(@body",{"_index":2152,"title":{},"body":{"controllers/UserController.html":{}}}],["addappuser(appuserdto",{"_index":2126,"title":{},"body":{"controllers/UserController.html":{}}}],["addchallenge",{"_index":372,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["addchallenge(@body",{"_index":412,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["addchallenge(challengedto",{"_index":377,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["addcompany",{"_index":548,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["addcompany(@body",{"_index":592,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addcompany(companydto",{"_index":554,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["addcrystal",{"_index":2180,"title":{},"body":{"injectables/UserService.html":{}}}],["addcrystal(crystal",{"_index":2191,"title":{},"body":{"injectables/UserService.html":{}}}],["adddata",{"_index":2237,"title":{},"body":{"injectables/UserService.html":{}}}],["added",{"_index":560,"title":{},"body":{"controllers/CompanyController.html":{}}}],["addem",{"_index":2123,"title":{},"body":{"controllers/UserController.html":{}}}],["addem(@param('em",{"_index":2155,"title":{},"body":{"controllers/UserController.html":{}}}],["addem(em",{"_index":2130,"title":{},"body":{"controllers/UserController.html":{}}}],["addgreenscore",{"_index":2040,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addgreenscore(typegreenscoredto",{"_index":2046,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["addimgpoi",{"_index":774,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["addimgpoi(imgpoi",{"_index":780,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["addjointagpoi",{"_index":808,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjointagpoi(poitoadd",{"_index":818,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["addjoinuserchallenge",{"_index":869,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["addjoinuserchallenge(challenge",{"_index":874,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["addjoinuserpoi",{"_index":912,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["addjoinuserpoi(joinuserpoi",{"_index":916,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["addjoinuserthemequizz",{"_index":950,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["addjoinuserthemequizz(user",{"_index":955,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["addknowit",{"_index":1003,"title":{},"body":{"controllers/KnowItController.html":{},"injectables/KnowItService.html":{}}}],["addknowit(@body",{"_index":1021,"title":{},"body":{"controllers/KnowItController.html":{}}}],["addknowit(knowit",{"_index":1044,"title":{},"body":{"injectables/KnowItService.html":{}}}],["addknowit(knowitdto",{"_index":1006,"title":{},"body":{"controllers/KnowItController.html":{}}}],["addmanypercenttypedcandnewtype(@body",{"_index":1095,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addnewpercenttypegcandpoi(@body",{"_index":1092,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["addpercenttypegcandpoi",{"_index":1121,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegcandpoi(percenttypegcandpoi",{"_index":1130,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpercenttypegreenscoreandpoiservice",{"_index":1151,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["addpoi",{"_index":1238,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["addpoi(@body",{"_index":1290,"title":{},"body":{"controllers/PoiController.html":{}}}],["addpoi(poidto",{"_index":1248,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["addquizz",{"_index":1621,"title":{},"body":{"controllers/QuizzController.html":{},"injectables/QuizzService.html":{}}}],["addquizz(@body",{"_index":1630,"title":{},"body":{"controllers/QuizzController.html":{}}}],["addquizz(quizdto",{"_index":1623,"title":{},"body":{"controllers/QuizzController.html":{}}}],["addquizz(quizzdto",{"_index":1650,"title":{},"body":{"injectables/QuizzService.html":{}}}],["address",{"_index":475,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["addtag",{"_index":1780,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addtag(@body",{"_index":1799,"title":{},"body":{"controllers/TagsController.html":{}}}],["addtag(tagdto",{"_index":1784,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["addthemeandquizz",{"_index":1912,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["addthemeandquizz(themeandquizzdto",{"_index":1918,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["addthemequizz",{"_index":1868,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["addthemequizz(@body",{"_index":1891,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["addthemequizz(themeandquizzdto",{"_index":1873,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["addthemetoquizz",{"_index":1933,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["addthemetoquizz.question.themequizz",{"_index":1934,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["addtype",{"_index":1968,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtype(@body",{"_index":1987,"title":{},"body":{"controllers/TypeController.html":{}}}],["addtype(typedto",{"_index":1972,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["addtypegreenscore",{"_index":2004,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(@body",{"_index":2021,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["addtypegreenscore(typegreenscoreandpoidto",{"_index":2008,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["adduser",{"_index":2124,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduser(@body",{"_index":2145,"title":{},"body":{"controllers/UserController.html":{}}}],["adduser(userdto",{"_index":2134,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserapp",{"_index":2181,"title":{},"body":{"injectables/UserService.html":{}}}],["adduserapp(userappdto",{"_index":2194,"title":{},"body":{"injectables/UserService.html":{}}}],["admin",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["adresse",{"_index":2235,"title":{},"body":{"injectables/UserService.html":{}}}],["agence",{"_index":2351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["allows",{"_index":10,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{}}}],["allpercent",{"_index":1170,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.foreach((percent",{"_index":1173,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpercent.length",{"_index":1171,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["allpoi",{"_index":1491,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoi.map(async",{"_index":1494,"title":{},"body":{"injectables/PoiService.html":{}}}],["allpoiwithtagsandtypespromise",{"_index":1493,"title":{},"body":{"injectables/PoiService.html":{}}}],["already",{"_index":685,"title":{},"body":{"injectables/CompanyService.html":{}}}],["ancestorwhere",{"_index":1447,"title":{},"body":{"injectables/PoiService.html":{}}}],["answ",{"_index":1952,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["answ.goodanswer",{"_index":1955,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["answer",{"_index":1555,"title":{},"body":{"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["answer.idanswer",{"_index":1954,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["answer.quizz",{"_index":1658,"title":{},"body":{"injectables/QuizzService.html":{}}}],["answered",{"_index":888,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["answers",{"_index":1612,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{},"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{},"classes/ValidationDto.html":{}}}],["api",{"_index":2386,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@apiunauthorizedresponse()@apiokresponse()@useguards(undefined)@get('profile",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["apibody",{"_index":584,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apicreatedresponse",{"_index":585,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiforbiddenresponse()@post()@usepipes(new",{"_index":1250,"title":{},"body":{"controllers/PoiController.html":{}}}],["apicreatedresponse()@apiunauthorizedresponse()@apibody({type",{"_index":556,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiforbiddenresponse",{"_index":1284,"title":{},"body":{"controllers/PoiController.html":{}}}],["apinotfoundresponse",{"_index":586,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apiokresponse",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get('one/:id')@usepipes(new",{"_index":1259,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('user",{"_index":1256,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@put(':id')@useguards(roleguard)@usepipes(new",{"_index":1276,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":1273,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiforbiddenresponse()@useguards(roleguard)@roles('admin')@get('order/name",{"_index":1271,"title":{},"body":{"controllers/PoiController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":562,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":570,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@apinotfoundresponse()@useguards(roleguard)@roles('admin')@put(':id')@usepipes(new",{"_index":574,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(roleguard)@roles('admin')@get('order/date",{"_index":567,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apiokresponse()@apiunauthorizedresponse()@useguards(undefined)@post('auth/login",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":288,"title":{},"body":{"classes/AppUserDto.html":{},"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizzDto.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{}}}],["apiproperty()@column",{"_index":1073,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@column({length",{"_index":1775,"title":{},"body":{"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty()@isboolean",{"_index":1568,"title":{},"body":{"classes/QuestionQuizzDto.html":{}}}],["apiproperty()@isdefined()@validatenested()@type(undefined",{"_index":1613,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ValidationDto.html":{}}}],["apiproperty()@isemail",{"_index":1062,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isnumber",{"_index":1109,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["apiproperty()@isstring",{"_index":1060,"title":{},"body":{"classes/LoginDto.html":{},"classes/QuestionQuizzDto.html":{},"classes/TypeGreenScoreDto.html":{}}}],["apiproperty()@manytoone(undefined",{"_index":1076,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["apiproperty()@primarygeneratedcolumn",{"_index":1071,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Tag.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{}}}],["apiproperty({description",{"_index":269,"title":{},"body":{"classes/AppUserDto.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":643,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isnumber()@isoptional",{"_index":1324,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apipropertyoptional()@isoptional",{"_index":622,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["apipropertyoptional({description",{"_index":630,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["apipropertyoptional({type",{"_index":1337,"title":{},"body":{"injectables/PoiDto.html":{}}}],["apis",{"_index":2382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apitags",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PoiController.html":{},"controllers/QuestionQuizzController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["apitags('challenge",{"_index":408,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["apitags('company",{"_index":587,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apitags('know",{"_index":1019,"title":{},"body":{"controllers/KnowItController.html":{}}}],["apitags('login",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('poi",{"_index":1287,"title":{},"body":{"controllers/PoiController.html":{}}}],["apitags('quizz",{"_index":1628,"title":{},"body":{"controllers/QuizzController.html":{}}}],["apitags('stats",{"_index":1727,"title":{},"body":{"controllers/StatsController.html":{}}}],["apitags('tags",{"_index":1797,"title":{},"body":{"controllers/TagsController.html":{}}}],["apitags('theme",{"_index":1889,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["apitags('type",{"_index":1985,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["apitags('user",{"_index":2143,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["app",{"_index":2371,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app.controller",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["app.module.ts",{"_index":2118,"title":{},"body":{"modules/UserAppModule.html":{}}}],["app.service",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{}}}],["app.service.ts",{"_index":2119,"title":{},"body":{"injectables/UserAppService.html":{},"coverage.html":{}}}],["app/user",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["appcontroller",{"_index":59,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":119,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":2375,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appservice",{"_index":153,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appuserdto",{"_index":263,"title":{"classes/AppUserDto.html":{}},"body":{"classes/AppUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["argumentmetadata",{"_index":1192,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["around",{"_index":516,"title":{},"body":{"classes/Company.html":{}}}],["array",{"_index":1338,"title":{},"body":{"injectables/PoiDto.html":{}}}],["array.isarray(newvalue.typegreenscore",{"_index":1542,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["asc",{"_index":696,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["async",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":52,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/PoiDto.html":{}}}],["auth.service",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/access",{"_index":96,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/auth.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["authentication",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":94,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":130,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authorize",{"_index":57,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["authservice",{"_index":92,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autre",{"_index":2357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["avez",{"_index":1945,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["await",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["back",{"_index":2385,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":880,"title":{},"body":{"injectables/JoinUserChallengeService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/ThemeQuizzService.html":{}}}],["badrequestexception('already",{"_index":887,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["badrequestexception('idgreen",{"_index":1550,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["badrequestexception('vous",{"_index":1944,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["base",{"_index":2408,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["bcrypt.compare(pass",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":2211,"title":{},"body":{"injectables/UserService.html":{}}}],["begin",{"_index":497,"title":{},"body":{"classes/Company.html":{}}}],["begindeal",{"_index":476,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["bio",{"_index":1808,"title":{},"body":{"classes/TagsDto.html":{}}}],["body",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":760,"title":{},"body":{"classes/ImgPoiDto.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"guards/RoleGuard.html":{}}}],["bootstrap",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2447,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2444,"title":{},"body":{"modules.html":{}}}],["build",{"_index":2423,"title":{},"body":{"index.html":{}}}],["calc",{"_index":1385,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["calcdist",{"_index":1360,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["calcdist(poi",{"_index":1364,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["call",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["callhandler",{"_index":705,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["canactivate",{"_index":1673,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":1677,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cascade",{"_index":746,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":748,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/User.html":{}}}],["catch",{"_index":468,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["ce",{"_index":1948,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["cf",{"_index":34,"title":{},"body":{"classes/AccessToken.html":{}}}],["challenge",{"_index":218,"title":{"classes/Challenge.html":{}},"body":{"modules/AppModule.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"coverage.html":{}}}],["challenge.controller",{"_index":443,"title":{},"body":{"modules/ChallengeModule.html":{}}}],["challenge.doit",{"_index":465,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["challenge.id",{"_index":857,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challenge.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengeModule.html":{}}}],["challenge.module.ts",{"_index":865,"title":{},"body":{"modules/JoinUserChallengeModule.html":{}}}],["challenge.service",{"_index":399,"title":{},"body":{"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"modules/JoinUserChallengeModule.html":{}}}],["challenge.service.ts",{"_index":868,"title":{},"body":{"injectables/JoinUserChallengeService.html":{},"coverage.html":{}}}],["challenge.service.ts:10",{"_index":872,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["challenge.service.ts:17",{"_index":879,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["challenge.service.ts:26",{"_index":875,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["challenge.service.ts:42",{"_index":877,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["challenge/challenge.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["challenge/challengeentity",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinUserChallenge.html":{},"injectables/JoinUserChallengeService.html":{}}}],["challenge/join",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"coverage.html":{}}}],["challenge/joinuserchallengedto",{"_index":407,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["challenge/joinuserchallengedto.ts",{"_index":858,"title":{},"body":{"classes/JoinUserChallengeDto.html":{},"coverage.html":{}}}],["challenge/joinuserchallengedto.ts:5",{"_index":860,"title":{},"body":{"classes/JoinUserChallengeDto.html":{}}}],["challenge/joinuserchallengedto.ts:8",{"_index":859,"title":{},"body":{"classes/JoinUserChallengeDto.html":{}}}],["challenge/joinuserchallengeentity",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["challenge/joinuserchallengeentity.ts",{"_index":850,"title":{},"body":{"classes/JoinUserChallenge.html":{},"coverage.html":{}}}],["challenge/joinuserchallengeentity.ts:13",{"_index":853,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challenge/joinuserchallengeentity.ts:22",{"_index":852,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challenge/joinuserchallengeentity.ts:31",{"_index":855,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challenge/joinuserchallengeentity.ts:8",{"_index":854,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challengecontroller",{"_index":369,"title":{"controllers/ChallengeController.html":{}},"body":{"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"coverage.html":{}}}],["challengedto",{"_index":378,"title":{"classes/ChallengeDto.html":{}},"body":{"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"coverage.html":{}}}],["challengeentity",{"_index":405,"title":{},"body":{"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{}}}],["challengeid",{"_index":851,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["challengemodule",{"_index":131,"title":{"modules/ChallengeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengeModule.html":{},"modules.html":{},"overview.html":{}}}],["challengerepository",{"_index":451,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["challenges",{"_index":463,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["challengeservice",{"_index":398,"title":{"injectables/ChallengeService.html":{}},"body":{"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"coverage.html":{},"overview.html":{}}}],["check",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["checkanswer",{"_index":1578,"title":{},"body":{"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["checkanswer(idquizz",{"_index":1585,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["checkanswers",{"_index":1913,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["checkanswers(answers",{"_index":1920,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["checkiftagjoin",{"_index":1510,"title":{},"body":{"injectables/PoiService.html":{}}}],["checknbanswer",{"_index":1950,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["checktag",{"_index":809,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["checktag(tag",{"_index":822,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["checkvalidation",{"_index":870,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["checkvalidation(user",{"_index":876,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["city",{"_index":477,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["class",{"_index":0,"title":{"classes/AccessToken.html":{},"classes/AppUserDto.html":{},"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessToken.html":{},"classes/AppUserDto.html":{},"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{},"overview.html":{}}}],["client",{"_index":505,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["client'})@isnumberstring",{"_index":633,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["client'})@isstring",{"_index":613,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["cluster_appmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_challengemodule",{"_index":438,"title":{},"body":{"modules/ChallengeModule.html":{},"overview.html":{}}}],["cluster_challengemodule_exports",{"_index":440,"title":{},"body":{"modules/ChallengeModule.html":{},"overview.html":{}}}],["cluster_challengemodule_imports",{"_index":439,"title":{},"body":{"modules/ChallengeModule.html":{}}}],["cluster_challengemodule_providers",{"_index":441,"title":{},"body":{"modules/ChallengeModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":646,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_exports",{"_index":647,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":648,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule",{"_index":732,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_greenscoremodule_providers",{"_index":733,"title":{},"body":{"modules/GreenScoreModule.html":{},"overview.html":{}}}],["cluster_imgpoimodule",{"_index":765,"title":{},"body":{"modules/ImgPoiModule.html":{},"overview.html":{}}}],["cluster_imgpoimodule_exports",{"_index":766,"title":{},"body":{"modules/ImgPoiModule.html":{},"overview.html":{}}}],["cluster_imgpoimodule_providers",{"_index":767,"title":{},"body":{"modules/ImgPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule",{"_index":803,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_exports",{"_index":804,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_jointagpoimodule_providers",{"_index":805,"title":{},"body":{"modules/JoinTagPoiModule.html":{},"overview.html":{}}}],["cluster_joinuserchallengemodule",{"_index":861,"title":{},"body":{"modules/JoinUserChallengeModule.html":{},"overview.html":{}}}],["cluster_joinuserchallengemodule_exports",{"_index":863,"title":{},"body":{"modules/JoinUserChallengeModule.html":{},"overview.html":{}}}],["cluster_joinuserchallengemodule_imports",{"_index":862,"title":{},"body":{"modules/JoinUserChallengeModule.html":{}}}],["cluster_joinuserchallengemodule_providers",{"_index":864,"title":{},"body":{"modules/JoinUserChallengeModule.html":{},"overview.html":{}}}],["cluster_joinuserpoimodule",{"_index":906,"title":{},"body":{"modules/JoinUserPoiModule.html":{},"overview.html":{}}}],["cluster_joinuserpoimodule_exports",{"_index":907,"title":{},"body":{"modules/JoinUserPoiModule.html":{},"overview.html":{}}}],["cluster_joinuserpoimodule_providers",{"_index":908,"title":{},"body":{"modules/JoinUserPoiModule.html":{},"overview.html":{}}}],["cluster_joinuserquizzmodule",{"_index":923,"title":{},"body":{"modules/JoinUserQuizzModule.html":{},"overview.html":{}}}],["cluster_joinuserquizzmodule_providers",{"_index":924,"title":{},"body":{"modules/JoinUserQuizzModule.html":{},"overview.html":{}}}],["cluster_joinuserthemequizzmodule",{"_index":944,"title":{},"body":{"modules/JoinUserThemeQuizzModule.html":{},"overview.html":{}}}],["cluster_joinuserthemequizzmodule_exports",{"_index":945,"title":{},"body":{"modules/JoinUserThemeQuizzModule.html":{},"overview.html":{}}}],["cluster_joinuserthemequizzmodule_providers",{"_index":946,"title":{},"body":{"modules/JoinUserThemeQuizzModule.html":{},"overview.html":{}}}],["cluster_knowitmodule",{"_index":1033,"title":{},"body":{"modules/KnowItModule.html":{},"overview.html":{}}}],["cluster_knowitmodule_exports",{"_index":1034,"title":{},"body":{"modules/KnowItModule.html":{},"overview.html":{}}}],["cluster_knowitmodule_providers",{"_index":1035,"title":{},"body":{"modules/KnowItModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule",{"_index":1115,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_exports",{"_index":1116,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_percenttypegreenscoreandpoimodule_providers",{"_index":1117,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"overview.html":{}}}],["cluster_poimodule",{"_index":1403,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_exports",{"_index":1405,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_poimodule_imports",{"_index":1404,"title":{},"body":{"modules/PoiModule.html":{}}}],["cluster_poimodule_providers",{"_index":1406,"title":{},"body":{"modules/PoiModule.html":{},"overview.html":{}}}],["cluster_questionquizzmodule",{"_index":1570,"title":{},"body":{"modules/QuestionQuizzModule.html":{},"overview.html":{}}}],["cluster_questionquizzmodule_exports",{"_index":1571,"title":{},"body":{"modules/QuestionQuizzModule.html":{},"overview.html":{}}}],["cluster_questionquizzmodule_providers",{"_index":1572,"title":{},"body":{"modules/QuestionQuizzModule.html":{},"overview.html":{}}}],["cluster_quizzmodule",{"_index":1637,"title":{},"body":{"modules/QuizzModule.html":{},"overview.html":{}}}],["cluster_quizzmodule_exports",{"_index":1639,"title":{},"body":{"modules/QuizzModule.html":{},"overview.html":{}}}],["cluster_quizzmodule_imports",{"_index":1638,"title":{},"body":{"modules/QuizzModule.html":{}}}],["cluster_quizzmodule_providers",{"_index":1640,"title":{},"body":{"modules/QuizzModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1688,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1689,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1690,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_statsmodule",{"_index":1730,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_statsmodule_imports",{"_index":1731,"title":{},"body":{"modules/StatsModule.html":{}}}],["cluster_statsmodule_providers",{"_index":1732,"title":{},"body":{"modules/StatsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":1814,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_exports",{"_index":1815,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":1816,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_themequizzmodule",{"_index":1908,"title":{},"body":{"modules/ThemeQuizzModule.html":{},"overview.html":{}}}],["cluster_themequizzmodule_imports",{"_index":1909,"title":{},"body":{"modules/ThemeQuizzModule.html":{}}}],["cluster_themequizzmodule_providers",{"_index":1910,"title":{},"body":{"modules/ThemeQuizzModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule",{"_index":2036,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_exports",{"_index":2037,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typegreenscoremodule_providers",{"_index":2038,"title":{},"body":{"modules/TypeGreenScoreModule.html":{},"overview.html":{}}}],["cluster_typemodule",{"_index":2065,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_exports",{"_index":2066,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_typemodule_providers",{"_index":2067,"title":{},"body":{"modules/TypeModule.html":{},"overview.html":{}}}],["cluster_userappmodule",{"_index":2114,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_userappmodule_providers",{"_index":2115,"title":{},"body":{"modules/UserAppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2170,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2172,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2171,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":2173,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["clément",{"_index":2392,"title":{},"body":{"index.html":{}}}],["co",{"_index":540,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["code",{"_index":536,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colortag",{"_index":1771,"title":{},"body":{"classes/Tag.html":{}}}],["column",{"_index":365,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/KnowIt.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["column({default",{"_index":351,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/User.html":{}}}],["column({length",{"_index":487,"title":{},"body":{"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/KnowIt.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Role.html":{},"classes/ThemeQuizz.html":{},"classes/User.html":{}}}],["column({nullable",{"_index":1212,"title":{},"body":{"classes/Poi.html":{},"classes/ThemeQuizz.html":{}}}],["column({type",{"_index":354,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"classes/KnowIt.html":{},"classes/Poi.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{}}}],["column({unique",{"_index":523,"title":{},"body":{"classes/Company.html":{}}}],["commande",{"_index":2410,"title":{},"body":{"index.html":{}}}],["company",{"_index":172,"title":{"classes/Company.html":{}},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/StatsService.html":{},"classes/TypeDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["company'})@isstring",{"_index":626,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["company.controller",{"_index":650,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.id",{"_index":2113,"title":{},"body":{"classes/User.html":{}}}],["company.length",{"_index":682,"title":{},"body":{"injectables/CompanyService.html":{}}}],["company.service",{"_index":579,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/UserModule.html":{}}}],["company/company.service",{"_index":1372,"title":{},"body":{"injectables/PoiGeoCalcService.html":{},"injectables/StatsService.html":{},"injectables/UserService.html":{}}}],["company/companyentity",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"injectables/PoiGeoCalcService.html":{},"classes/User.html":{}}}],["company/enum/type.enum",{"_index":1983,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["companycontroller",{"_index":544,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companydata",{"_index":688,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydata.id",{"_index":689,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companydto",{"_index":555,"title":{"injectables/CompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"coverage.html":{}}}],["companyentity",{"_index":580,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["companyid",{"_index":2099,"title":{},"body":{"classes/User.html":{}}}],["companyinterface",{"_index":638,"title":{"interfaces/CompanyInterface.html":{}},"body":{"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["companymodule",{"_index":132,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["companyrepository",{"_index":661,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companys",{"_index":547,"title":{},"body":{"controllers/CompanyController.html":{}}}],["companyservice",{"_index":578,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/StatsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["companytype",{"_index":1754,"title":{},"body":{"injectables/StatsService.html":{}}}],["companytypepromise",{"_index":1752,"title":{},"body":{"injectables/StatsService.html":{}}}],["compodoc(http://${url}:8081",{"_index":2405,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2426,"title":{},"body":{"index.html":{}}}],["compose",{"_index":2416,"title":{},"body":{"index.html":{}}}],["compression",{"_index":2314,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["compte",{"_index":2355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["conflictexception",{"_index":678,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/UserService.html":{}}}],["conflictexception('bien",{"_index":1957,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["conflictexception('cette",{"_index":2234,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception('une",{"_index":1595,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["conflictexception(`client",{"_index":684,"title":{},"body":{"injectables/CompanyService.html":{}}}],["connect",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"injectables/LocalStrategy.html":{}}}],["connection",{"_index":1419,"title":{},"body":{"injectables/PoiService.html":{}}}],["console",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"classes/TestStrategy.html":{}}}],["const",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["constructor(accesstoken",{"_index":21,"title":{},"body":{"classes/AccessToken.html":{}}}],["constructor(authservice",{"_index":1053,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(challengerepository",{"_index":448,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["constructor(companyrepository",{"_index":659,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(companyservice",{"_index":1362,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["constructor(imgpoirepository",{"_index":777,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["constructor(jointagpoirepository",{"_index":815,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["constructor(jointagpoiservice",{"_index":1737,"title":{},"body":{"injectables/StatsService.html":{}}}],["constructor(joinuserchallengerepository",{"_index":871,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["constructor(joinuserpoirepository",{"_index":914,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["constructor(joinuserthemequizzrepository",{"_index":952,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["constructor(knowitrepository",{"_index":1041,"title":{},"body":{"injectables/KnowItService.html":{}}}],["constructor(percenttypegreenscoreandpoirepository",{"_index":1127,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["constructor(poi",{"_index":1228,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["constructor(poirepository",{"_index":1418,"title":{},"body":{"injectables/PoiService.html":{}}}],["constructor(private",{"_index":589,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/LocalStrategy.html":{},"guards/RoleGuard.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["constructor(questionquizzrepository",{"_index":1580,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["constructor(quizzrepository",{"_index":1647,"title":{},"body":{"injectables/QuizzService.html":{}}}],["constructor(readonly",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["constructor(reflector",{"_index":1674,"title":{},"body":{"guards/RoleGuard.html":{}}}],["constructor(rolerolerepository",{"_index":1699,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(tagrepository",{"_index":1823,"title":{},"body":{"injectables/TagsService.html":{}}}],["constructor(themequizzrepository",{"_index":1915,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["constructor(typegreenscorerepository",{"_index":2043,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["constructor(typerepository",{"_index":2073,"title":{},"body":{"injectables/TypeService.html":{}}}],["constructor(userrepository",{"_index":2188,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["contains",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["context",{"_index":707,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":1681,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1682,"title":{},"body":{"guards/RoleGuard.html":{}}}],["contract",{"_index":496,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["controller",{"_index":9,"title":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuestionQuizzController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuestionQuizzController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('challenge",{"_index":409,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["controller('company",{"_index":588,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('green",{"_index":731,"title":{},"body":{"controllers/GreenScoreController.html":{}}}],["controller('know",{"_index":1020,"title":{},"body":{"controllers/KnowItController.html":{}}}],["controller('percent",{"_index":1090,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["controller('poi",{"_index":1288,"title":{},"body":{"controllers/PoiController.html":{}}}],["controller('question",{"_index":1564,"title":{},"body":{"controllers/QuestionQuizzController.html":{}}}],["controller('quizz",{"_index":1629,"title":{},"body":{"controllers/QuizzController.html":{}}}],["controller('stats",{"_index":1728,"title":{},"body":{"controllers/StatsController.html":{}}}],["controller('tags",{"_index":1798,"title":{},"body":{"controllers/TagsController.html":{}}}],["controller('theme",{"_index":1890,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["controller('type",{"_index":1986,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["controller('user",{"_index":2144,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"controllers/KnowItController.html":{},"modules/KnowItModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"modules/PoiModule.html":{},"controllers/QuestionQuizzController.html":{},"modules/QuestionQuizzModule.html":{},"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":2316,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cornet",{"_index":2396,"title":{},"body":{"index.html":{}}}],["correct",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["cosmetic",{"_index":2361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countcompany",{"_index":653,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype",{"_index":654,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countnbtype(type",{"_index":665,"title":{},"body":{"injectables/CompanyService.html":{}}}],["countpoi",{"_index":1410,"title":{},"body":{"injectables/PoiService.html":{}}}],["countranggreenscore",{"_index":1122,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["countranggreenscore(rangemax",{"_index":1133,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["counttags",{"_index":810,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttags(tag",{"_index":824,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["counttype",{"_index":1411,"title":{},"body":{"injectables/PoiService.html":{}}}],["counttype(type",{"_index":1426,"title":{},"body":{"injectables/PoiService.html":{}}}],["coverage",{"_index":2253,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":11,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"classes/Company.html":{}}}],["createdate",{"_index":478,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{}}}],["createdatecolumn",{"_index":500,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/User.html":{}}}],["crystal",{"_index":2097,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["crystalgain",{"_index":346,"title":{},"body":{"classes/Challenge.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{}}}],["current_timestamp",{"_index":1000,"title":{},"body":{"classes/KnowIt.html":{}}}],["currentcrystal",{"_index":2241,"title":{},"body":{"injectables/UserService.html":{}}}],["currentcrystal.crystal",{"_index":2244,"title":{},"body":{"injectables/UserService.html":{}}}],["d",{"_index":727,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d+|infinity)$/.test(value",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.domainmail",{"_index":723,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.ispoi",{"_index":721,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags",{"_index":724,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["d.tags.map((tag",{"_index":725,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JwtStrategy.html":{},"injectables/PoiDto.html":{}}}],["data.map((d",{"_index":720,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["database",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/PoiController.html":{}}}],["datapercentandtypegc",{"_index":1096,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["date",{"_index":492,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["date'})@isstring",{"_index":616,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["datecreate",{"_index":347,"title":{},"body":{"classes/Challenge.html":{},"classes/KnowIt.html":{},"classes/Poi.html":{},"injectables/PoiService.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{}}}],["datesignup",{"_index":2098,"title":{},"body":{"classes/User.html":{}}}],["datetime",{"_index":992,"title":{},"body":{"classes/KnowIt.html":{}}}],["db",{"_index":491,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["de",{"_index":2390,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorator/role.decorator",{"_index":403,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"classes/AppUserDto.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"controllers/StatsController.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{}}}],["default",{"_index":362,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/ImgPoiDto.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/KnowIt.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":51,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"injectables/JoinUserPoiService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["defines",{"_index":609,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["delete",{"_index":393,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":418,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apiforbiddenresponse()@apinotfoundresponse()@apibearerauth()@useguards(roleguard)@roles('admin')@usepipes(new",{"_index":1254,"title":{},"body":{"controllers/PoiController.html":{}}}],["delete(':id')@useguards(roleguard)@roles('admin",{"_index":1012,"title":{},"body":{"controllers/KnowItController.html":{},"controllers/ThemeQuizzController.html":{}}}],["delete(':id')@usepipes(new",{"_index":2138,"title":{},"body":{"controllers/UserController.html":{}}}],["deletechallenge",{"_index":373,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["deletechallenge(@param('id",{"_index":419,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["deletechallenge(idchallenge",{"_index":381,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["deletecompany",{"_index":549,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deletecompany(@param('id",{"_index":602,"title":{},"body":{"controllers/CompanyController.html":{}}}],["deletecompany(idcompany",{"_index":561,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["deleteknowit",{"_index":1004,"title":{},"body":{"controllers/KnowItController.html":{},"injectables/KnowItService.html":{}}}],["deleteknowit(@param('id",{"_index":1024,"title":{},"body":{"controllers/KnowItController.html":{}}}],["deleteknowit(idknowit",{"_index":1011,"title":{},"body":{"controllers/KnowItController.html":{},"injectables/KnowItService.html":{}}}],["deletepercentgcandpoi(@param('id",{"_index":1105,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["deletepercenttypegreenscore(idpercentgcandpoi",{"_index":1166,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["deletepoi",{"_index":1239,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["deletepoi(@param('id",{"_index":1301,"title":{},"body":{"controllers/PoiController.html":{}}}],["deletepoi(idpoi",{"_index":1253,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["deletetag",{"_index":1781,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletetag(@param('id",{"_index":1801,"title":{},"body":{"controllers/TagsController.html":{}}}],["deletetag(idtag",{"_index":1788,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deletethemequizz",{"_index":1869,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["deletethemequizz(@param('id",{"_index":1902,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["deletethemequizz(idthemequizz",{"_index":1875,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["deletetype",{"_index":2072,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetype(idtype",{"_index":2077,"title":{},"body":{"injectables/TypeService.html":{}}}],["deletetypegreenscore",{"_index":2005,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deletetypegreenscore(@param('id",{"_index":2027,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["deletetypegreenscore(idtypegreenscore",{"_index":2012,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["deleteuer",{"_index":2125,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(@param('id",{"_index":2147,"title":{},"body":{"controllers/UserController.html":{}}}],["deleteuer(iduser",{"_index":2137,"title":{},"body":{"controllers/UserController.html":{}}}],["deletuser",{"_index":2148,"title":{},"body":{"controllers/UserController.html":{}}}],["deltalambda",{"_index":1384,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["deltaphi",{"_index":1383,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["deltetype",{"_index":1969,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(@param('id",{"_index":1991,"title":{},"body":{"controllers/TypeController.html":{}}}],["deltetype(idtype",{"_index":1976,"title":{},"body":{"controllers/TypeController.html":{}}}],["demo",{"_index":256,"title":{},"body":{"injectables/AppService.html":{}}}],["dependencies",{"_index":121,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"classes/TagsDto.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"index.html":{}}}],["dev",{"_index":2394,"title":{},"body":{"index.html":{}}}],["devdependencies",{"_index":2425,"title":{},"body":{"index.html":{}}}],["different",{"_index":2368,"title":{},"body":{"miscellaneous/functions.html":{}}}],["distance",{"_index":1399,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["distanceinradians",{"_index":1391,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["doc",{"_index":1083,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["dochallenge",{"_index":425,"title":{},"body":{"controllers/ChallengeController.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{}}}],["docker",{"_index":2415,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":2254,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["domain",{"_index":504,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{}}}],["domainmail",{"_index":479,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{}}}],["donnée",{"_index":2409,"title":{},"body":{"index.html":{}}}],["drink",{"_index":2360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["du",{"_index":2388,"title":{},"body":{"index.html":{}}}],["duration",{"_index":1857,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["déj",{"_index":1946,"title":{},"body":{"injectables/ThemeQuizzService.html":{},"injectables/UserService.html":{}}}],["e",{"_index":895,"title":{},"body":{"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserThemeQuizzService.html":{}}}],["ecole",{"_index":2352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["em",{"_index":2133,"title":{},"body":{"controllers/UserController.html":{}}}],["email",{"_index":276,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["email.split('@')[1",{"_index":2222,"title":{},"body":{"injectables/UserService.html":{}}}],["employees",{"_index":506,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["en",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["end",{"_index":510,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["enddeal",{"_index":480,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["entities",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":366,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["entity('challenge",{"_index":368,"title":{},"body":{"classes/Challenge.html":{}}}],["entity('img_poi",{"_index":753,"title":{},"body":{"classes/ImgPoi.html":{}}}],["entity('join_user_challenge",{"_index":856,"title":{},"body":{"classes/JoinUserChallenge.html":{}}}],["entity('join_user_quizz",{"_index":936,"title":{},"body":{"classes/JoinUserQuzz.html":{}}}],["entity('knowit",{"_index":999,"title":{},"body":{"classes/KnowIt.html":{}}}],["entity('question_quizz",{"_index":1561,"title":{},"body":{"classes/QuestionQuizz.html":{}}}],["entity('quizz",{"_index":1609,"title":{},"body":{"classes/Quizz.html":{}}}],["entity('theme_quizz",{"_index":1866,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["entitytypeinterceptor",{"_index":581,"title":{"injectables/EntityTypeInterceptor.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["enum",{"_index":635,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["enum/price.enum",{"_index":1350,"title":{},"body":{"injectables/PoiDto.html":{}}}],["enum/type.enum",{"_index":642,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["enum/typepoienum",{"_index":1353,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{}}}],["enumeration",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumeration[n",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":2340,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["erreur",{"_index":1596,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["essay",{"_index":1958,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["est",{"_index":1597,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["etc",{"_index":543,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["etc...)'})@isstring",{"_index":1810,"title":{},"body":{"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["ex",{"_index":507,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{}}}],["exadecimalcode",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example.com",{"_index":508,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["example.com)'})@isoptional()@isstring",{"_index":619,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["exatorgbaobject",{"_index":716,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exatorgbaobject(tag.colortag",{"_index":726,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["exception",{"_index":673,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["execute",{"_index":2249,"title":{},"body":{"injectables/UserService.html":{}}}],["executioncontext",{"_index":704,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["exist",{"_index":686,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{}}}],["existe",{"_index":2236,"title":{},"body":{"injectables/UserService.html":{}}}],["expect",{"_index":533,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["expect'})@isoptional()@isnumber",{"_index":631,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["expiresin",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":39,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["exports",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":2301,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["extends",{"_index":978,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["extractjwt",{"_index":974,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":982,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["false",{"_index":761,"title":{},"body":{"classes/ImgPoiDto.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserQuzz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{}}}],["false})@joincolumn({name",{"_index":1559,"title":{},"body":{"classes/QuestionQuizz.html":{},"classes/Quizz.html":{}}}],["fashion",{"_index":2362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{}}}],["filterint",{"_index":717,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filterint(elem",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[0].trim",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[1].trim",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[2].trim",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(getvaluerba[3].replace",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filterint(idpoi",{"_index":1296,"title":{},"body":{"controllers/PoiController.html":{}}}],["filterint(idtags",{"_index":1540,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.idtype",{"_index":1545,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(percentandtypegc.percent",{"_index":1547,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["filterint(value.idpoi",{"_index":1197,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.idtypegreenscore",{"_index":1199,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["filterint(value.percent",{"_index":1201,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["find",{"_index":699,"title":{},"body":{"injectables/CompanyService.html":{}}}],["findbypoi(idpoi",{"_index":1161,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["findemail",{"_index":2182,"title":{},"body":{"injectables/UserService.html":{}}}],["findemail(mail",{"_index":2197,"title":{},"body":{"injectables/UserService.html":{}}}],["findone",{"_index":446,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["findone(idchallenge",{"_index":454,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["first",{"_index":270,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{}}}],["firstname",{"_index":266,"title":{},"body":{"classes/AppUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["food",{"_index":2359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formattopercenttgcandpoi",{"_index":1412,"title":{},"body":{"injectables/PoiService.html":{}}}],["formattopercenttgcandpoi(poi",{"_index":1429,"title":{},"body":{"injectables/PoiService.html":{}}}],["forwardref",{"_index":1118,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["found",{"_index":471,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["function",{"_index":2282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":2365,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gain",{"_index":428,"title":{},"body":{"classes/ChallengeDto.html":{},"injectables/ThemeQuizzService.html":{}}}],["generate",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generaterandexadecimalcolor",{"_index":1834,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["get('/one/:id",{"_index":2023,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["get('current",{"_index":415,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["get('historic",{"_index":1313,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('historic')@useguards(roleguard)@roles('user",{"_index":1263,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('nearby",{"_index":1303,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('nearby')@apiforbiddenresponse()@useguards(roleguard)@roles('user",{"_index":1266,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('nearby/:id",{"_index":1306,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('nearby/:id')@apiforbiddenresponse()@useguards(roleguard)@roles('user",{"_index":1269,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('one/:id",{"_index":594,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["get('order/date",{"_index":606,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["get('order/name",{"_index":1298,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('percent/:id",{"_index":1102,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["get('profile",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["get('question/:idtheme",{"_index":1895,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["get('question/:idtheme')@useguards(roleguard)@roles('user",{"_index":1878,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["get('test/:em",{"_index":2154,"title":{},"body":{"controllers/UserController.html":{}}}],["get('test/:em')@useguards(undefined)@usepipes(new",{"_index":2131,"title":{},"body":{"controllers/UserController.html":{}}}],["get('validate/:id",{"_index":1309,"title":{},"body":{"controllers/PoiController.html":{}}}],["get('validate/:id')@useguards(roleguard)@roles('user",{"_index":1280,"title":{},"body":{"controllers/PoiController.html":{}}}],["get()@useguards(roleguard)@roles('user",{"_index":1015,"title":{},"body":{"controllers/KnowItController.html":{},"controllers/QuizzController.html":{},"controllers/ThemeQuizzController.html":{}}}],["get()@useinterceptors(entitytypeinterceptor)@useguards(roleguard)@roles('admin",{"_index":565,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getallcompany",{"_index":550,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["getallcompanytag",{"_index":811,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallcompanytag(poitofind",{"_index":826,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getallpercenttypeandpoi",{"_index":1097,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getallpercenttypegreenscoreandpoi",{"_index":1159,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getallpoi",{"_index":1240,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["getallpoiandtag",{"_index":812,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["getalltag",{"_index":1782,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getalltype",{"_index":2041,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["getalltypegreenscore",{"_index":2006,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getanswerbyquizz",{"_index":1579,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["getanswerbyquizz(quizz",{"_index":1589,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["getbyids",{"_index":2042,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyids(idtypes",{"_index":2050,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["getbyidtypgcandpoi",{"_index":1123,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getbyidtypgcandpoi(poi",{"_index":1137,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getbyuserandthemequizz",{"_index":951,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["getbyuserandthemequizz(user",{"_index":957,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["getchallenge",{"_index":447,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["getchallenges",{"_index":374,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["getcompanyandtags",{"_index":1241,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(@param('id",{"_index":1292,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanyandtags(idpoi",{"_index":1258,"title":{},"body":{"controllers/PoiController.html":{}}}],["getcompanybydomainmail",{"_index":655,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getcompanybydomainmail(await",{"_index":2227,"title":{},"body":{"injectables/UserService.html":{}}}],["getcompanybydomainmail(domainmail",{"_index":669,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getcompanyorderbydate",{"_index":551,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getcount",{"_index":1178,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getcurrentchallenge",{"_index":375,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["getcurrentchallenge(@request",{"_index":416,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["getcurrentchallenge(user",{"_index":387,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["getdistancepoi",{"_index":1361,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["getdistancepoi(idpoi",{"_index":1368,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["getdomainmail",{"_index":2183,"title":{},"body":{"injectables/UserService.html":{}}}],["getdomainmail(email",{"_index":2199,"title":{},"body":{"injectables/UserService.html":{}}}],["getemerald",{"_index":2184,"title":{},"body":{"injectables/UserService.html":{}}}],["getemerald(user",{"_index":2201,"title":{},"body":{"injectables/UserService.html":{}}}],["getenumkey",{"_index":1446,"title":{},"body":{"injectables/PoiService.html":{},"injectables/TypeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenumkey(typeenum",{"_index":2091,"title":{},"body":{"injectables/TypeService.html":{}}}],["getenumkey(typepoienum",{"_index":1534,"title":{},"body":{"injectables/PoiService.html":{}}}],["getgreenscore",{"_index":1736,"title":{},"body":{"injectables/StatsService.html":{}}}],["getgreenscorepassmark",{"_index":1124,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getgreenscorepassmark(poi",{"_index":1139,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["gethello",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["gethistoric",{"_index":913,"title":{},"body":{"injectables/JoinUserPoiService.html":{},"controllers/PoiController.html":{}}}],["gethistoric(@request",{"_index":1314,"title":{},"body":{"controllers/PoiController.html":{}}}],["gethistoric(req",{"_index":1262,"title":{},"body":{"controllers/PoiController.html":{}}}],["gethistoric(user",{"_index":917,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["getimgs",{"_index":775,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["getimgs(poi",{"_index":782,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["getinfrole",{"_index":1696,"title":{},"body":{"injectables/RoleService.html":{}}}],["getinfrole(idrole",{"_index":1702,"title":{},"body":{"injectables/RoleService.html":{}}}],["getknowit",{"_index":1005,"title":{},"body":{"controllers/KnowItController.html":{},"injectables/KnowItService.html":{}}}],["getnearbypoi",{"_index":1242,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{}}}],["getnearbypoi(@request",{"_index":1304,"title":{},"body":{"controllers/PoiController.html":{}}}],["getnearbypoi(req",{"_index":1265,"title":{},"body":{"controllers/PoiController.html":{}}}],["getnearbypoi(user",{"_index":1370,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["getone",{"_index":656,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JoinUserChallengeService.html":{}}}],["getone(idcompany",{"_index":671,"title":{},"body":{"injectables/CompanyService.html":{}}}],["getone(joinuserchallenge",{"_index":878,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["getonecompany",{"_index":552,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(@param('id",{"_index":596,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonecompany(id",{"_index":569,"title":{},"body":{"controllers/CompanyController.html":{}}}],["getonenearbypoi",{"_index":1243,"title":{},"body":{"controllers/PoiController.html":{}}}],["getonenearbypoi(@param('id",{"_index":1307,"title":{},"body":{"controllers/PoiController.html":{}}}],["getonenearbypoi(idpoi",{"_index":1268,"title":{},"body":{"controllers/PoiController.html":{}}}],["getoneorfailbyrole",{"_index":1697,"title":{},"body":{"injectables/RoleService.html":{}}}],["getoneorfailbyrole(roletype",{"_index":1705,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonepercenttypeandpoi(@param('id",{"_index":1099,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getonepercenttypegreenscoreandpoi(idpercent",{"_index":1163,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["getonetag",{"_index":1783,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetag(@param('id",{"_index":1804,"title":{},"body":{"controllers/TagsController.html":{}}}],["getonetag(idtag",{"_index":1792,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["getonetheme",{"_index":1914,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["getonetheme(idtheme",{"_index":1923,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["getonetype",{"_index":1970,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetype(@param('id",{"_index":1989,"title":{},"body":{"controllers/TypeController.html":{}}}],["getonetype(idtype",{"_index":1978,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["getonetypegreenscore",{"_index":2007,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(@param('id",{"_index":2024,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonetypegreenscore(idtypegreenscore",{"_index":2017,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["getonlyrole",{"_index":1698,"title":{},"body":{"injectables/RoleService.html":{}}}],["getonlyrole(roles",{"_index":1708,"title":{},"body":{"injectables/RoleService.html":{}}}],["getpercentofpoi(@param('id",{"_index":1103,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["getpoi",{"_index":1413,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoi(idpoi",{"_index":1433,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags",{"_index":1414,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiandtags(idpoi",{"_index":1435,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoibyname",{"_index":1244,"title":{},"body":{"controllers/PoiController.html":{}}}],["getpoiforuserr(user",{"_index":1503,"title":{},"body":{"injectables/PoiService.html":{}}}],["getpoiorderbydate",{"_index":1245,"title":{},"body":{"controllers/PoiController.html":{}}}],["getprofile",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":71,"title":{},"body":{"controllers/AppController.html":{}}}],["getquestiontheme",{"_index":1870,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["getquestiontheme(@param('idtheme",{"_index":1896,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["getquestiontheme(idtheme",{"_index":1877,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["getquizz",{"_index":1622,"title":{},"body":{"controllers/QuizzController.html":{}}}],["getquizzbytheme",{"_index":1645,"title":{},"body":{"injectables/QuizzService.html":{}}}],["getquizzbytheme(theme",{"_index":1652,"title":{},"body":{"injectables/QuizzService.html":{}}}],["getquizzs",{"_index":1646,"title":{},"body":{"injectables/QuizzService.html":{}}}],["getrawmany",{"_index":847,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/RoleService.html":{}}}],["getschemapath",{"_index":1351,"title":{},"body":{"injectables/PoiDto.html":{}}}],["getstat",{"_index":1723,"title":{},"body":{"controllers/StatsController.html":{},"injectables/StatsService.html":{}}}],["gettags",{"_index":1821,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettags(idstags",{"_index":1830,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettagscompany",{"_index":813,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagscompany(poitofind",{"_index":830,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["gettagsname",{"_index":1822,"title":{},"body":{"injectables/TagsService.html":{}}}],["gettheme",{"_index":1871,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["gettheme(@request",{"_index":1893,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["gettheme(req",{"_index":1881,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["gettheme(user",{"_index":1926,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["getting",{"_index":2383,"title":{"index.html":{}},"body":{}}],["gettype",{"_index":1125,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["gettype(idtype",{"_index":2053,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["gettype(poi",{"_index":1141,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["gettypepoi",{"_index":1415,"title":{},"body":{"injectables/PoiService.html":{}}}],["gettypepoipromise",{"_index":1759,"title":{},"body":{"injectables/StatsService.html":{}}}],["gettypes",{"_index":1971,"title":{},"body":{"controllers/TypeController.html":{},"injectables/TypeService.html":{}}}],["gettypes(idstypes",{"_index":2082,"title":{},"body":{"injectables/TypeService.html":{}}}],["getuser",{"_index":2185,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(userid",{"_index":2203,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail",{"_index":2186,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbymail(email",{"_index":2205,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserpoi",{"_index":1416,"title":{},"body":{"injectables/PoiService.html":{}}}],["getuserpoi(idpoi",{"_index":1438,"title":{},"body":{"injectables/PoiService.html":{}}}],["getvaluerba",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["goodanswer",{"_index":930,"title":{},"body":{"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["grand",{"_index":2354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["green",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["greenscore",{"_index":1203,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/StatsService.html":{}}}],["greenscorecontroller",{"_index":728,"title":{"controllers/GreenScoreController.html":{}},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"coverage.html":{}}}],["greenscoremodule",{"_index":133,"title":{"modules/GreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["greenscoreservice",{"_index":734,"title":{"injectables/GreenScoreService.html":{}},"body":{"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["guard",{"_index":1670,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/role.guard",{"_index":401,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["guards",{"_index":1671,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guess",{"_index":625,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["guillaume",{"_index":2395,"title":{},"body":{"index.html":{}}}],["haller",{"_index":2393,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":2187,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(password",{"_index":2207,"title":{},"body":{"injectables/UserService.html":{}}}],["hasrole",{"_index":1684,"title":{},"body":{"guards/RoleGuard.html":{}}}],["header",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["headers",{"_index":2379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hello",{"_index":261,"title":{},"body":{"injectables/AppService.html":{},"classes/TestStrategy.html":{}}}],["helloo",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["helmet",{"_index":2321,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["helps",{"_index":2373,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":515,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["hex",{"_index":2323,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["hexadecimal",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hexatorgba",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hexatorgba.split('(')[1].split(',').filter((elem",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hextorgba",{"_index":713,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["hextorgba(exadecimalcode",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["high",{"_index":2348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["host",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":2378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://${url}:3000/documentation",{"_index":2406,"title":{},"body":{"index.html":{}}}],["https://docs.nestjs.com/techniques/authentication",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":348,"title":{},"body":{"classes/Challenge.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"injectables/KnowItService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"classes/QuestionQuizz.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/ThemeQuizz.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["idanswer",{"_index":1586,"title":{},"body":{"injectables/QuestionQuizzService.html":{},"classes/SubmitDto.html":{}}}],["idchallenge",{"_index":384,"title":{},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{}}}],["idcompany",{"_index":564,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["identifier",{"_index":2255,"title":{},"body":{"coverage.html":{}}}],["idknowit",{"_index":1014,"title":{},"body":{"controllers/KnowItController.html":{},"injectables/KnowItService.html":{}}}],["idpercent",{"_index":1100,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["idpoi",{"_index":749,"title":{},"body":{"classes/ImgPoi.html":{},"injectables/JoinTagPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{}}}],["idquizz",{"_index":1588,"title":{},"body":{"injectables/QuestionQuizzService.html":{},"classes/SubmitDto.html":{}}}],["idrole",{"_index":1704,"title":{},"body":{"injectables/RoleService.html":{}}}],["idstags",{"_index":1832,"title":{},"body":{"injectables/TagsService.html":{}}}],["idstypes",{"_index":2084,"title":{},"body":{"injectables/TypeService.html":{}}}],["idsup",{"_index":1717,"title":{},"body":{"injectables/RoleService.html":{}}}],["idtag",{"_index":844,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["idtheme",{"_index":1880,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{}}}],["idthemequizz",{"_index":1607,"title":{},"body":{"classes/Quizz.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"classes/ValidationDto.html":{}}}],["idtype",{"_index":1066,"title":{},"body":{"classes/PercentAndIdTag.html":{},"controllers/TypeController.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["idtypegreenscore",{"_index":1077,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{}}}],["idtypes",{"_index":2052,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["iduser",{"_index":2140,"title":{},"body":{"controllers/UserController.html":{}}}],["ignoreexpiration",{"_index":983,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["imateapotexception",{"_index":1057,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["img",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["img.img",{"_index":793,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/PoiService.html":{}}}],["imgbackground",{"_index":1858,"title":{},"body":{"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{}}}],["imgpoi",{"_index":224,"title":{"classes/ImgPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/ImgPoi.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"coverage.html":{}}}],["imgpoidto",{"_index":756,"title":{"classes/ImgPoiDto.html":{}},"body":{"classes/ImgPoiDto.html":{},"injectables/PoiDto.html":{},"coverage.html":{}}}],["imgpoientity",{"_index":771,"title":{},"body":{"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{}}}],["imgpoimodule",{"_index":134,"title":{"modules/ImgPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImgPoiModule.html":{},"modules/PoiModule.html":{},"modules.html":{},"overview.html":{}}}],["imgpoirepository",{"_index":779,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["imgpoiservice",{"_index":768,"title":{"injectables/ImgPoiService.html":{}},"body":{"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"coverage.html":{},"overview.html":{}}}],["imgs",{"_index":786,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/PoiService.html":{}}}],["imgs.map((img",{"_index":792,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/PoiService.html":{}}}],["imgspoi",{"_index":1317,"title":{},"body":{"injectables/PoiDto.html":{}}}],["implements",{"_index":15,"title":{},"body":{"classes/AccessToken.html":{},"injectables/CompanyDto.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/KnowItDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiTransformationPipe.html":{},"guards/RoleGuard.html":{},"classes/TagsDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["import",{"_index":36,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["imports",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["inconnu",{"_index":2221,"title":{},"body":{"injectables/UserService.html":{}}}],["incubateur",{"_index":2356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"injectables/JoinUserPoiService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["infoquizz",{"_index":1851,"title":{},"body":{"classes/ThemeAndQuizzDto.html":{},"injectables/ThemeQuizzService.html":{}}}],["information",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompanyController.html":{}}}],["informations",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["infra/server",{"_index":2397,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":253,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserQuizzService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserQuizzService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":254,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/GreenScoreService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserQuizzService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserAppService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":459,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/KnowItService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["injectrepository(challenge",{"_index":460,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["injectrepository(company",{"_index":680,"title":{},"body":{"injectables/CompanyService.html":{}}}],["injectrepository(imgpoi",{"_index":787,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["injectrepository(jointagpoientity",{"_index":835,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["injectrepository(joinuserchallenge",{"_index":881,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["injectrepository(joinuserpoi",{"_index":920,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["injectrepository(joinuserthemequizz",{"_index":959,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["injectrepository(knowit",{"_index":1048,"title":{},"body":{"injectables/KnowItService.html":{}}}],["injectrepository(percenttypegreenscoreandpoi",{"_index":1149,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["injectrepository(poi",{"_index":1449,"title":{},"body":{"injectables/PoiService.html":{}}}],["injectrepository(questionquizz",{"_index":1591,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["injectrepository(quizz",{"_index":1655,"title":{},"body":{"injectables/QuizzService.html":{}}}],["injectrepository(role",{"_index":1710,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(tag",{"_index":1835,"title":{},"body":{"injectables/TagsService.html":{}}}],["injectrepository(themequizz",{"_index":1929,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["injectrepository(type",{"_index":2085,"title":{},"body":{"injectables/TypeService.html":{}}}],["injectrepository(typegreenscore",{"_index":2056,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["injectrepository(user",{"_index":2209,"title":{},"body":{"injectables/UserService.html":{}}}],["innerjoinandselect('tag",{"_index":843,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["inserttoobject",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.a",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.b",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.g",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inserttoobject.r",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install",{"_index":2414,"title":{},"body":{"index.html":{}}}],["integer",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intercept",{"_index":702,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["intercept(context",{"_index":703,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["interceptor/entity",{"_index":582,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["interest",{"_index":1237,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["interface",{"_index":35,"title":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/JoinUserPoiInterface.html":{},"interfaces/KnowItInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/JoinUserPoiInterface.html":{},"interfaces/KnowItInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interface/company.interface",{"_index":639,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["interface/type.interface",{"_index":1997,"title":{},"body":{"classes/TypeDto.html":{}}}],["interfaces",{"_index":48,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"interfaces/CompanyInterface.html":{},"interfaces/JoinUserPoiInterface.html":{},"interfaces/KnowItInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"interfaces/PoiInterface.html":{},"interfaces/TagsInterface.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["interfaces/access",{"_index":37,"title":{},"body":{"classes/AccessToken.html":{}}}],["interfaces/percent",{"_index":1113,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["interfaces/poi.interface",{"_index":1346,"title":{},"body":{"injectables/PoiDto.html":{}}}],["interfaces/tags.interface",{"_index":1812,"title":{},"body":{"classes/TagsDto.html":{}}}],["interfaces/type",{"_index":2032,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["interfaces/user.interface",{"_index":282,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{}}}],["isarray",{"_index":1347,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isarray()@isoptional",{"_index":1326,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isboolean",{"_index":764,"title":{},"body":{"classes/ImgPoiDto.html":{},"classes/JoinUserChallengeDto.html":{},"classes/QuestionQuizzDto.html":{}}}],["isdate",{"_index":434,"title":{},"body":{"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{}}}],["isdatestring",{"_index":435,"title":{},"body":{"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{}}}],["isdefined",{"_index":1617,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/ValidationDto.html":{}}}],["isemail",{"_index":283,"title":{},"body":{"classes/AppUserDto.html":{},"classes/LoginDto.html":{},"classes/UserDto.html":{}}}],["isenum",{"_index":284,"title":{},"body":{"classes/AppUserDto.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{},"classes/UserDto.html":{}}}],["isenum(priceenum",{"_index":1358,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isenum(roleenum",{"_index":2168,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(typeenum",{"_index":644,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["isenum(typepoienum",{"_index":1357,"title":{},"body":{"injectables/PoiDto.html":{}}}],["ismilitarytime",{"_index":436,"title":{},"body":{"classes/ChallengeDto.html":{}}}],["isnan(percentandtypegc.idtype",{"_index":1548,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnan(percentandtypegc.percent",{"_index":1549,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["isnumber",{"_index":437,"title":{},"body":{"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{},"classes/JoinUserChallengeDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/QuizzDto.html":{},"classes/SubmitDto.html":{},"classes/ValidationDto.html":{}}}],["isnumber()@apiproperty",{"_index":431,"title":{},"body":{"classes/ChallengeDto.html":{},"classes/QuizzDto.html":{},"classes/SubmitDto.html":{},"classes/ValidationDto.html":{}}}],["isnumberstring",{"_index":640,"title":{},"body":{"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["isoptional",{"_index":285,"title":{},"body":{"classes/AppUserDto.html":{},"injectables/CompanyDto.html":{},"classes/ImgPoiDto.html":{},"injectables/PoiDto.html":{}}}],["isoptional()@apiproperty({description",{"_index":275,"title":{},"body":{"classes/AppUserDto.html":{}}}],["isoptional()@isboolean",{"_index":762,"title":{},"body":{"classes/ImgPoiDto.html":{}}}],["isoptional()@isstring",{"_index":1330,"title":{},"body":{"injectables/PoiDto.html":{}}}],["isstring",{"_index":286,"title":{},"body":{"classes/AppUserDto.html":{},"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{},"classes/ImgPoiDto.html":{},"classes/JoinUserChallengeDto.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizzDto.html":{},"classes/QuizzDto.html":{},"classes/TagsDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{}}}],["isstring()@apiproperty",{"_index":429,"title":{},"body":{"classes/ChallengeDto.html":{},"classes/KnowItDto.html":{},"classes/QuizzDto.html":{},"classes/ThemeQuizzDto.html":{}}}],["it.controller",{"_index":1037,"title":{},"body":{"modules/KnowItModule.html":{}}}],["it.controller.ts",{"_index":1002,"title":{},"body":{"controllers/KnowItController.html":{},"coverage.html":{}}}],["it.controller.ts:22",{"_index":1010,"title":{},"body":{"controllers/KnowItController.html":{}}}],["it.controller.ts:29",{"_index":1016,"title":{},"body":{"controllers/KnowItController.html":{}}}],["it.controller.ts:36",{"_index":1013,"title":{},"body":{"controllers/KnowItController.html":{}}}],["it.interface",{"_index":1031,"title":{},"body":{"classes/KnowItDto.html":{}}}],["it.interface.ts",{"_index":1032,"title":{},"body":{"interfaces/KnowItInterface.html":{},"coverage.html":{}}}],["it.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["it.module.ts",{"_index":1036,"title":{},"body":{"modules/KnowItModule.html":{}}}],["it.service",{"_index":1018,"title":{},"body":{"controllers/KnowItController.html":{},"modules/KnowItModule.html":{}}}],["it.service.ts",{"_index":1040,"title":{},"body":{"injectables/KnowItService.html":{},"coverage.html":{}}}],["it.service.ts:13",{"_index":1045,"title":{},"body":{"injectables/KnowItService.html":{}}}],["it.service.ts:17",{"_index":1047,"title":{},"body":{"injectables/KnowItService.html":{}}}],["it.service.ts:23",{"_index":1046,"title":{},"body":{"injectables/KnowItService.html":{}}}],["it.service.ts:7",{"_index":1042,"title":{},"body":{"injectables/KnowItService.html":{}}}],["it/know",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"controllers/KnowItController.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"coverage.html":{}}}],["it/knowitdto.ts",{"_index":1026,"title":{},"body":{"classes/KnowItDto.html":{},"coverage.html":{}}}],["it/knowitdto.ts:12",{"_index":1028,"title":{},"body":{"classes/KnowItDto.html":{}}}],["it/knowitdto.ts:16",{"_index":1029,"title":{},"body":{"classes/KnowItDto.html":{}}}],["it/knowitdto.ts:8",{"_index":1030,"title":{},"body":{"classes/KnowItDto.html":{}}}],["it/knowitentity",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["it/knowitentity.ts",{"_index":990,"title":{},"body":{"classes/KnowIt.html":{},"coverage.html":{}}}],["it/knowitentity.ts:11",{"_index":998,"title":{},"body":{"classes/KnowIt.html":{}}}],["it/knowitentity.ts:16",{"_index":995,"title":{},"body":{"classes/KnowIt.html":{}}}],["it/knowitentity.ts:22",{"_index":993,"title":{},"body":{"classes/KnowIt.html":{}}}],["it/knowitentity.ts:27",{"_index":997,"title":{},"body":{"classes/KnowIt.html":{}}}],["it/knowitentity.ts:6",{"_index":996,"title":{},"body":{"classes/KnowIt.html":{}}}],["jest",{"_index":2435,"title":{},"body":{"index.html":{}}}],["join",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{}}}],["joincolumn",{"_index":751,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["jointagpoi",{"_index":836,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoientity",{"_index":186,"title":{"classes/JoinTagPoiEntity.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"coverage.html":{}}}],["jointagpoimodule",{"_index":135,"title":{"modules/JoinTagPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["jointagpoirepository",{"_index":817,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["jointagpoiservice",{"_index":806,"title":{"injectables/JoinTagPoiService.html":{}},"body":{"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["joinuserchallenge",{"_index":220,"title":{"classes/JoinUserChallenge.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserChallenge.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"coverage.html":{}}}],["joinuserchallenge.challenge",{"_index":883,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["joinuserchallenge.user",{"_index":884,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["joinuserchallengedto",{"_index":406,"title":{"classes/JoinUserChallengeDto.html":{}},"body":{"controllers/ChallengeController.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"coverage.html":{}}}],["joinuserchallengeentity",{"_index":866,"title":{},"body":{"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{}}}],["joinuserchallengemodule",{"_index":136,"title":{"modules/JoinUserChallengeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChallengeModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules.html":{},"overview.html":{}}}],["joinuserchallengerepository",{"_index":873,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["joinuserchallengeservice",{"_index":404,"title":{"injectables/JoinUserChallengeService.html":{}},"body":{"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"coverage.html":{},"overview.html":{}}}],["joinuserpoi",{"_index":230,"title":{"classes/JoinUserPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserPoi.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["joinuserpoidto",{"_index":902,"title":{"classes/JoinUserPoiDto.html":{}},"body":{"classes/JoinUserPoiDto.html":{},"coverage.html":{}}}],["joinuserpoientity",{"_index":910,"title":{},"body":{"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{}}}],["joinuserpoiinterface",{"_index":904,"title":{"interfaces/JoinUserPoiInterface.html":{}},"body":{"interfaces/JoinUserPoiInterface.html":{},"injectables/JoinUserPoiService.html":{},"controllers/PoiController.html":{},"coverage.html":{}}}],["joinuserpoimodule",{"_index":137,"title":{"modules/JoinUserPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/PoiModule.html":{},"modules.html":{},"overview.html":{}}}],["joinuserpoirepository",{"_index":915,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["joinuserpoiservice",{"_index":909,"title":{"injectables/JoinUserPoiService.html":{}},"body":{"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"controllers/PoiController.html":{},"coverage.html":{},"overview.html":{}}}],["joinuserquizzmodule",{"_index":138,"title":{"modules/JoinUserQuizzModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules.html":{},"overview.html":{}}}],["joinuserquizzservice",{"_index":925,"title":{"injectables/JoinUserQuizzService.html":{}},"body":{"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"coverage.html":{},"overview.html":{}}}],["joinuserquzz",{"_index":214,"title":{"classes/JoinUserQuzz.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserQuzz.html":{},"coverage.html":{}}}],["joinuserthemequizz",{"_index":232,"title":{"classes/JoinUserThemeQuizz.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"coverage.html":{}}}],["joinuserthemequizzentity",{"_index":948,"title":{},"body":{"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{}}}],["joinuserthemequizzmodule",{"_index":139,"title":{"modules/JoinUserThemeQuizzModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/ThemeQuizzModule.html":{},"modules.html":{},"overview.html":{}}}],["joinuserthemequizzrepository",{"_index":954,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["joinuserthemequizzservice",{"_index":947,"title":{"injectables/JoinUserThemeQuizzService.html":{}},"body":{"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{},"overview.html":{}}}],["json",{"_index":2400,"title":{},"body":{"index.html":{}}}],["jutqtoadd",{"_index":960,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["jwt",{"_index":13,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":981,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["jwtmodule",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":293,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":969,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["keysenum",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keysenum.push(enumeration[n",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["know",{"_index":54,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"modules/AppModule.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"modules/KnowItModule.html":{}}}],["knowit",{"_index":207,"title":{"classes/KnowIt.html":{}},"body":{"modules/AppModule.html":{},"classes/KnowIt.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"coverage.html":{}}}],["knowitcontroller",{"_index":1001,"title":{"controllers/KnowItController.html":{}},"body":{"controllers/KnowItController.html":{},"modules/KnowItModule.html":{},"coverage.html":{}}}],["knowitdto",{"_index":1007,"title":{"classes/KnowItDto.html":{}},"body":{"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"coverage.html":{}}}],["knowitentity",{"_index":1038,"title":{},"body":{"modules/KnowItModule.html":{},"injectables/KnowItService.html":{}}}],["knowitinterface",{"_index":1027,"title":{"interfaces/KnowItInterface.html":{}},"body":{"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"coverage.html":{}}}],["knowitmodule",{"_index":140,"title":{"modules/KnowItModule.html":{}},"body":{"modules/AppModule.html":{},"modules/KnowItModule.html":{},"modules.html":{},"overview.html":{}}}],["knowitrepository",{"_index":1043,"title":{},"body":{"injectables/KnowItService.html":{}}}],["knowitservice",{"_index":1017,"title":{"injectables/KnowItService.html":{}},"body":{"controllers/KnowItController.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"coverage.html":{},"overview.html":{}}}],["l'api",{"_index":2404,"title":{},"body":{"index.html":{}}}],["l'app",{"_index":2412,"title":{},"body":{"index.html":{}}}],["l'authentification",{"_index":2403,"title":{},"body":{"index.html":{}}}],["lancer",{"_index":2411,"title":{},"body":{"index.html":{}}}],["last",{"_index":273,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{}}}],["lastname",{"_index":267,"title":{},"body":{"classes/AppUserDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{}}}],["lat",{"_index":481,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["latitude",{"_index":514,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["legend",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":524,"title":{},"body":{"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/KnowIt.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["limit",{"_index":2319,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["line:no",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"injectables/StatsService.html":{},"classes/TestStrategy.html":{}}}],["line:variable",{"_index":42,"title":{},"body":{"classes/AccessToken.html":{}}}],["lintprod",{"_index":2422,"title":{},"body":{"index.html":{}}}],["loader",{"_index":2439,"title":{},"body":{"index.html":{}}}],["local",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["local.strategy",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["localhost",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["localstrategy",{"_index":294,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":80,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":82,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logo",{"_index":482,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"interfaces/PoiInterface.html":{}}}],["long",{"_index":483,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["longitude",{"_index":522,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/PoiDto.html":{}}}],["longtext",{"_index":357,"title":{},"body":{"classes/Challenge.html":{},"classes/Poi.html":{}}}],["low",{"_index":2346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["madu",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["maduequipe",{"_index":2391,"title":{},"body":{"index.html":{}}}],["mail",{"_index":268,"title":{},"body":{"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["main",{"_index":2367,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mainimage",{"_index":758,"title":{},"body":{"classes/ImgPoiDto.html":{}}}],["mainimg",{"_index":1204,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{}}}],["manage",{"_index":546,"title":{},"body":{"controllers/CompanyController.html":{}}}],["many",{"_index":531,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["manytoone",{"_index":752,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["manytoone(type",{"_index":754,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["manytoone(undefined",{"_index":744,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["map",{"_index":711,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.atan2(math.sqrt(calc",{"_index":1392,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.cos(phi1",{"_index":1388,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.cos(phi2",{"_index":1389,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.floor(math.random",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["math.pi",{"_index":1380,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.round(r",{"_index":1394,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.sin(deltalambda",{"_index":1390,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.sin(deltaphi",{"_index":1386,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["math.sqrt(1",{"_index":1393,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["medium",{"_index":2347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":1191,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{},"dependencies.html":{},"index.html":{}}}],["method",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":2370,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":2339,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":118,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":120,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2325,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["more",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["mysql",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["n",{"_index":2093,"title":{},"body":{"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/ImgPoi.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"injectables/JoinUserPoiService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{}}}],["nan",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nbcompany",{"_index":1748,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore",{"_index":1741,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbgreenscore.push(await",{"_index":1744,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbpoi",{"_index":1746,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbtype",{"_index":1755,"title":{},"body":{"injectables/StatsService.html":{}}}],["nbworker",{"_index":484,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{}}}],["nest",{"_index":258,"title":{},"body":{"injectables/AppService.html":{}}}],["nestinterceptor",{"_index":709,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["nestjs",{"_index":2399,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":2427,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/QuestionQuizzController.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":1679,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/jwt",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/passport",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/platform",{"_index":2300,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/schematics",{"_index":2428,"title":{},"body":{"index.html":{}}}],["nestjs/swagger",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"classes/AppUserDto.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"controllers/StatsController.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"classes/ThemeAndQuizzDto.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/testing",{"_index":2429,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["network",{"_index":612,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["new",{"_index":12,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"injectables/CompanyService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["newvalue",{"_index":1195,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["newvalue.idpoi",{"_index":1196,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.idtypegreenscore",{"_index":1198,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.percent",{"_index":1200,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["newvalue.tags",{"_index":1538,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.tags.filter((tag",{"_index":1552,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["newvalue.typegreenscore",{"_index":1541,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["next",{"_index":41,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/StatsService.html":{},"classes/TestStrategy.html":{}}}],["next.handle().pipe(map(data",{"_index":719,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["node",{"_index":2440,"title":{},"body":{"index.html":{}}}],["non",{"_index":2239,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception",{"_index":458,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`challenge",{"_index":470,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["notfoundexception(`company",{"_index":692,"title":{},"body":{"injectables/CompanyService.html":{}}}],["notfoundexception(`percenttypegreenscoreandpoi",{"_index":1165,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["notfoundexception(`poi",{"_index":1478,"title":{},"body":{"injectables/PoiService.html":{}}}],["notfoundexception(`role",{"_index":1712,"title":{},"body":{"injectables/RoleService.html":{}}}],["notfoundexception(`tag",{"_index":1842,"title":{},"body":{"injectables/TagsService.html":{}}}],["notfoundexception(`theme",{"_index":1940,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["notfoundexception(`type",{"_index":2060,"title":{},"body":{"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{}}}],["notfoundexception(`user",{"_index":2217,"title":{},"body":{"injectables/UserService.html":{}}}],["notfoundexception(`utilisateur",{"_index":2220,"title":{},"body":{"injectables/UserService.html":{}}}],["nothing",{"_index":674,"title":{},"body":{"injectables/CompanyService.html":{}}}],["null",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"classes/Challenge.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"injectables/JoinUserThemeQuizzService.html":{},"classes/Poi.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":361,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserPoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{},"classes/User.html":{}}}],["number",{"_index":350,"title":{},"body":{"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"miscellaneous/variables.html":{}}}],["number(value",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyDto.html":{}}}],["observable",{"_index":708,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{}}}],["office",{"_index":2389,"title":{},"body":{"index.html":{}}}],["ondelete",{"_index":747,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["one",{"_index":572,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["onupdate",{"_index":745,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/User.html":{}}}],["option",{"_index":968,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["order",{"_index":695,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbydate",{"_index":657,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/PoiService.html":{}}}],["orderbyname",{"_index":1417,"title":{},"body":{"injectables/PoiService.html":{}}}],["orwhere('id",{"_index":1716,"title":{},"body":{"injectables/RoleService.html":{}}}],["os",{"_index":1984,"title":{},"body":{"controllers/TypeController.html":{}}}],["out",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":611,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["overview",{"_index":2448,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2297,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":43,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parsefloat(poi.lat",{"_index":1374,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["parsefloat(poi.long",{"_index":1376,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["parsefloat(user.user.company.lat",{"_index":1396,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["parsefloat(user.user.company.long",{"_index":1397,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["parseintpipe",{"_index":394,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["parser",{"_index":2309,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["pass",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":976,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["passportmodule",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":973,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["passportstrategy(strategy",{"_index":979,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["password",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["paths",{"_index":2442,"title":{},"body":{"index.html":{}}}],["payload",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["payload.userid",{"_index":985,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["percent",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{}}}],["percent.percent",{"_index":1174,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentandidtag",{"_index":1064,"title":{"classes/PercentAndIdTag.html":{}},"body":{"classes/PercentAndIdTag.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["percentandtype",{"_index":1145,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentandtype.map((percenttype",{"_index":1179,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentandtypegc",{"_index":1551,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.idtype",{"_index":1544,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentandtypegc.percent",{"_index":1546,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["percentgc",{"_index":1167,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percentgcanddto",{"_index":1469,"title":{},"body":{"injectables/PoiService.html":{}}}],["percentpoiantypegcpromise",{"_index":1450,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttype.percent",{"_index":1181,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttype.typegreenscore.id",{"_index":1180,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttype.typegreenscore.typegreenscore",{"_index":1183,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegcandpoi",{"_index":1132,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegcandpoiaddedpromise",{"_index":1467,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoi",{"_index":197,"title":{"classes/PercentTypeGreenScoreAndPoi.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoicontroller",{"_index":1080,"title":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoidto",{"_index":1085,"title":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoientity",{"_index":1086,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiinterface",{"_index":1108,"title":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{}},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["percenttypegreenscoreandpoimodule",{"_index":141,"title":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoirepository",{"_index":1129,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservice",{"_index":1084,"title":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["percenttypegreenscoreandpoiservicedto",{"_index":1152,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoiservicedto.percent",{"_index":1157,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["percenttypegreenscoreandpoitoadd",{"_index":1465,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitoadd.map(async",{"_index":1468,"title":{},"body":{"injectables/PoiService.html":{}}}],["percenttypegreenscoreandpoitransformationpipe",{"_index":1087,"title":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["petit",{"_index":1599,"title":{},"body":{"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["phi1",{"_index":1379,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["phi2",{"_index":1382,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["pipe/percent",{"_index":1088,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["pipe/poi.transformation.pipe",{"_index":1283,"title":{},"body":{"controllers/PoiController.html":{}}}],["pipetransform",{"_index":1194,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["pme",{"_index":1995,"title":{},"body":{"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["poi",{"_index":179,"title":{"classes/Poi.html":{}},"body":{"modules/AppModule.html":{},"classes/ImgPoi.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"injectables/JoinUserPoiService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi'})@isnumberstring",{"_index":1333,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring",{"_index":1318,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi'})@isstring()@isoptional",{"_index":1322,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi.address",{"_index":1515,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.city",{"_index":1517,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.controller",{"_index":1119,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["poi.controller.ts",{"_index":1081,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"coverage.html":{}}}],["poi.description",{"_index":1519,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.distance",{"_index":1482,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.geo.calc.service",{"_index":1286,"title":{},"body":{"controllers/PoiController.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poi.greenscore",{"_index":1479,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.id",{"_index":755,"title":{},"body":{"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserPoi.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi.interface",{"_index":919,"title":{},"body":{"injectables/JoinUserPoiService.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"controllers/PoiController.html":{}}}],["poi.interface.ts",{"_index":905,"title":{},"body":{"interfaces/JoinUserPoiInterface.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi.lat",{"_index":1529,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.long",{"_index":1531,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.module",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["poi.module.ts",{"_index":769,"title":{},"body":{"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["poi.name",{"_index":1521,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.postalcode",{"_index":1523,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.price",{"_index":1525,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi.service",{"_index":770,"title":{},"body":{"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserPoiModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["poi.service.ts",{"_index":773,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"coverage.html":{}}}],["poi.service.ts:107",{"_index":1135,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:114",{"_index":1144,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:124",{"_index":1142,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:14",{"_index":781,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/JoinUserPoiService.html":{}}}],["poi.service.ts:15",{"_index":1128,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:18",{"_index":918,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["poi.service.ts:22",{"_index":783,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["poi.service.ts:24",{"_index":820,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:29",{"_index":1131,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:31",{"_index":785,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["poi.service.ts:35",{"_index":829,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:45",{"_index":833,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:55",{"_index":831,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:67",{"_index":827,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:77",{"_index":1140,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.service.ts:8",{"_index":778,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/JoinUserPoiService.html":{}}}],["poi.service.ts:80",{"_index":825,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:88",{"_index":823,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:9",{"_index":816,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poi.service.ts:98",{"_index":1138,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poi.transformation.pipe",{"_index":1089,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["poi.transformation.pipe.ts",{"_index":1189,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi.transformation.pipe.ts:12",{"_index":1193,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{}}}],["poi.type",{"_index":1527,"title":{},"body":{"injectables/PoiService.html":{}}}],["poi/img",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"coverage.html":{}}}],["poi/imgpoidto",{"_index":1354,"title":{},"body":{"injectables/PoiDto.html":{}}}],["poi/imgpoidto.ts",{"_index":757,"title":{},"body":{"classes/ImgPoiDto.html":{},"coverage.html":{}}}],["poi/imgpoidto.ts:5",{"_index":759,"title":{},"body":{"classes/ImgPoiDto.html":{}}}],["poi/imgpoidto.ts:9",{"_index":763,"title":{},"body":{"classes/ImgPoiDto.html":{}}}],["poi/imgpoientity",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["poi/imgpoientity.ts",{"_index":740,"title":{},"body":{"classes/ImgPoi.html":{},"coverage.html":{}}}],["poi/imgpoientity.ts:12",{"_index":743,"title":{},"body":{"classes/ImgPoi.html":{}}}],["poi/imgpoientity.ts:21",{"_index":750,"title":{},"body":{"classes/ImgPoi.html":{}}}],["poi/imgpoientity.ts:7",{"_index":741,"title":{},"body":{"classes/ImgPoi.html":{}}}],["poi/interfaces/percent",{"_index":1114,"title":{},"body":{"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"coverage.html":{}}}],["poi/join",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/jointagpoientity",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"classes/PoiAndTags.html":{}}}],["poi/jointagpoientity.ts",{"_index":795,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"coverage.html":{}}}],["poi/jointagpoientity.ts:18",{"_index":801,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:27",{"_index":798,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/jointagpoientity.ts:8",{"_index":796,"title":{},"body":{"classes/JoinTagPoiEntity.html":{}}}],["poi/joinuserpoidto.ts",{"_index":903,"title":{},"body":{"classes/JoinUserPoiDto.html":{},"coverage.html":{}}}],["poi/joinuserpoientity",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["poi/joinuserpoientity.ts",{"_index":896,"title":{},"body":{"classes/JoinUserPoi.html":{},"coverage.html":{}}}],["poi/joinuserpoientity.ts:14",{"_index":900,"title":{},"body":{"classes/JoinUserPoi.html":{}}}],["poi/joinuserpoientity.ts:23",{"_index":899,"title":{},"body":{"classes/JoinUserPoi.html":{}}}],["poi/joinuserpoientity.ts:32",{"_index":901,"title":{},"body":{"classes/JoinUserPoi.html":{}}}],["poi/joinuserpoientity.ts:8",{"_index":898,"title":{},"body":{"classes/JoinUserPoi.html":{}}}],["poi/percent",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["poi/percentandidtag",{"_index":2055,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts",{"_index":1107,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:12",{"_index":1111,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:16",{"_index":1112,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoidto.ts:8",{"_index":1110,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoiDto.html":{}}}],["poi/percenttypegreenscoreandpoientity",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"injectables/PoiService.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts",{"_index":1070,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"coverage.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:10",{"_index":1072,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:14",{"_index":1074,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:25",{"_index":1078,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/percenttypegreenscoreandpoientity.ts:35",{"_index":1075,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["poi/pipe/percent",{"_index":1188,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["poi/poi.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/StatsModule.html":{}}}],["poi/poi.service",{"_index":1147,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/StatsService.html":{}}}],["poi/poientity",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"classes/ImgPoi.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poiadded",{"_index":1476,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiandimg",{"_index":788,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["poiandtags",{"_index":1226,"title":{"classes/PoiAndTags.html":{}},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["poicontroller",{"_index":1234,"title":{"controllers/PoiController.html":{}},"body":{"controllers/PoiController.html":{},"modules/PoiModule.html":{},"coverage.html":{}}}],["poidto",{"_index":1249,"title":{"injectables/PoiDto.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poidto.address",{"_index":1516,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.city",{"_index":1518,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.description",{"_index":1520,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.idpoi",{"_index":1513,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.imgspoi",{"_index":1473,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.lat",{"_index":1530,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.long",{"_index":1532,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.name",{"_index":1522,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.postalcode",{"_index":1524,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.price",{"_index":1526,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.tags.map(async",{"_index":1508,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.type",{"_index":1528,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.typegreenscore",{"_index":1458,"title":{},"body":{"injectables/PoiService.html":{}}}],["poidto.typegreenscore.map((type",{"_index":1461,"title":{},"body":{"injectables/PoiService.html":{}}}],["poientity",{"_index":1231,"title":{},"body":{"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{}}}],["poifind",{"_index":1155,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["poigeocalcservice",{"_index":1285,"title":{"injectables/PoiGeoCalcService.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"coverage.html":{},"overview.html":{}}}],["poiid",{"_index":797,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/JoinUserPoi.html":{}}}],["poiinterface",{"_index":1345,"title":{"interfaces/PoiInterface.html":{}},"body":{"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["poimodule",{"_index":142,"title":{"modules/PoiModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["point",{"_index":1236,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiDto.html":{}}}],["poirepository",{"_index":1423,"title":{},"body":{"injectables/PoiService.html":{}}}],["pois",{"_index":518,"title":{},"body":{"classes/Company.html":{},"injectables/PoiGeoCalcService.html":{}}}],["pois.filter((poi",{"_index":1398,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["poiservice",{"_index":1146,"title":{"injectables/PoiService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["poitoadd",{"_index":821,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind",{"_index":828,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitofind.id",{"_index":846,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["poitransformationpipe",{"_index":1282,"title":{"injectables/PoiTransformationPipe.html":{}},"body":{"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["poiwithtype",{"_index":1495,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.distance",{"_index":1504,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.greenscore",{"_index":1497,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.imgs",{"_index":1500,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.tags",{"_index":1496,"title":{},"body":{"injectables/PoiService.html":{}}}],["poiwithtype.typegreenscore",{"_index":1498,"title":{},"body":{"injectables/PoiService.html":{}}}],["port",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["post('and",{"_index":1094,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["post('app/register",{"_index":2149,"title":{},"body":{"controllers/UserController.html":{}}}],["post('app/register')@redirect('/auth/login",{"_index":2127,"title":{},"body":{"controllers/UserController.html":{}}}],["post('auth/login",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["post()@usepipes(new",{"_index":1008,"title":{},"body":{"controllers/KnowItController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/UserController.html":{}}}],["postal",{"_index":535,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["postalcode",{"_index":485,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["pour",{"_index":2402,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":371,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/GreenScoreController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuestionQuizzController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["preset",{"_index":2163,"title":{},"body":{"classes/UserDto.html":{}}}],["prettier",{"_index":2436,"title":{},"body":{"index.html":{}}}],["price",{"_index":1205,"title":{},"body":{"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{}}}],["priceenum",{"_index":1349,"title":{},"body":{"injectables/PoiDto.html":{},"miscellaneous/enumerations.html":{}}}],["priceenum})@isenum(priceenum",{"_index":1335,"title":{},"body":{"injectables/PoiDto.html":{}}}],["primarygeneratedcolumn",{"_index":359,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/Role.html":{},"classes/Tag.html":{},"classes/ThemeQuizz.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"classes/User.html":{}}}],["private",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"injectables/TagsService.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["process.env.db_host",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_name",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_user",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.jwt_token",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["profile",{"_index":66,"title":{},"body":{"controllers/AppController.html":{}}}],["promise",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["promise.all(allpoiwithtagsandtypespromise",{"_index":1502,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(answers.map(async",{"_index":1657,"title":{},"body":{"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["promise.all(challenges.map(async",{"_index":464,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["promise.all(companytypepromise",{"_index":1764,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(gettypepoipromise",{"_index":1763,"title":{},"body":{"injectables/StatsService.html":{}}}],["promise.all(infoquizz.map(async",{"_index":1932,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["promise.all(percentpoiantypegcpromise",{"_index":1455,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(percenttypegcandpoiaddedpromise",{"_index":1471,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(poidto.imgspoi.map",{"_index":1474,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(quizzs.map(async",{"_index":1662,"title":{},"body":{"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["promise.all(tagaddedpromise",{"_index":1472,"title":{},"body":{"injectables/PoiService.html":{}}}],["promise.all(tagaddpromise",{"_index":1514,"title":{},"body":{"injectables/PoiService.html":{}}}],["properly",{"_index":2372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":18,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"classes/AppUserDto.html":{},"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["property",{"_index":31,"title":{},"body":{"classes/AccessToken.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["publicationdate",{"_index":349,"title":{},"body":{"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{},"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{}}}],["put",{"_index":397,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/PoiController.html":{},"controllers/ThemeQuizzController.html":{}}}],["put(':id",{"_index":600,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["put('submit",{"_index":1898,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["put('submit')@useguards(roleguard)@usepipes(validationpipe)@roles('user",{"_index":1885,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["put('validate/:id",{"_index":421,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["question",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"controllers/QuestionQuizzController.html":{},"modules/QuestionQuizzModule.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{}}}],["questionquizz",{"_index":211,"title":{"classes/QuestionQuizz.html":{}},"body":{"modules/AppModule.html":{},"classes/QuestionQuizz.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"coverage.html":{}}}],["questionquizzcontroller",{"_index":1562,"title":{"controllers/QuestionQuizzController.html":{}},"body":{"controllers/QuestionQuizzController.html":{},"modules/QuestionQuizzModule.html":{},"coverage.html":{}}}],["questionquizzdto",{"_index":1565,"title":{"classes/QuestionQuizzDto.html":{}},"body":{"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"classes/QuizzAndQuestionDto.html":{},"coverage.html":{}}}],["questionquizzentity",{"_index":1575,"title":{},"body":{"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{}}}],["questionquizzmodule",{"_index":143,"title":{"modules/QuestionQuizzModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/ThemeQuizzModule.html":{},"modules.html":{},"overview.html":{}}}],["questionquizzrepository",{"_index":1582,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["questionquizzservice",{"_index":1573,"title":{"injectables/QuestionQuizzService.html":{}},"body":{"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{},"overview.html":{}}}],["quizandanswer",{"_index":1663,"title":{},"body":{"injectables/QuizzService.html":{}}}],["quizandanswer.answer",{"_index":1664,"title":{},"body":{"injectables/QuizzService.html":{}}}],["quizdto",{"_index":1625,"title":{},"body":{"controllers/QuizzController.html":{}}}],["quizz",{"_index":209,"title":{"classes/Quizz.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["quizz.answered",{"_index":1937,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.controller",{"_index":1574,"title":{},"body":{"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/ThemeQuizzModule.html":{}}}],["quizz.controller.ts",{"_index":1563,"title":{},"body":{"controllers/QuestionQuizzController.html":{},"controllers/ThemeQuizzController.html":{},"coverage.html":{}}}],["quizz.controller.ts:25",{"_index":1874,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["quizz.controller.ts:32",{"_index":1882,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["quizz.controller.ts:39",{"_index":1879,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["quizz.controller.ts:47",{"_index":1886,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["quizz.controller.ts:55",{"_index":1876,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["quizz.id",{"_index":937,"title":{},"body":{"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{}}}],["quizz.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizzModule.html":{},"modules/ThemeQuizzModule.html":{}}}],["quizz.module.ts",{"_index":926,"title":{},"body":{"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/ThemeQuizzModule.html":{}}}],["quizz.service",{"_index":927,"title":{},"body":{"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/QuestionQuizzModule.html":{},"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts",{"_index":928,"title":{},"body":{"injectables/JoinUserQuizzService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["quizz.service.ts:12",{"_index":1916,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:14",{"_index":1584,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["quizz.service.ts:15",{"_index":956,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["quizz.service.ts:18",{"_index":1590,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["quizz.service.ts:22",{"_index":1919,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:23",{"_index":958,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["quizz.service.ts:27",{"_index":1587,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["quizz.service.ts:33",{"_index":1927,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:41",{"_index":1924,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:51",{"_index":1925,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:56",{"_index":1921,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:8",{"_index":1581,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["quizz.service.ts:87",{"_index":1922,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz.service.ts:9",{"_index":953,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["quizz/join",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["quizz/joinuserquizzentity",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["quizz/joinuserquizzentity.ts",{"_index":929,"title":{},"body":{"classes/JoinUserQuzz.html":{},"coverage.html":{}}}],["quizz/joinuserquizzentity.ts:13",{"_index":931,"title":{},"body":{"classes/JoinUserQuzz.html":{}}}],["quizz/joinuserquizzentity.ts:22",{"_index":934,"title":{},"body":{"classes/JoinUserQuzz.html":{}}}],["quizz/joinuserquizzentity.ts:31",{"_index":935,"title":{},"body":{"classes/JoinUserQuzz.html":{}}}],["quizz/joinuserquizzentity.ts:8",{"_index":932,"title":{},"body":{"classes/JoinUserQuzz.html":{}}}],["quizz/joinuserthemequizzentity",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["quizz/joinuserthemequizzentity.ts",{"_index":938,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{},"coverage.html":{}}}],["quizz/joinuserthemequizzentity.ts:17",{"_index":942,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{}}}],["quizz/joinuserthemequizzentity.ts:26",{"_index":941,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{}}}],["quizz/joinuserthemequizzentity.ts:8",{"_index":939,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{}}}],["quizz/question",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"controllers/QuestionQuizzController.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["quizz/questionquizzdto",{"_index":1618,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{}}}],["quizz/questionquizzdto.ts",{"_index":1566,"title":{},"body":{"classes/QuestionQuizzDto.html":{},"coverage.html":{}}}],["quizz/questionquizzdto.ts:11",{"_index":1569,"title":{},"body":{"classes/QuestionQuizzDto.html":{}}}],["quizz/questionquizzdto.ts:7",{"_index":1567,"title":{},"body":{"classes/QuestionQuizzDto.html":{}}}],["quizz/questionquizzentity",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["quizz/questionquizzentity.ts",{"_index":1554,"title":{},"body":{"classes/QuestionQuizz.html":{},"coverage.html":{}}}],["quizz/questionquizzentity.ts:12",{"_index":1556,"title":{},"body":{"classes/QuestionQuizz.html":{}}}],["quizz/questionquizzentity.ts:17",{"_index":1557,"title":{},"body":{"classes/QuestionQuizz.html":{}}}],["quizz/questionquizzentity.ts:27",{"_index":1560,"title":{},"body":{"classes/QuestionQuizz.html":{}}}],["quizz/questionquizzentity.ts:7",{"_index":1558,"title":{},"body":{"classes/QuestionQuizz.html":{}}}],["quizz/quizz.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/ThemeQuizzModule.html":{}}}],["quizz/quizz.service",{"_index":1928,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizz/quizzandquestiondto",{"_index":1855,"title":{},"body":{"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{}}}],["quizz/quizzentity",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{},"injectables/QuestionQuizzService.html":{}}}],["quizz/submitdto.ts",{"_index":1767,"title":{},"body":{"classes/SubmitDto.html":{},"coverage.html":{}}}],["quizz/submitdto.ts:11",{"_index":1768,"title":{},"body":{"classes/SubmitDto.html":{}}}],["quizz/submitdto.ts:7",{"_index":1769,"title":{},"body":{"classes/SubmitDto.html":{}}}],["quizz/theme",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["quizz/themeandquizzdto.ts",{"_index":1850,"title":{},"body":{"classes/ThemeAndQuizzDto.html":{},"coverage.html":{}}}],["quizz/themeandquizzdto.ts:13",{"_index":1854,"title":{},"body":{"classes/ThemeAndQuizzDto.html":{}}}],["quizz/themeandquizzdto.ts:19",{"_index":1852,"title":{},"body":{"classes/ThemeAndQuizzDto.html":{}}}],["quizz/themequizzdto.ts",{"_index":1904,"title":{},"body":{"classes/ThemeQuizzDto.html":{},"coverage.html":{}}}],["quizz/themequizzdto.ts:13",{"_index":1905,"title":{},"body":{"classes/ThemeQuizzDto.html":{}}}],["quizz/themequizzdto.ts:17",{"_index":1906,"title":{},"body":{"classes/ThemeQuizzDto.html":{}}}],["quizz/themequizzdto.ts:9",{"_index":1907,"title":{},"body":{"classes/ThemeQuizzDto.html":{}}}],["quizz/themequizzentity",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"classes/Quizz.html":{},"injectables/QuizzService.html":{}}}],["quizz/themequizzentity.ts",{"_index":1856,"title":{},"body":{"classes/ThemeQuizz.html":{},"coverage.html":{}}}],["quizz/themequizzentity.ts:11",{"_index":1865,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:18",{"_index":1862,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:23",{"_index":1859,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:30",{"_index":1863,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:35",{"_index":1864,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:40",{"_index":1860,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/themequizzentity.ts:6",{"_index":1861,"title":{},"body":{"classes/ThemeQuizz.html":{}}}],["quizz/validationdto.ts",{"_index":2250,"title":{},"body":{"classes/ValidationDto.html":{},"coverage.html":{}}}],["quizz/validationdto.ts:15",{"_index":2251,"title":{},"body":{"classes/ValidationDto.html":{}}}],["quizz/validationdto.ts:9",{"_index":2252,"title":{},"body":{"classes/ValidationDto.html":{}}}],["quizzandquestiondto",{"_index":1610,"title":{"classes/QuizzAndQuestionDto.html":{}},"body":{"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"coverage.html":{}}}],["quizzcontroller",{"_index":1619,"title":{"controllers/QuizzController.html":{}},"body":{"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"coverage.html":{}}}],["quizzdto",{"_index":1615,"title":{"classes/QuizzDto.html":{}},"body":{"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"coverage.html":{}}}],["quizzentity",{"_index":1642,"title":{},"body":{"modules/QuizzModule.html":{},"injectables/QuizzService.html":{}}}],["quizzid",{"_index":933,"title":{},"body":{"classes/JoinUserQuzz.html":{},"classes/QuestionQuizz.html":{}}}],["quizzmodule",{"_index":144,"title":{"modules/QuizzModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizzModule.html":{},"modules/ThemeQuizzModule.html":{},"modules.html":{},"overview.html":{}}}],["quizzrepository",{"_index":1649,"title":{},"body":{"injectables/QuizzService.html":{}}}],["quizzs",{"_index":1660,"title":{},"body":{"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["quizzs.length",{"_index":1956,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["quizzservice",{"_index":1627,"title":{"injectables/QuizzService.html":{}},"body":{"controllers/QuizzController.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{},"overview.html":{}}}],["r",{"_index":1377,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["random",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":486,"title":{},"body":{"classes/Company.html":{},"injectables/PoiDto.html":{},"injectables/StatsService.html":{}}}],["rangem",{"_index":1177,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemax",{"_index":1136,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rangemin",{"_index":1134,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["rate",{"_index":2318,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["readonly",{"_index":265,"title":{},"body":{"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/ImgPoiDto.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"interfaces/JoinUserPoiInterface.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["recommend",{"_index":897,"title":{},"body":{"classes/JoinUserPoi.html":{}}}],["recover",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["redirect",{"_index":2141,"title":{},"body":{"controllers/UserController.html":{}}}],["redirect('/auth/login",{"_index":2150,"title":{},"body":{"controllers/UserController.html":{}}}],["refacto",{"_index":1456,"title":{},"body":{"injectables/PoiService.html":{}}}],["reflect",{"_index":2331,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["reflector",{"_index":1675,"title":{},"body":{"guards/RoleGuard.html":{}}}],["relations",{"_index":839,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/UserService.html":{}}}],["repeated",{"_index":2380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":449,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/KnowItService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["req",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/PoiController.html":{},"controllers/ThemeQuizzController.html":{}}}],["req.user",{"_index":117,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{}}}],["req.user.user",{"_index":423,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/PoiController.html":{},"controllers/ThemeQuizzController.html":{}}}],["request",{"_index":56,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"injectables/JwtStrategy.html":{},"controllers/PoiController.html":{},"guards/RoleGuard.html":{},"controllers/ThemeQuizzController.html":{},"controllers/UserController.html":{}}}],["request.user",{"_index":1683,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requests",{"_index":2381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["require('hex",{"_index":714,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["reset",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["rest",{"_index":2387,"title":{},"body":{"index.html":{}}}],["restaurant",{"_index":1356,"title":{},"body":{"injectables/PoiDto.html":{}}}],["restaurant)'})@isenum(typepoienum",{"_index":1341,"title":{},"body":{"injectables/PoiDto.html":{}}}],["result",{"_index":45,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":47,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":65,"title":{},"body":{"controllers/AppController.html":{}}}],["return",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"injectables/ChallengeService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserPoiService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"controllers/QuizzController.html":{},"injectables/QuizzService.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reward",{"_index":1206,"title":{},"body":{"classes/Poi.html":{},"classes/ThemeQuizz.html":{},"injectables/ThemeQuizzService.html":{}}}],["rgba",{"_index":715,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rimraf",{"_index":2333,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["role",{"_index":168,"title":{"classes/Role.html":{}},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["role.id",{"_index":2112,"title":{},"body":{"classes/User.html":{}}}],["role.role",{"_index":1719,"title":{},"body":{"injectables/RoleService.html":{}}}],["role.service",{"_index":1692,"title":{},"body":{"modules/RoleModule.html":{}}}],["role/enum/role.enum",{"_index":2167,"title":{},"body":{"classes/UserDto.html":{}}}],["role/role.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["role/role.service",{"_index":977,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["role/roleentity",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["roleentity",{"_index":1693,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["roleenum",{"_index":2166,"title":{},"body":{"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleenum})@isenum(roleenum",{"_index":2164,"title":{},"body":{"classes/UserDto.html":{}}}],["roleguard",{"_index":400,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"coverage.html":{}}}],["roleid",{"_index":2110,"title":{},"body":{"classes/User.html":{}}}],["rolemodule",{"_index":145,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerolerepository",{"_index":1701,"title":{},"body":{"injectables/RoleService.html":{}}}],["roles",{"_index":402,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles('admin",{"_index":410,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["roles('user",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/KnowItController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/ThemeQuizzController.html":{}}}],["roles.includes(role",{"_index":1686,"title":{},"body":{"guards/RoleGuard.html":{}}}],["roles.map((role",{"_index":1718,"title":{},"body":{"injectables/RoleService.html":{}}}],["roleservice",{"_index":966,"title":{"injectables/RoleService.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["roletype",{"_index":1707,"title":{},"body":{"injectables/RoleService.html":{}}}],["root",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":58,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{}}}],["router",{"_index":2369,"title":{},"body":{"miscellaneous/functions.html":{}}}],["routes",{"_index":63,"title":{},"body":{"controllers/AppController.html":{}}}],["rxjs",{"_index":710,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"guards/RoleGuard.html":{},"dependencies.html":{},"index.html":{}}}],["rxjs/operators",{"_index":712,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["répondu",{"_index":1947,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["saltrounds",{"_index":2210,"title":{},"body":{"injectables/UserService.html":{}}}],["school",{"_index":542,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["score",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score'})@validatenested()@isoptional",{"_index":1343,"title":{},"body":{"injectables/PoiDto.html":{}}}],["score.controller",{"_index":737,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.controller.ts",{"_index":730,"title":{},"body":{"controllers/GreenScoreController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"coverage.html":{}}}],["score.controller.ts:35",{"_index":2010,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:46",{"_index":2019,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:56",{"_index":2016,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.controller.ts:68",{"_index":2015,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["score.interface",{"_index":2033,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score.interface.ts",{"_index":2035,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score.module",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{}}}],["score.module.ts",{"_index":735,"title":{},"body":{"modules/GreenScoreModule.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service",{"_index":736,"title":{},"body":{"modules/GreenScoreModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{}}}],["score.service.ts",{"_index":738,"title":{},"body":{"injectables/GreenScoreService.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score.service.ts:23",{"_index":2047,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:30",{"_index":2049,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:38",{"_index":2054,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:49",{"_index":2048,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:58",{"_index":2051,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score.service.ts:8",{"_index":2044,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["score/green",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["score/interfaces/type",{"_index":2034,"title":{},"body":{"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["score/type",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts",{"_index":2029,"title":{},"body":{"classes/TypeGreenScoreDto.html":{},"coverage.html":{}}}],["score/typegreenscoredto.ts:8",{"_index":2031,"title":{},"body":{"classes/TypeGreenScoreDto.html":{}}}],["score/typegreenscoreentity",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["score/typegreenscoreentity.ts",{"_index":1999,"title":{},"body":{"classes/TypeGreenScore.html":{},"coverage.html":{}}}],["score/typegreenscoreentity.ts:14",{"_index":2002,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["score/typegreenscoreentity.ts:8",{"_index":2000,"title":{},"body":{"classes/TypeGreenScore.html":{}}}],["searchbyname",{"_index":658,"title":{},"body":{"injectables/CompanyService.html":{}}}],["searchbyname(name",{"_index":676,"title":{},"body":{"injectables/CompanyService.html":{}}}],["secret",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":984,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["secure",{"_index":2374,"title":{},"body":{"miscellaneous/functions.html":{}}}],["select",{"_index":791,"title":{},"body":{"injectables/ImgPoiService.html":{},"injectables/JoinTagPoiService.html":{},"injectables/KnowItService.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/QuestionQuizzService.html":{},"injectables/QuizzService.html":{},"injectables/UserService.html":{}}}],["select('role",{"_index":1714,"title":{},"body":{"injectables/RoleService.html":{}}}],["send",{"_index":55,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["sent",{"_index":610,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["serialazedata",{"_index":1126,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["serialazedata(percentandtype",{"_index":1143,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["serializeimgurl",{"_index":776,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["serializeimgurl(imgs",{"_index":784,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["serializetags",{"_index":1485,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetags.foreach((tag",{"_index":1487,"title":{},"body":{"injectables/PoiService.html":{}}}],["serializetagsdata",{"_index":814,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagsdata(tags",{"_index":832,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["serializetagswithrgb",{"_index":1488,"title":{},"body":{"injectables/PoiService.html":{}}}],["service",{"_index":257,"title":{},"body":{"injectables/AppService.html":{},"injectables/CompanyService.html":{},"injectables/RoleService.html":{}}}],["set",{"_index":24,"title":{},"body":{"classes/AccessToken.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["set({crystal",{"_index":2247,"title":{},"body":{"injectables/UserService.html":{}}}],["setmetadata('roles",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":2376,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadowed",{"_index":1742,"title":{},"body":{"injectables/StatsService.html":{}}}],["shopping",{"_index":2363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["short",{"_index":1321,"title":{},"body":{"injectables/PoiDto.html":{}}}],["show",{"_index":517,"title":{},"body":{"classes/Company.html":{}}}],["signoptions",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"modules/QuizzModule.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{}}}],["src/.../function.utils.ts",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2366,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../price.enum.ts",{"_index":2341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../role.decorator.ts",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":2342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../type.enum.ts",{"_index":2343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../typepoienum.ts",{"_index":2344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:26",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:42",{"_index":74,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":255,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:12",{"_index":260,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/access",{"_index":6,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:42",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/interfaces/access",{"_index":49,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:11",{"_index":967,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:32",{"_index":971,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local.strategy.ts",{"_index":1052,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:10",{"_index":1054,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:24",{"_index":1056,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/test.strategy.ts",{"_index":1846,"title":{},"body":{"classes/TestStrategy.html":{},"coverage.html":{}}}],["src/auth/test.strategy.ts:14",{"_index":1848,"title":{},"body":{"classes/TestStrategy.html":{}}}],["src/auth/test.strategy.ts:5",{"_index":1847,"title":{},"body":{"classes/TestStrategy.html":{}}}],["src/challenge/challenge.controller.ts",{"_index":370,"title":{},"body":{"controllers/ChallengeController.html":{},"coverage.html":{}}}],["src/challenge/challenge.controller.ts:26",{"_index":380,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["src/challenge/challenge.controller.ts:33",{"_index":386,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["src/challenge/challenge.controller.ts:40",{"_index":389,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["src/challenge/challenge.controller.ts:46",{"_index":383,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["src/challenge/challenge.controller.ts:53",{"_index":392,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["src/challenge/challenge.module.ts",{"_index":442,"title":{},"body":{"modules/ChallengeModule.html":{}}}],["src/challenge/challenge.service.ts",{"_index":445,"title":{},"body":{"injectables/ChallengeService.html":{},"coverage.html":{}}}],["src/challenge/challenge.service.ts:16",{"_index":452,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challenge.service.ts:20",{"_index":456,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challenge.service.ts:24",{"_index":457,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challenge.service.ts:32",{"_index":455,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challenge.service.ts:39",{"_index":453,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challenge.service.ts:9",{"_index":450,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["src/challenge/challengedto.ts",{"_index":427,"title":{},"body":{"classes/ChallengeDto.html":{},"coverage.html":{}}}],["src/challenge/challengedto.ts:11",{"_index":432,"title":{},"body":{"classes/ChallengeDto.html":{}}}],["src/challenge/challengedto.ts:15",{"_index":433,"title":{},"body":{"classes/ChallengeDto.html":{}}}],["src/challenge/challengedto.ts:7",{"_index":430,"title":{},"body":{"classes/ChallengeDto.html":{}}}],["src/challenge/challengeentity.ts",{"_index":345,"title":{},"body":{"classes/Challenge.html":{},"coverage.html":{}}}],["src/challenge/challengeentity.ts:11",{"_index":358,"title":{},"body":{"classes/Challenge.html":{}}}],["src/challenge/challengeentity.ts:16",{"_index":353,"title":{},"body":{"classes/Challenge.html":{}}}],["src/challenge/challengeentity.ts:21",{"_index":356,"title":{},"body":{"classes/Challenge.html":{}}}],["src/challenge/challengeentity.ts:28",{"_index":364,"title":{},"body":{"classes/Challenge.html":{}}}],["src/challenge/challengeentity.ts:6",{"_index":360,"title":{},"body":{"classes/Challenge.html":{}}}],["src/company/company.controller.ts",{"_index":545,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:107",{"_index":568,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:33",{"_index":558,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:49",{"_index":571,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:61",{"_index":566,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:77",{"_index":575,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:93",{"_index":563,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":649,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":652,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:10",{"_index":660,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:20",{"_index":677,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:37",{"_index":662,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:51",{"_index":672,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:62",{"_index":668,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:71",{"_index":667,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:75",{"_index":664,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:79",{"_index":666,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:87",{"_index":675,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:95",{"_index":670,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/companydto.ts",{"_index":608,"title":{},"body":{"injectables/CompanyDto.html":{},"coverage.html":{}}}],["src/company/companydto.ts:104",{"_index":627,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:114",{"_index":632,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:18",{"_index":623,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:27",{"_index":614,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:36",{"_index":618,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:46",{"_index":620,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:55",{"_index":634,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:65",{"_index":637,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:74",{"_index":617,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:83",{"_index":629,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:92",{"_index":621,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companydto.ts:98",{"_index":628,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["src/company/companyentity.ts",{"_index":474,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/company/companyentity.ts:105",{"_index":495,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:114",{"_index":509,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:117",{"_index":501,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:12",{"_index":511,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:123",{"_index":520,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:20",{"_index":489,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:29",{"_index":526,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:35",{"_index":534,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:45",{"_index":499,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:55",{"_index":503,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:63",{"_index":539,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:73",{"_index":521,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:83",{"_index":513,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:91",{"_index":528,"title":{},"body":{"classes/Company.html":{}}}],["src/company/companyentity.ts:96",{"_index":538,"title":{},"body":{"classes/Company.html":{}}}],["src/company/enum/type.enum.ts",{"_index":2350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/company/interface/company.interface.ts",{"_index":645,"title":{},"body":{"interfaces/CompanyInterface.html":{},"coverage.html":{}}}],["src/decorator/role.decorator.ts",{"_index":2273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/green",{"_index":729,"title":{},"body":{"controllers/GreenScoreController.html":{},"modules/GreenScoreModule.html":{},"injectables/GreenScoreService.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts",{"_index":1672,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/guard/role.guard.ts:20",{"_index":1678,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/guard/role.guard.ts:9",{"_index":1676,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/img",{"_index":739,"title":{},"body":{"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"modules/ImgPoiModule.html":{},"injectables/ImgPoiService.html":{},"coverage.html":{}}}],["src/interceptor/entity",{"_index":700,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["src/join",{"_index":794,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"coverage.html":{}}}],["src/know",{"_index":989,"title":{},"body":{"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"modules/KnowItModule.html":{},"injectables/KnowItService.html":{},"coverage.html":{}}}],["src/logindto.ts",{"_index":1059,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/logindto.ts:11",{"_index":1061,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/logindto.ts:7",{"_index":1063,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/main.ts",{"_index":2281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/percent",{"_index":1069,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/enum/price.enum.ts",{"_index":2345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/enum/typepoienum.ts",{"_index":2358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/poi/interfaces/poi.interface.ts",{"_index":1402,"title":{},"body":{"interfaces/PoiInterface.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts",{"_index":1065,"title":{},"body":{"classes/PercentAndIdTag.html":{},"coverage.html":{}}}],["src/poi/percentandidtag.ts:2",{"_index":1067,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/percentandidtag.ts:3",{"_index":1068,"title":{},"body":{"classes/PercentAndIdTag.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts",{"_index":1536,"title":{},"body":{"injectables/PoiTransformationPipe.html":{},"coverage.html":{}}}],["src/poi/pipe/poi.transformation.pipe.ts:8",{"_index":1537,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["src/poi/poi.controller.ts",{"_index":1235,"title":{},"body":{"controllers/PoiController.html":{},"coverage.html":{}}}],["src/poi/poi.controller.ts:106",{"_index":1272,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:118",{"_index":1274,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:133",{"_index":1255,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:141",{"_index":1267,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:149",{"_index":1270,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:156",{"_index":1281,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:167",{"_index":1264,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:51",{"_index":1252,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:65",{"_index":1261,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:78",{"_index":1257,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.controller.ts:93",{"_index":1278,"title":{},"body":{"controllers/PoiController.html":{}}}],["src/poi/poi.geo.calc.service.ts",{"_index":1359,"title":{},"body":{"injectables/PoiGeoCalcService.html":{},"coverage.html":{}}}],["src/poi/poi.geo.calc.service.ts:11",{"_index":1363,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["src/poi/poi.geo.calc.service.ts:20",{"_index":1367,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["src/poi/poi.geo.calc.service.ts:34",{"_index":1371,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["src/poi/poi.geo.calc.service.ts:49",{"_index":1369,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["src/poi/poi.module.ts",{"_index":1407,"title":{},"body":{"modules/PoiModule.html":{}}}],["src/poi/poi.service.ts",{"_index":1409,"title":{},"body":{"injectables/PoiService.html":{},"coverage.html":{}}}],["src/poi/poi.service.ts:103",{"_index":1436,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:118",{"_index":1432,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:151",{"_index":1425,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:155",{"_index":1441,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:163",{"_index":1440,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:171",{"_index":1427,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:179",{"_index":1443,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:19",{"_index":1422,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:202",{"_index":1437,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:206",{"_index":1428,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:43",{"_index":1431,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:55",{"_index":1424,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:89",{"_index":1434,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poi.service.ts:98",{"_index":1439,"title":{},"body":{"injectables/PoiService.html":{}}}],["src/poi/poiandtags.ts",{"_index":1227,"title":{},"body":{"classes/PoiAndTags.html":{},"coverage.html":{}}}],["src/poi/poiandtags.ts:6",{"_index":1230,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poiandtags.ts:7",{"_index":1229,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["src/poi/poidto.ts",{"_index":1316,"title":{},"body":{"injectables/PoiDto.html":{},"coverage.html":{}}}],["src/poi/poidto.ts:104",{"_index":1344,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:110",{"_index":1342,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:117",{"_index":1336,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:121",{"_index":1331,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:125",{"_index":1327,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:24",{"_index":1319,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:33",{"_index":1320,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:43",{"_index":1323,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:48",{"_index":1325,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:58",{"_index":1328,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:65",{"_index":1329,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:71",{"_index":1332,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:77",{"_index":1334,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poidto.ts:85",{"_index":1340,"title":{},"body":{"injectables/PoiDto.html":{}}}],["src/poi/poientity.ts",{"_index":1202,"title":{},"body":{"classes/Poi.html":{},"coverage.html":{}}}],["src/poi/poientity.ts:12",{"_index":1220,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:17",{"_index":1223,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:22",{"_index":1211,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:27",{"_index":1208,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:32",{"_index":1209,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:37",{"_index":1222,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:44",{"_index":1225,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:51",{"_index":1217,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:58",{"_index":1215,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:6",{"_index":1214,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:64",{"_index":1213,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:70",{"_index":1216,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:73",{"_index":1210,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:80",{"_index":1218,"title":{},"body":{"classes/Poi.html":{}}}],["src/poi/poientity.ts:85",{"_index":1224,"title":{},"body":{"classes/Poi.html":{}}}],["src/question",{"_index":1553,"title":{},"body":{"classes/QuestionQuizz.html":{},"controllers/QuestionQuizzController.html":{},"classes/QuestionQuizzDto.html":{},"modules/QuestionQuizzModule.html":{},"injectables/QuestionQuizzService.html":{},"coverage.html":{}}}],["src/quizz/quizz.controller.ts",{"_index":1620,"title":{},"body":{"controllers/QuizzController.html":{},"coverage.html":{}}}],["src/quizz/quizz.controller.ts:22",{"_index":1624,"title":{},"body":{"controllers/QuizzController.html":{}}}],["src/quizz/quizz.controller.ts:29",{"_index":1626,"title":{},"body":{"controllers/QuizzController.html":{}}}],["src/quizz/quizz.module.ts",{"_index":1641,"title":{},"body":{"modules/QuizzModule.html":{}}}],["src/quizz/quizz.service.ts",{"_index":1644,"title":{},"body":{"injectables/QuizzService.html":{},"coverage.html":{}}}],["src/quizz/quizz.service.ts:16",{"_index":1651,"title":{},"body":{"injectables/QuizzService.html":{}}}],["src/quizz/quizz.service.ts:26",{"_index":1654,"title":{},"body":{"injectables/QuizzService.html":{}}}],["src/quizz/quizz.service.ts:37",{"_index":1653,"title":{},"body":{"injectables/QuizzService.html":{}}}],["src/quizz/quizz.service.ts:9",{"_index":1648,"title":{},"body":{"injectables/QuizzService.html":{}}}],["src/quizz/quizzandquestiondto.ts",{"_index":1611,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{},"coverage.html":{}}}],["src/quizz/quizzandquestiondto.ts:12",{"_index":1616,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{}}}],["src/quizz/quizzandquestiondto.ts:18",{"_index":1614,"title":{},"body":{"classes/QuizzAndQuestionDto.html":{}}}],["src/quizz/quizzdto.ts",{"_index":1633,"title":{},"body":{"classes/QuizzDto.html":{},"coverage.html":{}}}],["src/quizz/quizzdto.ts:11",{"_index":1634,"title":{},"body":{"classes/QuizzDto.html":{}}}],["src/quizz/quizzdto.ts:15",{"_index":1635,"title":{},"body":{"classes/QuizzDto.html":{}}}],["src/quizz/quizzdto.ts:7",{"_index":1636,"title":{},"body":{"classes/QuizzDto.html":{}}}],["src/quizz/quizzentity.ts",{"_index":1601,"title":{},"body":{"classes/Quizz.html":{},"coverage.html":{}}}],["src/quizz/quizzentity.ts:12",{"_index":1606,"title":{},"body":{"classes/Quizz.html":{}}}],["src/quizz/quizzentity.ts:17",{"_index":1602,"title":{},"body":{"classes/Quizz.html":{}}}],["src/quizz/quizzentity.ts:22",{"_index":1603,"title":{},"body":{"classes/Quizz.html":{}}}],["src/quizz/quizzentity.ts:29",{"_index":1605,"title":{},"body":{"classes/Quizz.html":{}}}],["src/quizz/quizzentity.ts:39",{"_index":1608,"title":{},"body":{"classes/Quizz.html":{}}}],["src/quizz/quizzentity.ts:7",{"_index":1604,"title":{},"body":{"classes/Quizz.html":{}}}],["src/role/enum/role.enum.ts",{"_index":2349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/role/role.module.ts",{"_index":1691,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/role/role.service.ts",{"_index":1695,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/role/role.service.ts:10",{"_index":1700,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:24",{"_index":1706,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:38",{"_index":1703,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/role.service.ts:50",{"_index":1709,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/role/roleentity.ts",{"_index":1666,"title":{},"body":{"classes/Role.html":{},"coverage.html":{}}}],["src/role/roleentity.ts:11",{"_index":1669,"title":{},"body":{"classes/Role.html":{}}}],["src/role/roleentity.ts:6",{"_index":1667,"title":{},"body":{"classes/Role.html":{}}}],["src/stats/stats.controller.ts",{"_index":1721,"title":{},"body":{"controllers/StatsController.html":{},"coverage.html":{}}}],["src/stats/stats.controller.ts:14",{"_index":1724,"title":{},"body":{"controllers/StatsController.html":{}}}],["src/stats/stats.module.ts",{"_index":1733,"title":{},"body":{"modules/StatsModule.html":{}}}],["src/stats/stats.service.ts",{"_index":1735,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["src/stats/stats.service.ts:10",{"_index":1738,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:20",{"_index":1739,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/stats/stats.service.ts:29",{"_index":1740,"title":{},"body":{"injectables/StatsService.html":{}}}],["src/tags/interfaces/tags.interface.ts",{"_index":1813,"title":{},"body":{"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts",{"_index":1770,"title":{},"body":{"classes/Tag.html":{},"coverage.html":{}}}],["src/tags/tagentity.ts:14",{"_index":1777,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:19",{"_index":1773,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tagentity.ts:8",{"_index":1774,"title":{},"body":{"classes/Tag.html":{}}}],["src/tags/tags.controller.ts",{"_index":1779,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:20",{"_index":1786,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:30",{"_index":1790,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:39",{"_index":1794,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:46",{"_index":1791,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":1817,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":1820,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:14",{"_index":1826,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:19",{"_index":1827,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:23",{"_index":1828,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:31",{"_index":1829,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:38",{"_index":1831,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:42",{"_index":1833,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:8",{"_index":1824,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tagsdto.ts",{"_index":1806,"title":{},"body":{"classes/TagsDto.html":{},"coverage.html":{}}}],["src/tags/tagsdto.ts:10",{"_index":1811,"title":{},"body":{"classes/TagsDto.html":{}}}],["src/theme",{"_index":1766,"title":{},"body":{"classes/SubmitDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/ValidationDto.html":{},"coverage.html":{}}}],["src/type",{"_index":1998,"title":{},"body":{"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["src/type/interface/type.interface.ts",{"_index":2064,"title":{},"body":{"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["src/type/type.controller.ts",{"_index":1967,"title":{},"body":{"controllers/TypeController.html":{},"coverage.html":{}}}],["src/type/type.controller.ts:34",{"_index":1975,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:46",{"_index":1979,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:56",{"_index":1980,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.controller.ts:68",{"_index":1977,"title":{},"body":{"controllers/TypeController.html":{}}}],["src/type/type.module.ts",{"_index":2068,"title":{},"body":{"modules/TypeModule.html":{}}}],["src/type/type.service.ts",{"_index":2071,"title":{},"body":{"injectables/TypeService.html":{},"coverage.html":{}}}],["src/type/type.service.ts:23",{"_index":2076,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:31",{"_index":2080,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:41",{"_index":2079,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:49",{"_index":2078,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:57",{"_index":2083,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:61",{"_index":2081,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/type.service.ts:9",{"_index":2074,"title":{},"body":{"injectables/TypeService.html":{}}}],["src/type/typedto.ts",{"_index":1993,"title":{},"body":{"classes/TypeDto.html":{},"coverage.html":{}}}],["src/type/typedto.ts:11",{"_index":1996,"title":{},"body":{"classes/TypeDto.html":{}}}],["src/type/typeentity.ts",{"_index":1963,"title":{},"body":{"classes/Type.html":{},"coverage.html":{}}}],["src/type/typeentity.ts:15",{"_index":1965,"title":{},"body":{"classes/Type.html":{}}}],["src/type/typeentity.ts:9",{"_index":1964,"title":{},"body":{"classes/Type.html":{}}}],["src/user",{"_index":2117,"title":{},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{}}}],["src/user/appuserdto.ts",{"_index":264,"title":{},"body":{"classes/AppUserDto.html":{},"coverage.html":{}}}],["src/user/appuserdto.ts:10",{"_index":272,"title":{},"body":{"classes/AppUserDto.html":{}}}],["src/user/appuserdto.ts:16",{"_index":274,"title":{},"body":{"classes/AppUserDto.html":{}}}],["src/user/appuserdto.ts:23",{"_index":278,"title":{},"body":{"classes/AppUserDto.html":{}}}],["src/user/appuserdto.ts:29",{"_index":279,"title":{},"body":{"classes/AppUserDto.html":{}}}],["src/user/appuserdto.ts:35",{"_index":280,"title":{},"body":{"classes/AppUserDto.html":{}}}],["src/user/interfaces/user.interface.ts",{"_index":2169,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/user/user.controller.ts",{"_index":2121,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:23",{"_index":2136,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":2139,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:40",{"_index":2129,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:47",{"_index":2132,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":2174,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":2178,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:110",{"_index":2192,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:12",{"_index":2189,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":2208,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:40",{"_index":2193,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:51",{"_index":2206,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:61",{"_index":2198,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:73",{"_index":2204,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:82",{"_index":2200,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:86",{"_index":2195,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:99",{"_index":2202,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/userdto.ts",{"_index":2158,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/user/userdto.ts:11",{"_index":2159,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:17",{"_index":2160,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:23",{"_index":2161,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:29",{"_index":2162,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userdto.ts:36",{"_index":2165,"title":{},"body":{"classes/UserDto.html":{}}}],["src/user/userentity.ts",{"_index":2096,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/userentity.ts:14",{"_index":2107,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:19",{"_index":2103,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:24",{"_index":2105,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:29",{"_index":2109,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:38",{"_index":2111,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:48",{"_index":2100,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:53",{"_index":2101,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:56",{"_index":2102,"title":{},"body":{"classes/User.html":{}}}],["src/user/userentity.ts:8",{"_index":2104,"title":{},"body":{"classes/User.html":{}}}],["src/utils/function.utils.ts",{"_index":2294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":615,"title":{},"body":{"injectables/CompanyDto.html":{},"miscellaneous/enumerations.html":{}}}],["start:proddependencies",{"_index":2424,"title":{},"body":{"index.html":{}}}],["started",{"_index":2384,"title":{"index.html":{}},"body":{}}],["statements",{"_index":2256,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":1722,"title":{},"body":{"controllers/StatsController.html":{}}}],["stats.controller",{"_index":1734,"title":{},"body":{"modules/StatsModule.html":{}}}],["stats.service",{"_index":1726,"title":{},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{}}}],["stats/stats.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["statscontroller",{"_index":1720,"title":{"controllers/StatsController.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"coverage.html":{}}}],["statsmodule",{"_index":146,"title":{"modules/StatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatsModule.html":{},"modules.html":{},"overview.html":{}}}],["statsservice",{"_index":1725,"title":{"injectables/StatsService.html":{}},"body":{"controllers/StatsController.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["stock",{"_index":490,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["strategy",{"_index":975,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/AppService.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"classes/ChallengeDto.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"classes/Quizz.html":{},"classes/QuizzDto.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"classes/ThemeQuizz.html":{},"classes/ThemeQuizzDto.html":{},"classes/Type.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"interfaces/TypeInterface.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["stringtype",{"_index":2092,"title":{},"body":{"injectables/TypeService.html":{}}}],["stringtype.push(types[n",{"_index":2095,"title":{},"body":{"injectables/TypeService.html":{}}}],["submitanswer",{"_index":1872,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["submitanswer(@body",{"_index":1899,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["submitanswer(validationdto",{"_index":1883,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["submitdto",{"_index":1765,"title":{"classes/SubmitDto.html":{}},"body":{"classes/SubmitDto.html":{},"classes/ValidationDto.html":{},"coverage.html":{}}}],["success",{"_index":605,"title":{},"body":{"controllers/CompanyController.html":{}}}],["super",{"_index":980,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["supertest",{"_index":2437,"title":{},"body":{"index.html":{}}}],["support",{"_index":2445,"title":{},"body":{"modules.html":{}}}],["survenue",{"_index":1598,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["svg",{"_index":2446,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":2335,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["synchronize",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":177,"title":{"classes/Tag.html":{}},"body":{"modules/AppModule.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/JoinTagPoiEntity.html":{},"modules/JoinTagPoiModule.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tag.id",{"_index":802,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{}}}],["tag.tag",{"_index":841,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tagaddpromise",{"_index":1507,"title":{},"body":{"injectables/PoiService.html":{}}}],["tagdto",{"_index":1787,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tagdto.colortag",{"_index":1836,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagentity",{"_index":1796,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{}}}],["tagid",{"_index":800,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"injectables/PoiService.html":{}}}],["tagrepository",{"_index":1825,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags",{"_index":834,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{},"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tags'})@isoptional()@isarray",{"_index":1339,"title":{},"body":{"injectables/PoiDto.html":{}}}],["tags.controller",{"_index":1818,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.foreach((tag",{"_index":1840,"title":{},"body":{"injectables/TagsService.html":{}}}],["tags.map((tag",{"_index":840,"title":{},"body":{"injectables/JoinTagPoiService.html":{},"injectables/TagsService.html":{}}}],["tags.service",{"_index":1795,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tagentity",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/PoiAndTags.html":{}}}],["tags/tags.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["tags/tags.service",{"_index":1444,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["tagscontroller",{"_index":1778,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsdto",{"_index":1785,"title":{"classes/TagsDto.html":{}},"body":{"controllers/TagsController.html":{},"classes/TagsDto.html":{},"coverage.html":{}}}],["tagsinterface",{"_index":1807,"title":{"interfaces/TagsInterface.html":{}},"body":{"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":147,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsservice",{"_index":1420,"title":{"injectables/TagsService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["tagtoadd",{"_index":819,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["techno",{"_index":2398,"title":{},"body":{"index.html":{}}}],["test",{"_index":2418,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":2420,"title":{},"body":{"index.html":{}}}],["test:debuglint",{"_index":2421,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":2419,"title":{},"body":{"index.html":{}}}],["teststrategy",{"_index":1845,"title":{"classes/TestStrategy.html":{}},"body":{"classes/TestStrategy.html":{},"coverage.html":{}}}],["theme",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"classes/Quizz.html":{},"injectables/QuizzService.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["themeandquizzdto",{"_index":1849,"title":{"classes/ThemeAndQuizzDto.html":{}},"body":{"classes/ThemeAndQuizzDto.html":{},"controllers/ThemeQuizzController.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["themeentity",{"_index":1930,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["themequizz",{"_index":228,"title":{"classes/ThemeQuizz.html":{}},"body":{"modules/AppModule.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"classes/Quizz.html":{},"injectables/QuizzService.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{}}}],["themequizz.id",{"_index":943,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{},"classes/Quizz.html":{}}}],["themequizz.reward",{"_index":1951,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["themequizzcontroller",{"_index":1867,"title":{"controllers/ThemeQuizzController.html":{}},"body":{"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"coverage.html":{}}}],["themequizzdto",{"_index":1853,"title":{"classes/ThemeQuizzDto.html":{}},"body":{"classes/ThemeAndQuizzDto.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"coverage.html":{}}}],["themequizzentity",{"_index":1888,"title":{},"body":{"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{}}}],["themequizzid",{"_index":940,"title":{},"body":{"classes/JoinUserThemeQuizz.html":{}}}],["themequizzmodule",{"_index":148,"title":{"modules/ThemeQuizzModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ThemeQuizzModule.html":{},"modules.html":{},"overview.html":{}}}],["themequizzrepository",{"_index":1917,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["themequizzservice",{"_index":1887,"title":{"injectables/ThemeQuizzService.html":{}},"body":{"controllers/ThemeQuizzController.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"coverage.html":{},"overview.html":{}}}],["this.access_token",{"_index":44,"title":{},"body":{"classes/AccessToken.html":{}}}],["this.authservice.login(req.user",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(mail",{"_index":1058,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.calcdist(poi",{"_index":1400,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["this.challengerepository.find",{"_index":462,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.challengerepository.findoneorfail(idchallenge",{"_index":467,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.challengerepository.remove(challenge",{"_index":473,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.challengerepository.save(challengedto",{"_index":461,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.challengeservice.addchallenge(challengedto",{"_index":413,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.challengeservice.deletechallenge(idchallenge",{"_index":420,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.challengeservice.findone(idchallenge",{"_index":424,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.challengeservice.getchallenge",{"_index":414,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.challengeservice.getcurrentchallenge(user.user",{"_index":417,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.companyrepository.count",{"_index":694,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.delete(idcompany",{"_index":693,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.find",{"_index":681,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneorfail",{"_index":697,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.findoneorfail(idcompany",{"_index":691,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyrepository.save(companydata",{"_index":690,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice",{"_index":2226,"title":{},"body":{"injectables/UserService.html":{}}}],["this.companyservice.addcompany(companydto",{"_index":593,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.countcompany",{"_index":1749,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.countnbtype(type",{"_index":1756,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.companyservice.deletecompany(idcompany",{"_index":604,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getallcompany",{"_index":599,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(id",{"_index":597,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(idcompany",{"_index":603,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.getone(user.idcompany",{"_index":1395,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["this.companyservice.orderbydate",{"_index":607,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.findemail(userappdto.mail",{"_index":2233,"title":{},"body":{"injectables/UserService.html":{}}}],["this.findone(idchallenge",{"_index":472,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.formattopercenttgcandpoi(poiadded",{"_index":1466,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.getalltag",{"_index":1844,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.getdomainmail(userappdto.username",{"_index":2228,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getemerald(user",{"_index":2242,"title":{},"body":{"injectables/UserService.html":{}}}],["this.getgreenscore",{"_index":1751,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.getone(userchallenge",{"_index":886,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.getonepercenttypegreenscoreandpoi(idpercentgcandpoi",{"_index":1168,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.getonetheme(idtheme",{"_index":1941,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.getonetheme(idthemequizz",{"_index":1943,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.getpoi(idpoi",{"_index":1481,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.gettype(idtypegreenscore",{"_index":2061,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.hashpassword(user.password",{"_index":2212,"title":{},"body":{"injectables/UserService.html":{}}}],["this.hashpassword(userappdto.password",{"_index":2230,"title":{},"body":{"injectables/UserService.html":{}}}],["this.imgpoirepository.find",{"_index":790,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["this.imgpoirepository.save(poiandimg",{"_index":789,"title":{},"body":{"injectables/ImgPoiService.html":{}}}],["this.imgpoiservice.addimgpoi(img",{"_index":1475,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.imgpoiservice.getimgs(poi",{"_index":1499,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.imgpoiservice.serializeimgurl(imgs",{"_index":1501,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoirepository.count",{"_index":848,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.createquerybuilder('g",{"_index":842,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.find",{"_index":838,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.findone",{"_index":849,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoirepository.save(jointagpoi",{"_index":837,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poi",{"_index":1512,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.addjointagpoi(poiadded",{"_index":1464,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.checktag(tag",{"_index":1511,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.getallcompanytag(poi",{"_index":1484,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.jointagpoiservice.serializetagsdata(tags",{"_index":1486,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.joinuserchallengerepository.findone",{"_index":882,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.joinuserchallengerepository.findoneorfail",{"_index":894,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.joinuserchallengerepository.save(userchallenge",{"_index":889,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.joinuserchallengeservice.addjoinuserchallenge(challengeentity",{"_index":426,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["this.joinuserchallengeservice.checkvalidation(user.user",{"_index":466,"title":{},"body":{"injectables/ChallengeService.html":{}}}],["this.joinuserpoirepository.find",{"_index":922,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["this.joinuserpoirepository.save(joinuserpoi",{"_index":921,"title":{},"body":{"injectables/JoinUserPoiService.html":{}}}],["this.joinuserpoiservice.addjoinuserpoi(joinuserpoi",{"_index":1312,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.joinuserpoiservice.gethistoric(req.user.user",{"_index":1315,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.joinuserthemequizzrepository.findoneorfail",{"_index":962,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["this.joinuserthemequizzrepository.save(jutqtoadd",{"_index":961,"title":{},"body":{"injectables/JoinUserThemeQuizzService.html":{}}}],["this.joinuserthemequizzservice.addjoinuserthemequizz(user",{"_index":1960,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.joinuserthemequizzservice.getbyuserandthemequizz(user",{"_index":1938,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.knowitrepository.delete(idknowit",{"_index":1051,"title":{},"body":{"injectables/KnowItService.html":{}}}],["this.knowitrepository.find",{"_index":1050,"title":{},"body":{"injectables/KnowItService.html":{}}}],["this.knowitrepository.save(knowit",{"_index":1049,"title":{},"body":{"injectables/KnowItService.html":{}}}],["this.knowitservice.addknowit(knowitdto",{"_index":1022,"title":{},"body":{"controllers/KnowItController.html":{}}}],["this.knowitservice.deleteknowit(idknowit",{"_index":1025,"title":{},"body":{"controllers/KnowItController.html":{}}}],["this.knowitservice.getknowit",{"_index":1023,"title":{},"body":{"controllers/KnowItController.html":{}}}],["this.percenttypegreenscoreandpoirepository.createquerybuilder",{"_index":1175,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.delete(percentgc",{"_index":1169,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.find",{"_index":1160,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.findoneorfail(idpercent",{"_index":1164,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegcandpoi",{"_index":1150,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoirepository.save(percenttypegreenscoreandpoi",{"_index":1158,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegcandpoi(percentgcanddto",{"_index":1470,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.addpercenttypegreenscoreandpoiservice(percenttypegreenscoreandpoidto",{"_index":1093,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.countranggreenscore(range",{"_index":1745,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.percenttypegreenscoreandpoiservice.deletepercenttypegreenscore(idpercent",{"_index":1106,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.findbypoi(idpoi",{"_index":1104,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getallpercenttypegreenscoreandpoi",{"_index":1098,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.getgreenscorepassmark(poi",{"_index":1480,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.getonepercenttypegreenscoreandpoi(idpercent",{"_index":1101,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["this.percenttypegreenscoreandpoiservice.gettype(poi",{"_index":1490,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.percenttypegreenscoreandpoiservice.serialazedata(await",{"_index":1489,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poi",{"_index":1232,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.poigeocalcservice.calcdist(poi",{"_index":1483,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poigeocalcservice.getdistancepoi(idpoi",{"_index":1308,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poigeocalcservice.getditancepoi(user",{"_index":1505,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poigeocalcservice.getnearbypoi(req.user",{"_index":1305,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poirepository.count",{"_index":1506,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.delete(idpoi",{"_index":1535,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.find",{"_index":1492,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.findoneorfail(idpoi",{"_index":1477,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poirepository.save(poi",{"_index":1533,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.poiservice.addpoi(poidto",{"_index":1291,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.countpoi",{"_index":1747,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.counttype(typepoi",{"_index":1762,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.deletepoi(idpoi",{"_index":1302,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getallpoi",{"_index":1294,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{}}}],["this.poiservice.getpoi(id",{"_index":1311,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.getpoi(idpoi",{"_index":1162,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoi(percenttypegreenscoreandpoiservicedto.idpoi",{"_index":1156,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.poiservice.getpoiandtags(idpoi",{"_index":1293,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.gettypepoi",{"_index":1758,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.poiservice.orderbydate",{"_index":1300,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.orderbyname",{"_index":1299,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.poiservice.updatepoi(poidto",{"_index":1297,"title":{},"body":{"controllers/PoiController.html":{}}}],["this.questionquizzrepository.find",{"_index":1593,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["this.questionquizzrepository.findoneorfail",{"_index":1594,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["this.questionquizzrepository.save(questionquizzdto",{"_index":1592,"title":{},"body":{"injectables/QuestionQuizzService.html":{}}}],["this.questionquizzservice.addanswerquizz(answer",{"_index":1659,"title":{},"body":{"injectables/QuizzService.html":{}}}],["this.questionquizzservice.checkanswer(answer.idquizz",{"_index":1953,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.questionquizzservice.getanswerbyquizz(quizz",{"_index":1665,"title":{},"body":{"injectables/QuizzService.html":{}}}],["this.quizzrepository.find",{"_index":1661,"title":{},"body":{"injectables/QuizzService.html":{}}}],["this.quizzrepository.save(question",{"_index":1656,"title":{},"body":{"injectables/QuizzService.html":{}}}],["this.quizzservice.addquizz(addthemetoquizz",{"_index":1935,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.quizzservice.addquizz(quizdto",{"_index":1631,"title":{},"body":{"controllers/QuizzController.html":{}}}],["this.quizzservice.getquizzbytheme(theme",{"_index":1942,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.quizzservice.getquizzbytheme(themequizz",{"_index":1949,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.quizzservice.getquizzs",{"_index":1632,"title":{},"body":{"controllers/QuizzController.html":{}}}],["this.reflector.get('roles",{"_index":1680,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.rolerolerepository.createquerybuilder",{"_index":1713,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.rolerolerepository.findoneorfail",{"_index":1711,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.roleservice.getinfrole(result.role.id",{"_index":987,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.roleservice.getoneorfailbyrole(this.user_role",{"_index":2224,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getoneorfailbyrole(user.role",{"_index":2214,"title":{},"body":{"injectables/UserService.html":{}}}],["this.roleservice.getonlyrole(roles",{"_index":988,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.searchbyname(companydto.name",{"_index":687,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.statsservice.getstat",{"_index":1729,"title":{},"body":{"controllers/StatsController.html":{}}}],["this.tagrepository.delete(idtag",{"_index":1838,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.find",{"_index":1839,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findbyids(idstags",{"_index":1843,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.findoneorfail(idtag",{"_index":1841,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagrepository.save(tagdto",{"_index":1837,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tags",{"_index":1233,"title":{},"body":{"classes/PoiAndTags.html":{}}}],["this.tagsservice.addtag(tagdto",{"_index":1800,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.deletetag(idtag",{"_index":1803,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getalltag",{"_index":1805,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(idtag",{"_index":1802,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.getonetag(tagid",{"_index":1509,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.tagsservice.gettags(poidto.tags",{"_index":1457,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.themequizzrepository.delete(idthemequizz",{"_index":1962,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.themequizzrepository.find",{"_index":1936,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.themequizzrepository.findoneorfail",{"_index":1939,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.themequizzrepository.save(theme",{"_index":1931,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.themequizzservice.addthemeandquizz(themeandquizzdto",{"_index":1892,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["this.themequizzservice.checkanswers(validationdto.answers",{"_index":1900,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["this.themequizzservice.deletethemequizz(idthemequizz",{"_index":1903,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["this.themequizzservice.getquestiontheme(idtheme",{"_index":1897,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["this.themequizzservice.gettheme(req.user.user",{"_index":1894,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["this.typegreenscorerepository.delete(typegreenscore",{"_index":2062,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.find",{"_index":2058,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findbyids(idtypes",{"_index":2063,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.findoneorfail(idtype",{"_index":2059,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscorerepository.save(typegreenscoredto",{"_index":2057,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["this.typegreenscoreservice.addgreenscore(typegreenscoreandpoidto",{"_index":2022,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.deletetypegreenscore(idtypegreenscore",{"_index":2028,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getalltype",{"_index":2026,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.getbyids",{"_index":1460,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typegreenscoreservice.gettype(idtypegreenscore",{"_index":2025,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["this.typegreenscoreservice.gettype(percenttypegreenscoreandpoiservicedto.idtypegreenscore",{"_index":1154,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["this.typegreenscoreservice.gettype(typepercent.idtype",{"_index":1454,"title":{},"body":{"injectables/PoiService.html":{}}}],["this.typerepository.delete(idtype",{"_index":2089,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.find",{"_index":2088,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findbyids(idstypes",{"_index":2090,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.findoneorfail(idtype",{"_index":2087,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typerepository.save(typedto",{"_index":2086,"title":{},"body":{"injectables/TypeService.html":{}}}],["this.typeservice.addtype(typedto",{"_index":1988,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.deletetype(idtype",{"_index":1992,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.getonetype(idtype",{"_index":1990,"title":{},"body":{"controllers/TypeController.html":{}}}],["this.typeservice.gettype",{"_index":1750,"title":{},"body":{"injectables/StatsService.html":{},"controllers/TypeController.html":{}}}],["this.userrepository.createquerybuilder",{"_index":2245,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findone",{"_index":2218,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail",{"_index":2216,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneorfail(userid",{"_index":2219,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":2215,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(userappdto",{"_index":2238,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addcrystal(challenge.crystalgain",{"_index":890,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.userservice.addcrystal(em",{"_index":2156,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.addcrystal(gain",{"_index":1959,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["this.userservice.adduser(userdto",{"_index":2146,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.adduserapp(appuserdto",{"_index":2153,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getemerald(userchallenge.user",{"_index":892,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["this.userservice.getuser(payload.userid",{"_index":986,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.getuserbymail(mail",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":469,"title":{},"body":{"injectables/ChallengeService.html":{},"injectables/CompanyService.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"injectables/QuestionQuizzService.html":{},"injectables/RoleService.html":{},"injectables/TagsService.html":{},"classes/TestStrategy.html":{},"injectables/ThemeQuizzService.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"injectables/UserService.html":{}}}],["timestamp",{"_index":355,"title":{},"body":{"classes/Challenge.html":{},"classes/KnowIt.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{}}}],["title",{"_index":991,"title":{},"body":{"classes/KnowIt.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"injectables/KnowItService.html":{}}}],["todo",{"_index":1082,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PoiService.html":{}}}],["token",{"_index":14,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["token.interfaces",{"_index":38,"title":{},"body":{"classes/AccessToken.html":{}}}],["token.interfaces.ts",{"_index":50,"title":{},"body":{"interfaces/AccessTokenInterfaces.html":{},"coverage.html":{}}}],["token.ts",{"_index":7,"title":{},"body":{"classes/AccessToken.html":{},"coverage.html":{}}}],["token.ts:11",{"_index":23,"title":{},"body":{"classes/AccessToken.html":{}}}],["tostring(16",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["total",{"_index":1172,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["totalanswer",{"_index":1961,"title":{},"body":{"injectables/ThemeQuizzService.html":{}}}],["totalcrystal",{"_index":2243,"title":{},"body":{"injectables/UserService.html":{}}}],["toto",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"classes/TestStrategy.html":{},"injectables/UserService.html":{}}}],["transform",{"_index":595,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["transform(value",{"_index":1190,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiTransformationPipe.html":{}}}],["transformer",{"_index":1355,"title":{},"body":{"injectables/PoiDto.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/ValidationDto.html":{},"dependencies.html":{},"index.html":{}}}],["tricheur",{"_index":1600,"title":{},"body":{"injectables/QuestionQuizzService.html":{},"injectables/ThemeQuizzService.html":{}}}],["trim",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trouv",{"_index":2240,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserPoi.html":{},"injectables/JwtStrategy.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/Poi.html":{},"controllers/PoiController.html":{},"classes/Quizz.html":{},"guards/RoleGuard.html":{},"controllers/TagsController.html":{},"classes/TestStrategy.html":{},"classes/ThemeQuizz.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["true})@joincolumn({name",{"_index":799,"title":{},"body":{"classes/JoinTagPoiEntity.html":{},"classes/User.html":{}}}],["try",{"_index":893,"title":{},"body":{"injectables/JoinUserChallengeService.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/LocalStrategy.html":{}}}],["ts",{"_index":2438,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":2441,"title":{},"body":{"index.html":{}}}],["tslint",{"_index":1448,"title":{},"body":{"injectables/PoiService.html":{},"index.html":{}}}],["tslint:disable",{"_index":40,"title":{},"body":{"classes/AccessToken.html":{},"controllers/AppController.html":{},"injectables/StatsService.html":{},"classes/TestStrategy.html":{}}}],["type",{"_index":32,"title":{"classes/Type.html":{}},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"classes/Challenge.html":{},"controllers/ChallengeController.html":{},"classes/ChallengeDto.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"controllers/CompanyController.html":{},"injectables/CompanyDto.html":{},"interfaces/CompanyInterface.html":{},"injectables/CompanyService.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/ImgPoi.html":{},"classes/ImgPoiDto.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"injectables/JoinUserPoiService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"classes/KnowIt.html":{},"controllers/KnowItController.html":{},"classes/KnowItDto.html":{},"interfaces/KnowItInterface.html":{},"injectables/KnowItService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/PercentAndIdTag.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"classes/Poi.html":{},"classes/PoiAndTags.html":{},"controllers/PoiController.html":{},"injectables/PoiDto.html":{},"injectables/PoiGeoCalcService.html":{},"interfaces/PoiInterface.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuestionQuizz.html":{},"classes/QuestionQuizzDto.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"classes/QuizzAndQuestionDto.html":{},"controllers/QuizzController.html":{},"classes/QuizzDto.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"guards/RoleGuard.html":{},"injectables/RoleService.html":{},"modules/StatsModule.html":{},"injectables/StatsService.html":{},"classes/SubmitDto.html":{},"classes/Tag.html":{},"controllers/TagsController.html":{},"classes/TagsDto.html":{},"interfaces/TagsInterface.html":{},"injectables/TagsService.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizz.html":{},"controllers/ThemeQuizzController.html":{},"classes/ThemeQuizzDto.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"controllers/TypeController.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"interfaces/TypeInterface.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/ValidationDto.html":{},"coverage.html":{}}}],["type.controller",{"_index":2069,"title":{},"body":{"modules/TypeModule.html":{}}}],["type.idtype",{"_index":1462,"title":{},"body":{"injectables/PoiService.html":{}}}],["type.interceptor",{"_index":583,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["type.interceptor.ts",{"_index":701,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"coverage.html":{}}}],["type.interceptor.ts:14",{"_index":706,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{}}}],["type.mark",{"_index":1186,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["type.percent",{"_index":1187,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["type.service",{"_index":1981,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{}}}],["type/type.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{}}}],["type/type.service",{"_index":1445,"title":{},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{}}}],["type/typeentity",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["typeandpercent",{"_index":1430,"title":{},"body":{"injectables/PoiService.html":{}}}],["typeandpercent.map(async",{"_index":1451,"title":{},"body":{"injectables/PoiService.html":{}}}],["typecontroller",{"_index":1966,"title":{"controllers/TypeController.html":{}},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"coverage.html":{}}}],["typedto",{"_index":1973,"title":{"classes/TypeDto.html":{}},"body":{"controllers/TypeController.html":{},"classes/TypeDto.html":{},"injectables/TypeService.html":{},"coverage.html":{}}}],["typeentity",{"_index":1982,"title":{},"body":{"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{}}}],["typeenum",{"_index":641,"title":{},"body":{"injectables/CompanyDto.html":{},"controllers/TypeController.html":{},"injectables/TypeService.html":{},"miscellaneous/enumerations.html":{}}}],["typeenum})@isenum(typeenum",{"_index":636,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["typegreenscore",{"_index":195,"title":{"classes/TypeGreenScore.html":{}},"body":{"modules/AppModule.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiDto.html":{},"interfaces/PoiInterface.html":{},"injectables/PoiService.html":{},"classes/TypeGreenScore.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscore.id",{"_index":1079,"title":{},"body":{"classes/PercentTypeGreenScoreAndPoi.html":{}}}],["typegreenscoreandpoidto",{"_index":2011,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["typegreenscorecontroller",{"_index":2003,"title":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"coverage.html":{}}}],["typegreenscoredto",{"_index":2009,"title":{"classes/TypeGreenScoreDto.html":{}},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"classes/TypeGreenScoreDto.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{}}}],["typegreenscoreentity",{"_index":2020,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{}}}],["typegreenscorefind",{"_index":1153,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["typegreenscoreinterface",{"_index":2030,"title":{"interfaces/TypeGreenScoreInterface.html":{}},"body":{"classes/TypeGreenScoreDto.html":{},"interfaces/TypeGreenScoreInterface.html":{},"coverage.html":{}}}],["typegreenscoremodule",{"_index":149,"title":{"modules/TypeGreenScoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules.html":{},"overview.html":{}}}],["typegreenscorerepository",{"_index":2045,"title":{},"body":{"injectables/TypeGreenScoreService.html":{}}}],["typegreenscoreservice",{"_index":1148,"title":{"injectables/TypeGreenScoreService.html":{}},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/PoiService.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"modules/TypeGreenScoreModule.html":{},"injectables/TypeGreenScoreService.html":{},"coverage.html":{},"overview.html":{}}}],["typeinterface",{"_index":1994,"title":{"interfaces/TypeInterface.html":{}},"body":{"classes/TypeDto.html":{},"interfaces/TypeInterface.html":{},"coverage.html":{}}}],["typemodule",{"_index":150,"title":{"modules/TypeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PoiModule.html":{},"modules/StatsModule.html":{},"modules/TypeModule.html":{},"modules.html":{},"overview.html":{}}}],["typename",{"_index":1182,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/StatsService.html":{}}}],["typeof",{"_index":722,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/TypeService.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":367,"title":{},"body":{"classes/Challenge.html":{},"injectables/ChallengeService.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/ImgPoi.html":{},"injectables/ImgPoiService.html":{},"classes/JoinTagPoiEntity.html":{},"injectables/JoinTagPoiService.html":{},"classes/JoinUserChallenge.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"injectables/JoinUserPoiService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{},"classes/KnowIt.html":{},"injectables/KnowItService.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"injectables/PercentTypeGreenScoreAndPoiService.html":{},"classes/Poi.html":{},"injectables/PoiService.html":{},"classes/QuestionQuizz.html":{},"injectables/QuestionQuizzService.html":{},"classes/Quizz.html":{},"injectables/QuizzService.html":{},"classes/Role.html":{},"injectables/RoleService.html":{},"classes/Tag.html":{},"injectables/TagsService.html":{},"classes/ThemeQuizz.html":{},"injectables/ThemeQuizzService.html":{},"classes/Type.html":{},"classes/TypeGreenScore.html":{},"injectables/TypeGreenScoreService.html":{},"injectables/TypeService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["typeormmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature",{"_index":949,"title":{},"body":{"modules/JoinUserThemeQuizzModule.html":{}}}],["typeormmodule.forfeature([challenge",{"_index":444,"title":{},"body":{"modules/ChallengeModule.html":{}}}],["typeormmodule.forfeature([company",{"_index":651,"title":{},"body":{"modules/CompanyModule.html":{}}}],["typeormmodule.forfeature([imgpoi",{"_index":772,"title":{},"body":{"modules/ImgPoiModule.html":{}}}],["typeormmodule.forfeature([jointagpoientity",{"_index":807,"title":{},"body":{"modules/JoinTagPoiModule.html":{}}}],["typeormmodule.forfeature([joinuserchallenge",{"_index":867,"title":{},"body":{"modules/JoinUserChallengeModule.html":{}}}],["typeormmodule.forfeature([joinuserpoi",{"_index":911,"title":{},"body":{"modules/JoinUserPoiModule.html":{}}}],["typeormmodule.forfeature([knowit",{"_index":1039,"title":{},"body":{"modules/KnowItModule.html":{}}}],["typeormmodule.forfeature([percenttypegreenscoreandpoi",{"_index":1120,"title":{},"body":{"modules/PercentTypeGreenScoreAndPoiModule.html":{}}}],["typeormmodule.forfeature([poi",{"_index":1408,"title":{},"body":{"modules/PoiModule.html":{}}}],["typeormmodule.forfeature([questionquizz",{"_index":1576,"title":{},"body":{"modules/QuestionQuizzModule.html":{}}}],["typeormmodule.forfeature([quizz",{"_index":1643,"title":{},"body":{"modules/QuizzModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1694,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":1819,"title":{},"body":{"modules/TagsModule.html":{}}}],["typeormmodule.forfeature([themequizz",{"_index":1911,"title":{},"body":{"modules/ThemeQuizzModule.html":{}}}],["typeormmodule.forfeature([type",{"_index":2070,"title":{},"body":{"modules/TypeModule.html":{}}}],["typeormmodule.forfeature([typegreenscore",{"_index":2039,"title":{},"body":{"modules/TypeGreenScoreModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":2177,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["typepercent",{"_index":1452,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepercent.percent",{"_index":1453,"title":{},"body":{"injectables/PoiService.html":{}}}],["typepoi",{"_index":1761,"title":{},"body":{"injectables/StatsService.html":{}}}],["typepoienum",{"_index":1352,"title":{},"body":{"injectables/PoiDto.html":{},"injectables/PoiService.html":{},"miscellaneous/enumerations.html":{}}}],["typerepository",{"_index":2075,"title":{},"body":{"injectables/TypeService.html":{}}}],["types",{"_index":1184,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{},"injectables/StatsService.html":{},"injectables/TypeService.html":{}}}],["types.map((type",{"_index":1185,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["types.map(async",{"_index":1753,"title":{},"body":{"injectables/StatsService.html":{}}}],["types/bcrypt",{"_index":2304,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types/compression",{"_index":2306,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types/cookie",{"_index":2308,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types/express",{"_index":2430,"title":{},"body":{"index.html":{}}}],["types/jest",{"_index":2431,"title":{},"body":{"index.html":{}}}],["types/node",{"_index":2432,"title":{},"body":{"index.html":{}}}],["types/passport",{"_index":2433,"title":{},"body":{"index.html":{}}}],["types/supertest",{"_index":2434,"title":{},"body":{"index.html":{}}}],["types[n",{"_index":2094,"title":{},"body":{"injectables/TypeService.html":{}}}],["typescrip",{"_index":2443,"title":{},"body":{"index.html":{}}}],["typeservice",{"_index":1421,"title":{"injectables/TypeService.html":{}},"body":{"injectables/PoiService.html":{},"injectables/StatsService.html":{},"controllers/TypeController.html":{},"modules/TypeModule.html":{},"injectables/TypeService.html":{},"coverage.html":{},"overview.html":{}}}],["typespoi",{"_index":1757,"title":{},"body":{"injectables/StatsService.html":{}}}],["typespoi.map(async",{"_index":1760,"title":{},"body":{"injectables/StatsService.html":{}}}],["typetocheck",{"_index":1459,"title":{},"body":{"injectables/PoiService.html":{}}}],["typetocheck.length",{"_index":1463,"title":{},"body":{"injectables/PoiService.html":{}}}],["ui",{"_index":2336,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["uml",{"_index":2407,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":679,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["unauthorizedexception(`cannot",{"_index":698,"title":{},"body":{"injectables/CompanyService.html":{}}}],["undefined",{"_index":363,"title":{},"body":{"classes/Challenge.html":{},"classes/Company.html":{},"injectables/EntityTypeInterceptor.html":{},"classes/ImgPoi.html":{},"classes/JoinTagPoiEntity.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"classes/KnowIt.html":{},"classes/PercentTypeGreenScoreAndPoi.html":{},"classes/Poi.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizz.html":{},"classes/Quizz.html":{},"classes/ThemeQuizz.html":{},"classes/User.html":{}}}],["undefined})@useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":557,"title":{},"body":{"controllers/CompanyController.html":{}}}],["unique",{"_index":512,"title":{},"body":{"classes/Company.html":{},"classes/Poi.html":{},"classes/User.html":{}}}],["up",{"_index":2353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["update",{"_index":576,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["update(user",{"_index":2246,"title":{},"body":{"injectables/UserService.html":{}}}],["updatecompany",{"_index":553,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(@param('id",{"_index":601,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatecompany(id",{"_index":573,"title":{},"body":{"controllers/CompanyController.html":{}}}],["updatepoi",{"_index":1246,"title":{},"body":{"controllers/PoiController.html":{},"injectables/PoiService.html":{}}}],["updatepoi(@param('id",{"_index":1295,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(idpoi",{"_index":1275,"title":{},"body":{"controllers/PoiController.html":{}}}],["updatepoi(poidto",{"_index":1442,"title":{},"body":{"injectables/PoiService.html":{}}}],["uptest",{"_index":2417,"title":{},"body":{"index.html":{}}}],["use",{"_index":663,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/functions.html":{}}}],["useguards",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/StatsController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('local",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(roleguard",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@delete(':id')@usepipes(new",{"_index":1789,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@get",{"_index":385,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('/one/:id",{"_index":2018,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@get('one/:id')@usepipes(new",{"_index":1793,"title":{},"body":{"controllers/TagsController.html":{},"controllers/TypeController.html":{}}}],["useguards(roleguard)@roles('admin')@post()@usepipes(new",{"_index":1974,"title":{},"body":{"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@usepipes(new",{"_index":2013,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["useguards(roleguard)@roles('admin')@usepipes(validationpipe)@post",{"_index":379,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["useguards(roleguard)@roles('user')@get('current",{"_index":388,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["useguards(roleguard)@roles('user')@put('validate/:id",{"_index":391,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["useinterceptors",{"_index":577,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useinterceptors(entitytypeinterceptor",{"_index":598,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/PoiController.html":{}}}],["useless",{"_index":624,"title":{},"body":{"injectables/CompanyDto.html":{}}}],["usepipes",{"_index":395,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(new",{"_index":590,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["usepipes(percenttypegreenscoreandpoitransformationpipe",{"_index":1091,"title":{},"body":{"controllers/PercentTypeGreenScoreAndPoiController.html":{}}}],["usepipes(poitransformationpipe",{"_index":1289,"title":{},"body":{"controllers/PoiController.html":{}}}],["usepipes(validationpipe",{"_index":411,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/ThemeQuizzController.html":{}}}],["usepipes(validationpipe)@delete(':id",{"_index":382,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["user",{"_index":170,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/AppUserDto.html":{},"injectables/AuthService.html":{},"controllers/ChallengeController.html":{},"modules/ChallengeModule.html":{},"injectables/ChallengeService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserChallengeDto.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserPoiDto.html":{},"interfaces/JoinUserPoiInterface.html":{},"modules/JoinUserPoiModule.html":{},"injectables/JoinUserPoiService.html":{},"modules/JoinUserQuizzModule.html":{},"injectables/JoinUserQuizzService.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"modules/JoinUserThemeQuizzModule.html":{},"injectables/JoinUserThemeQuizzService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PoiController.html":{},"injectables/PoiGeoCalcService.html":{},"modules/PoiModule.html":{},"injectables/PoiService.html":{},"guards/RoleGuard.html":{},"classes/TestStrategy.html":{},"modules/ThemeQuizzModule.html":{},"injectables/ThemeQuizzService.html":{},"classes/User.html":{},"modules/UserAppModule.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'})@isemail",{"_index":277,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{}}}],["user'})@isstring",{"_index":271,"title":{},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{}}}],["user.controller",{"_index":2175,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/UserService.html":{}}}],["user.mail",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role",{"_index":2213,"title":{},"body":{"injectables/UserService.html":{}}}],["user.roles",{"_index":1687,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.roles.some((role",{"_index":1685,"title":{},"body":{"guards/RoleGuard.html":{}}}],["user.service",{"_index":2142,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.user",{"_index":2157,"title":{},"body":{"controllers/UserController.html":{}}}],["user.user.company",{"_index":1401,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["user/user.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/ThemeQuizzModule.html":{}}}],["user/user.service",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JwtStrategy.html":{},"injectables/ThemeQuizzService.html":{}}}],["user/userentity",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"injectables/ChallengeService.html":{},"classes/JoinUserChallenge.html":{},"injectables/JoinUserChallengeService.html":{},"classes/JoinUserPoi.html":{},"interfaces/JoinUserPoiInterface.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/JoinUserThemeQuizzService.html":{}}}],["user_role",{"_index":2179,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto",{"_index":2196,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto.company",{"_index":2225,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto.mail",{"_index":2231,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto.password",{"_index":2229,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto.role",{"_index":2223,"title":{},"body":{"injectables/UserService.html":{}}}],["userappdto.username.trim().tolowercase",{"_index":2232,"title":{},"body":{"injectables/UserService.html":{}}}],["userappmodule",{"_index":151,"title":{"modules/UserAppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserAppModule.html":{},"modules.html":{},"overview.html":{}}}],["userappservice",{"_index":2116,"title":{"injectables/UserAppService.html":{}},"body":{"modules/UserAppModule.html":{},"injectables/UserAppService.html":{},"coverage.html":{},"overview.html":{}}}],["userchallenge",{"_index":885,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["userchallenge.user",{"_index":891,"title":{},"body":{"injectables/JoinUserChallengeService.html":{}}}],["usercontroller",{"_index":2120,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":2135,"title":{"classes/UserDto.html":{}},"body":{"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userentity",{"_index":2176,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["userid",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"classes/JoinUserChallenge.html":{},"classes/JoinUserPoi.html":{},"classes/JoinUserQuzz.html":{},"classes/JoinUserThemeQuizz.html":{},"injectables/UserService.html":{}}}],["userinterface",{"_index":281,"title":{"interfaces/UserInterface.html":{}},"body":{"classes/AppUserDto.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["usermodule",{"_index":152,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"classes/AppUserDto.html":{},"classes/LoginDto.html":{}}}],["userrepository",{"_index":2190,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":532,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["userservice",{"_index":319,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"modules/JoinUserChallengeModule.html":{},"injectables/JoinUserChallengeService.html":{},"injectables/JwtStrategy.html":{},"injectables/ThemeQuizzService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/function.utils",{"_index":718,"title":{},"body":{"injectables/EntityTypeInterceptor.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"controllers/PoiController.html":{},"injectables/PoiService.html":{},"injectables/PoiTransformationPipe.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"injectables/TypeService.html":{}}}],["validate",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/TestStrategy.html":{}}}],["validate(mail",{"_index":1055,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":970,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/TestStrategy.html":{}}}],["validatechallenge",{"_index":376,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["validatechallenge(@param('id",{"_index":422,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["validatechallenge(idchallenge",{"_index":390,"title":{},"body":{"controllers/ChallengeController.html":{}}}],["validategoinpoi",{"_index":1247,"title":{},"body":{"controllers/PoiController.html":{}}}],["validategoinpoi(@param('id",{"_index":1310,"title":{},"body":{"controllers/PoiController.html":{}}}],["validategoinpoi(id",{"_index":1279,"title":{},"body":{"controllers/PoiController.html":{}}}],["validatenested",{"_index":1348,"title":{},"body":{"injectables/PoiDto.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/ValidationDto.html":{}}}],["validateuser",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(mail",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationdto",{"_index":1884,"title":{"classes/ValidationDto.html":{}},"body":{"controllers/ThemeQuizzController.html":{},"classes/ValidationDto.html":{},"coverage.html":{}}}],["validationdto.idthemequizz",{"_index":1901,"title":{},"body":{"controllers/ThemeQuizzController.html":{}}}],["validationpipe",{"_index":396,"title":{},"body":{"controllers/ChallengeController.html":{},"controllers/CompanyController.html":{},"controllers/KnowItController.html":{},"controllers/PercentTypeGreenScoreAndPoiController.html":{},"controllers/PoiController.html":{},"controllers/QuizzController.html":{},"controllers/TagsController.html":{},"controllers/ThemeQuizzController.html":{},"controllers/TypeController.html":{},"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{},"controllers/UserController.html":{}}}],["validationpipe())@delete(':id",{"_index":2014,"title":{},"body":{"controllers/TypeGreenScoreController.html":{},"controllers/TypeGreenScoreController-1.html":{}}}],["validationpipe())@roles('admin",{"_index":1277,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@useguards(roleguard)@roles('admin",{"_index":1009,"title":{},"body":{"controllers/KnowItController.html":{},"controllers/QuizzController.html":{},"controllers/ThemeQuizzController.html":{}}}],["validationpipe())@useguards(roleguard)@roles('user",{"_index":1260,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe())@usepipes(poitransformationpipe)@useguards(roleguard)@roles('admin",{"_index":1251,"title":{},"body":{"controllers/PoiController.html":{}}}],["validationpipe({transform",{"_index":591,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/TagsController.html":{},"controllers/TypeController.html":{},"controllers/UserController.html":{}}}],["validator",{"_index":287,"title":{},"body":{"classes/AppUserDto.html":{},"classes/ChallengeDto.html":{},"injectables/CompanyDto.html":{},"classes/ImgPoiDto.html":{},"classes/JoinUserChallengeDto.html":{},"classes/KnowItDto.html":{},"classes/LoginDto.html":{},"classes/PercentTypeGreenScoreAndPoiDto.html":{},"injectables/PoiDto.html":{},"classes/QuestionQuizzDto.html":{},"classes/QuizzAndQuestionDto.html":{},"classes/QuizzDto.html":{},"classes/SubmitDto.html":{},"classes/TagsDto.html":{},"classes/ThemeAndQuizzDto.html":{},"classes/ThemeQuizzDto.html":{},"classes/TypeDto.html":{},"classes/TypeGreenScoreDto.html":{},"classes/UserDto.html":{},"classes/ValidationDto.html":{},"dependencies.html":{},"index.html":{}}}],["validity",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":30,"title":{},"body":{"classes/AccessToken.html":{},"interfaces/AccessTokenInterfaces.html":{},"injectables/CompanyService.html":{},"classes/ImgPoiDto.html":{},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{},"injectables/PoiDto.html":{},"injectables/PoiTransformationPipe.html":{},"classes/QuizzDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.tags.map((idtags",{"_index":1539,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["value.typegreenscore.map((percentandtypegc",{"_index":1543,"title":{},"body":{"injectables/PoiTransformationPipe.html":{}}}],["variable",{"_index":1743,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["variables",{"_index":2452,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":2377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vegan",{"_index":1809,"title":{},"body":{"classes/TagsDto.html":{}}}],["web",{"_index":2401,"title":{},"body":{"index.html":{}}}],["where('id",{"_index":2248,"title":{},"body":{"injectables/UserService.html":{}}}],["where('idpoi",{"_index":845,"title":{},"body":{"injectables/JoinTagPoiService.html":{}}}],["where('percent",{"_index":1176,"title":{},"body":{"injectables/PercentTypeGreenScoreAndPoiService.html":{}}}],["where(`id",{"_index":1715,"title":{},"body":{"injectables/RoleService.html":{}}}],["without",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["work",{"_index":530,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"miscellaneous/functions.html":{}}}],["worker",{"_index":529,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{}}}],["working",{"_index":541,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyDto.html":{},"classes/TypeDto.html":{},"miscellaneous/enumerations.html":{}}}],["world",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["x1",{"_index":1365,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["x2",{"_index":1373,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["y1",{"_index":1366,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["y2",{"_index":1375,"title":{},"body":{"injectables/PoiGeoCalcService.html":{}}}],["yarn",{"_index":2413,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChallengeModule.html":{},"modules/CompanyModule.html":{},"modules/GreenScoreModule.html":{},"modules/ImgPoiModule.html":{},"modules/JoinTagPoiModule.html":{},"modules/JoinUserChallengeModule.html":{},"modules/JoinUserPoiModule.html":{},"modules/JoinUserQuizzModule.html":{},"modules/JoinUserThemeQuizzModule.html":{},"modules/KnowItModule.html":{},"modules/PercentTypeGreenScoreAndPoiModule.html":{},"modules/PoiModule.html":{},"modules/QuestionQuizzModule.html":{},"modules/QuizzModule.html":{},"modules/RoleModule.html":{},"modules/StatsModule.html":{},"modules/TagsModule.html":{},"modules/ThemeQuizzModule.html":{},"modules/TypeGreenScoreModule.html":{},"modules/TypeModule.html":{},"modules/UserAppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessToken.html":{"url":"classes/AccessToken.html","title":"class - AccessToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/access-token.ts\n        \n\n            \n                Description\n            \n            \n                This controller allows to create a new jwt token\n\n            \n\n\n            \n                Implements\n            \n            \n                            AccessTokenInterfaces\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken)\n                    \n                \n                        \n                            \n                                Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                            Set the access token to the access_token properties\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                value will be set to access_token property\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            access_token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/access-token.ts:11\n                            \n                        \n\n                \n                    \n                        Cf interface\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccessTokenInterfaces } from './interfaces/access-token.interfaces';\n\n/**\n * This controller allows to create a new jwt token\n */\nexport class AccessToken implements AccessTokenInterfaces {\n  /**\n   * Cf interface\n   */\n    // tslint:disable-next-line:variable-name\n  access_token: string;\n\n  /**\n   * Set the access token to the access_token properties\n   * @param accessToken {string} value will be set to access_token property\n   */\n  constructor(accessToken) {\n    this.access_token = accessToken;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AccessTokenInterfaces.html":{"url":"interfaces/AccessTokenInterfaces.html","title":"interface - AccessTokenInterfaces","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AccessTokenInterfaces\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/access-token.interfaces.ts\n        \n\n            \n                Description\n            \n            \n                this interface define the value attempt in a jwt token\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    this data allows to know who send the request and authorize or not the access to some route\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface AccessTokenInterfaces {\n   /**\n    * this data allows to know who send the request and authorize or not the access to some route\n    */\n   access_token: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This controller contains the routes to connect and retrieve your profile\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@ApiUnauthorizedResponse()@ApiOkResponse()@UseGuards(undefined)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:42\n                \n            \n\n\n            \n                \n                    This method allows get account information from jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, toto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(undefined)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:26\n                \n            \n\n\n            \n                \n                    the call of this method allows to recover a jwt token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    toto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, UseGuards, Request, Get, Body } from '@nestjs/common';\nimport {AuthService} from './auth/auth.service';\nimport {AuthGuard} from '@nestjs/passport';\nimport { AccessToken } from './auth/access-token';\nimport { ApiBearerAuth, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\nimport { LoginDto } from './loginDto';\n\n/**\n * This controller contains the routes to connect and retrieve your profile\n */\n@ApiTags('login')\n@Controller()\nexport class AppController {\n  constructor(readonly authService: AuthService) {}\n\n  /**\n   * the call of this method allows to recover a jwt token\n   * @param req {Request}\n   * @param toto\n   * @return {AccessToken}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(AuthGuard('local'))\n  @Post('auth/login')\n  async login(@Request() req, @Body() toto: LoginDto): Promise {\n    // tslint:disable-next-line:no-console\n    return await this.authService.login(req.user);\n  }\n\n  /**\n   * This method allows get account information from jwt token\n   * @param req {Request}\n   */\n  @ApiBearerAuth()\n  @ApiUnauthorizedResponse()\n  @ApiOkResponse()\n  @UseGuards(AuthGuard('jwt'))\n  // @UseGuards(RoleGuard)\n  // @Roles('user')\n  @Get('profile')\n  async getProfile(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChallengeModule\n\nChallengeModule\n\nAppModule -->\n\nChallengeModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nImgPoiModule\n\nImgPoiModule\n\nAppModule -->\n\nImgPoiModule->AppModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinUserChallengeModule\n\nJoinUserChallengeModule\n\nAppModule -->\n\nJoinUserChallengeModule->AppModule\n\n\n\n\n\nJoinUserPoiModule\n\nJoinUserPoiModule\n\nAppModule -->\n\nJoinUserPoiModule->AppModule\n\n\n\n\n\nJoinUserQuizzModule\n\nJoinUserQuizzModule\n\nAppModule -->\n\nJoinUserQuizzModule->AppModule\n\n\n\n\n\nJoinUserThemeQuizzModule\n\nJoinUserThemeQuizzModule\n\nAppModule -->\n\nJoinUserThemeQuizzModule->AppModule\n\n\n\n\n\nKnowItModule\n\nKnowItModule\n\nAppModule -->\n\nKnowItModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nQuestionQuizzModule\n\nQuestionQuizzModule\n\nAppModule -->\n\nQuestionQuizzModule->AppModule\n\n\n\n\n\nQuizzModule\n\nQuizzModule\n\nAppModule -->\n\nQuizzModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nThemeQuizzModule\n\nThemeQuizzModule\n\nAppModule -->\n\nThemeQuizzModule->AppModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ChallengeModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            GreenScoreModule\n                        \n                        \n                            ImgPoiModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            JoinUserChallengeModule\n                        \n                        \n                            JoinUserPoiModule\n                        \n                        \n                            JoinUserQuizzModule\n                        \n                        \n                            JoinUserThemeQuizzModule\n                        \n                        \n                            KnowItModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            QuestionQuizzModule\n                        \n                        \n                            QuizzModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            StatsModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            ThemeQuizzModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                        \n                            UserAppModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UserModule } from './user/user.module';\nimport { RoleModule } from './role/role.module';\nimport { PoiModule } from './poi/poi.module';\nimport { CompanyModule } from './company/company.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role/roleEntity';\nimport { User } from './user/userEntity';\nimport { Company } from './company/companyEntity';\nimport { TypeModule } from './type/type.module';\nimport { TagsModule } from './tags/tags.module';\nimport { Type } from './type/typeEntity';\nimport { Tag } from './tags/tagEntity';\nimport { Poi } from './poi/poiEntity';\nimport { JoinTagPoiModule } from './join-tag-poi/join-tag-poi.module';\nimport { UserAppModule } from './user-app/user-app.module';\nimport { JoinTagPoiEntity } from './join-tag-poi/joinTagPoiEntity';\nimport { GreenScoreModule } from './green-score/green-score.module';\nimport { TypeGreenScoreModule } from './type-green-score/type-green-score.module';\nimport { PercentTypeGreenScoreAndPoiModule } from './percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScore } from './type-green-score/typeGreenScoreEntity';\nimport { PercentTypeGreenScoreAndPoi } from './percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { StatsModule } from './stats/stats.module';\nimport { QuizzModule } from './quizz/quizz.module';\nimport { QuestionQuizzModule } from './question-quizz/question-quizz.module';\nimport { KnowItModule } from './know-it/know-it.module';\nimport { ChallengeModule } from './challenge/challenge.module';\nimport { KnowIt } from './know-it/knowItEntity';\nimport { Quizz } from './quizz/quizzEntity';\nimport { QuestionQuizz } from './question-quizz/questionQuizzEntity';\nimport { JoinUserQuizzModule } from './join-user-quizz/join-user-quizz.module';\nimport { JoinUserQuzz } from './join-user-quizz/joinUserQuizzEntity';\nimport { JoinUserChallengeModule } from './join-user-challenge/join-user-challenge.module';\nimport { Challenge } from './challenge/challengeEntity';\nimport { JoinUserChallenge } from './join-user-challenge/joinUserChallengeEntity';\nimport { ImgPoiModule } from './img-poi/img-poi.module';\nimport { ImgPoi } from './img-poi/imgPoiEntity';\nimport { ThemeQuizzModule } from './theme-quizz/theme-quizz.module';\nimport { ThemeQuizz } from './theme-quizz/themeQuizzEntity';\nimport { JoinUserPoiModule } from './join-user-poi/join-user-poi.module';\nimport { JoinUserPoi } from './join-user-poi/joinUserPoiEntity';\nimport { JoinUserThemeQuizzModule } from './join-user-theme-quizz/join-user-theme-quizz.module';\nimport { JoinUserThemeQuizz } from './join-user-theme-quizz/joinUserThemeQuizzEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.DB_HOST || 'localhost',\n      port: 3306,\n      username: process.env.DB_USER || 'admin',\n      password: process.env.DB_PASSWORD || 'root',\n      database: process.env.DB_NAME || 'madu',\n      entities: [\n        Role,\n        User,\n        Company,\n        Type,\n        Tag,\n        Poi,\n        JoinTagPoiEntity,\n        TypeGreenScore,\n        PercentTypeGreenScoreAndPoi,\n        KnowIt,\n        Quizz,\n        QuestionQuizz,\n        JoinUserQuzz,\n        Challenge,\n        JoinUserChallenge,\n        ImgPoi,\n        ThemeQuizz,\n        JoinUserPoi,\n        JoinUserThemeQuizz,\n      ],\n      synchronize: true,\n    }),\n    AuthModule,\n    UserModule,\n    RoleModule,\n    PoiModule,\n    CompanyModule,\n    TypeModule,\n    TagsModule,\n    JoinTagPoiModule,\n    UserAppModule,\n    GreenScoreModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n    StatsModule,\n    QuizzModule,\n    QuestionQuizzModule,\n    KnowItModule,\n    ChallengeModule,\n    JoinUserQuizzModule,\n    JoinUserChallengeModule,\n    ImgPoiModule,\n    ThemeQuizzModule,\n    JoinUserPoiModule,\n    JoinUserThemeQuizzModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n            \n                Description\n            \n            \n                Demo service nest\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:12\n                \n            \n\n\n            \n                \n                    demo method nest\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Demo service nest\n */\n@Injectable()\nexport class AppService {\n  /**\n   * demo method nest\n   * @returns {string}\n   */\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppUserDto.html":{"url":"classes/AppUserDto.html","title":"class - AppUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/appUserDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                mail\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'first name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/appUserDto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'last name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/appUserDto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/appUserDto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/appUserDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/appUserDto.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './interfaces/user.interface';\nimport { IsEmail, IsEnum, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AppUserDto {\n  @ApiProperty({\n    description: 'first name of user',\n  })\n  @IsString()\n  readonly firstName: string;\n\n  @ApiProperty({\n    description: 'last name of user',\n  })\n  @IsString()\n  readonly lastName: string;\n\n  @IsOptional()\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  readonly mail?: string;\n\n  @ApiProperty({\n    description: 'password of user',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  username?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nRoleModule\n\nRoleModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RoleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '../user/user.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { RoleModule } from '../role/role.module';\n\n@Module({\n  imports: [\n    UserModule,\n    PassportModule,\n    PassportModule.register({defaultStrategy: 'local'}),\n    RoleModule,\n    JwtModule.register({\n      secret: process.env.JWT_TOKEN || 'Helloo',\n      signOptions: {expiresIn: '3600s'},\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            set userService and jwtService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:42\n                \n            \n\n\n            \n                \n                    Method who create en send a jwt\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(mail: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:28\n                \n            \n\n\n            \n                \n                    Method who check if the login password is correct and return the result without password return null if not\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        || null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { AccessToken } from './access-token';\n\n/**\n * Class contains some method for the authentication check https://docs.nestjs.com/techniques/authentication for more informations\n */\n@Injectable()\nexport class AuthService {\n  /**\n   * set userService and jwtService\n   * @param userService {UserService}\n   * @param jwtService {JwtService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  /**\n   *  Method who check if the login password is correct and return the result without password return null if not\n   * @param mail {string}\n   * @param pass {string}\n   * @returns {object} || null\n   */\n  async validateUser(mail: string, pass: string) {\n    const user = await this.userService.getUserByMail(mail);\n    if (user &&  await bcrypt.compare(pass, user.password)) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  /**\n   * Method who create en send a jwt\n   * @param user\n   * @returns {AccessToken}\n   */\n  async login(user): Promise {\n    const payload = { userId: user.id, mail: user.mail };\n    const token = await this.jwtService.signAsync(payload);\n    return new AccessToken(token);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Challenge.html":{"url":"classes/Challenge.html","title":"class - Challenge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Challenge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/challenge/challengeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crystalGain\n                            \n                            \n                                dateCreate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                publicationDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            crystalGain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 20})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeEntity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeEntity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeEntity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeEntity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('challenge')\nexport class Challenge {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    type: 'longtext',\n  })\n  description: string;\n\n  @Column({\n    default: 20,\n  })\n  crystalGain: number;\n\n  @Column({\n    type: 'timestamp',\n  })\n  dateCreate: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n    default: null,\n  })\n  publicationDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChallengeController.html":{"url":"controllers/ChallengeController.html","title":"controller - ChallengeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChallengeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/challenge/challenge.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                challenge\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addChallenge\n                            \n                            \n                                    Async\n                                deleteChallenge\n                            \n                            \n                                    Async\n                                getChallenges\n                            \n                            \n                                    Async\n                                getCurrentChallenge\n                            \n                            \n                                    Async\n                                validateChallenge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChallenge(challengeDto: ChallengeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(ValidationPipe)@Post()\n                \n            \n\n            \n                \n                    Defined in src/challenge/challenge.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    challengeDto\n                                    \n                                                ChallengeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteChallenge(idChallenge: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(ValidationPipe)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/challenge/challenge.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idChallenge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getChallenges\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChallenges()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/challenge/challenge.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCurrentChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentChallenge(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('user')@Get('current')\n                \n            \n\n            \n                \n                    Defined in src/challenge/challenge.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateChallenge(idChallenge: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('user')@Put('validate/:id')\n                \n            \n\n            \n                \n                    Defined in src/challenge/challenge.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idChallenge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, Request, UsePipes, ValidationPipe, Put } from '@nestjs/common';\nimport { ChallengeService } from './challenge.service';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ChallengeDto } from './challengeDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { JoinUserChallengeService } from '../join-user-challenge/join-user-challenge.service';\nimport { Challenge } from './challengeEntity';\nimport { JoinUserChallengeDto } from '../join-user-challenge/joinUserChallengeDto';\n\n@ApiTags('Challenge')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\n@Controller('challenge')\nexport class ChallengeController {\n  constructor(\n    private readonly challengeService: ChallengeService,\n    private readonly joinUserChallengeService: JoinUserChallengeService,\n  ) {}\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(ValidationPipe)\n  @Post()\n  async addChallenge(@Body() challengeDto: ChallengeDto) {\n    return await this.challengeService.addChallenge(challengeDto);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getChallenges() {\n    return await this.challengeService.getChallenge();\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  @Get('current')\n  async getCurrentChallenge(@Request() user) {\n    return await this.challengeService.getCurrentChallenge(user.user);\n  }\n\n  @UsePipes(ValidationPipe)\n  @Delete(':id')\n  async deleteChallenge(@Param('id', new ParseIntPipe()) idChallenge: number) {\n    return await this.challengeService.deleteChallenge(idChallenge);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  @Put('validate/:id')\n  async validateChallenge(@Param('id', new ParseIntPipe()) idChallenge: number, @Request() req) {\n    const user = req.user.user;\n    const challengeEntity = await this.challengeService.findOne(idChallenge);\n    const doChallenge = true;\n    return await this.joinUserChallengeService.addJoinUserChallenge(challengeEntity, user, doChallenge);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChallengeDto.html":{"url":"classes/ChallengeDto.html","title":"class - ChallengeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChallengeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/challenge/challengeDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                gain\n                            \n                            \n                                    Readonly\n                                publicationDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeDto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/challenge/challengeDto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsDateString, IsMilitaryTime, IsNumber, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ChallengeDto {\n  @IsString()\n  @ApiProperty()\n  readonly description: string;\n\n  @IsNumber()\n  @ApiProperty()\n  readonly gain: number;\n\n  @IsString()\n  @ApiProperty()\n  readonly publicationDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChallengeModule.html":{"url":"modules/ChallengeModule.html","title":"module - ChallengeModule","body":"\n                   \n\n\n\n\n    Modules\n    ChallengeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ChallengeModule\n\n\n\ncluster_ChallengeModule_imports\n\n\n\ncluster_ChallengeModule_exports\n\n\n\ncluster_ChallengeModule_providers\n\n\n\n\nJoinUserChallengeModule\n\nJoinUserChallengeModule\n\n\n\nChallengeModule\n\nChallengeModule\n\nChallengeModule -->\n\nJoinUserChallengeModule->ChallengeModule\n\n\n\n\n\nChallengeService \n\nChallengeService \n\nChallengeService  -->\n\nChallengeModule->ChallengeService \n\n\n\n\n\nChallengeService\n\nChallengeService\n\nChallengeModule -->\n\nChallengeService->ChallengeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/challenge/challenge.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChallengeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChallengeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JoinUserChallengeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChallengeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChallengeService } from './challenge.service';\nimport { ChallengeController } from './challenge.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Challenge } from './challengeEntity';\nimport { JoinUserChallengeModule } from '../join-user-challenge/join-user-challenge.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Challenge]),\n    JoinUserChallengeModule,\n  ],\n  providers: [ChallengeService],\n  controllers: [ChallengeController],\n  exports: [ChallengeService],\n})\nexport class ChallengeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChallengeService.html":{"url":"injectables/ChallengeService.html","title":"injectable - ChallengeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ChallengeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/challenge/challenge.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addChallenge\n                            \n                            \n                                    Async\n                                deleteChallenge\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getChallenge\n                            \n                            \n                                    Async\n                                getCurrentChallenge\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(challengeRepository: Repository, joinUserChallengeService: JoinUserChallengeService)\n                    \n                \n                        \n                            \n                                Defined in src/challenge/challenge.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        challengeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinUserChallengeService\n                                                  \n                                                        \n                                                                        JoinUserChallengeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addChallenge(challengeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/challenge/challenge.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    challengeDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteChallenge(idChallenge: number)\n                \n            \n\n\n            \n                \n                    Defined in src/challenge/challenge.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idChallenge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(idChallenge: number)\n                \n            \n\n\n            \n                \n                    Defined in src/challenge/challenge.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idChallenge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getChallenge()\n                \n            \n\n\n            \n                \n                    Defined in src/challenge/challenge.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCurrentChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentChallenge(user)\n                \n            \n\n\n            \n                \n                    Defined in src/challenge/challenge.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Challenge } from './challengeEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user/userEntity';\nimport { JoinUserChallengeService } from '../join-user-challenge/join-user-challenge.service';\n\n@Injectable()\nexport class ChallengeService {\n  constructor(\n    @InjectRepository(Challenge)\n    private readonly challengeRepository: Repository,\n    private readonly joinUserChallengeService: JoinUserChallengeService,\n  ) {}\n\n  async addChallenge(challengeDto) {\n    return await this.challengeRepository.save(challengeDto);\n  }\n\n  async getChallenge(): Promise {\n    return await this.challengeRepository.find();\n  }\n\n  async getCurrentChallenge(user) {\n    const challenges = await this.challengeRepository.find();\n    return await Promise.all(challenges.map(async (challenge: any) => {\n      challenge.doIt = !!(await this.joinUserChallengeService.checkValidation(user.user, challenge));\n      return challenge;\n    }));\n  }\n\n  async findOne(idChallenge: number): Promise {\n    return await this.challengeRepository.findOneOrFail(idChallenge)\n      .catch(() => {\n        throw new NotFoundException(`Challenge with id ${idChallenge} Not Found`);\n      });\n  }\n\n  async deleteChallenge(idChallenge: number) {\n    const challenge = await this.findOne(idChallenge);\n    return await this.challengeRepository.remove(challenge);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyEntity.ts\n        \n\n            \n                Description\n            \n            \n                Company entity from the database\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                beginDeal\n                            \n                            \n                                city\n                            \n                            \n                                createDate\n                            \n                            \n                                domainMail\n                            \n                            \n                                endDeal\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                logo\n                            \n                            \n                                long\n                            \n                            \n                                name\n                            \n                            \n                                nbWorker\n                            \n                            \n                                postalCode\n                            \n                            \n                                range\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:20\n                            \n                        \n\n                \n                    \n                        address of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:105\n                            \n                        \n\n                \n                    \n                        Date when the contract begin\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 40, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:45\n                            \n                        \n\n                \n                    \n                        city of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 75, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:55\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'date', default: '2020-10-10'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:114\n                            \n                        \n\n                \n                    \n                        Date when the contract end\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:12\n                            \n                        \n\n                \n                    \n                        Unique id to a entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:83\n                            \n                        \n\n                \n                    \n                        Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 500, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:73\n                            \n                        \n\n                \n                    \n                        Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({unique: true, length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:29\n                            \n                        \n\n                \n                    \n                        name of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:91\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:35\n                            \n                        \n\n                \n                    \n                        postal code of company entity stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 1000})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyEntity.ts:63\n                            \n                        \n\n                \n                    \n                        Type of company entity stock in db (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n/**\n * Company entity from the database\n */\n@Entity()\nexport class Company {\n  /**\n   * Unique id to a entity stock in db\n   */\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  /**\n   * address of company entity stock in db\n   */\n  @Column({\n    length: 100,\n  })\n  address: string;\n\n  /**\n   * name of company entity stock in db\n   */\n  @Column({\n    unique: true,\n    length: 50,\n  })\n  name: string;\n\n  /**\n   * postal code of company entity stock in db\n   */\n  @Column()\n  postalCode: string;\n\n  /**\n   * city of company entity stock in db\n   */\n  @Column({\n    length: 40,\n    nullable: true,\n    default: null,\n  })\n  city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com)\n   */\n  @Column({\n    length: 75,\n    nullable: true,\n    default: null,\n  })\n  domainMail: string;\n\n  /**\n   * Type of company entity stock in db (ex: co-working, school etc)\n   */\n  @Column({\n    length: 50,\n  })\n  type: string;\n\n  /**\n   * Longitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  /**\n   * Latitude of company entity stock in db. This data is here to create range around the company to show the pois\n   */\n  @Column({\n    length: 100,\n    nullable: true,\n    default: true,\n  })\n  lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @Column({\n    default: 1,\n  })\n  nbWorker: number;\n\n  @Column({\n    default: 1000,\n  })\n  range: number;\n\n  /**\n   * Date when the contract begin\n   */\n  @Column({\n    type: 'date',\n    default: '2020-10-10',\n  })\n  beginDeal: string;\n\n  /**\n   * Date when the contract end\n   */\n  @Column({\n     type: 'date',\n    default: '2020-10-10',\n  })\n  endDeal: string;\n\n  @CreateDateColumn()\n  createDate: string;\n\n  @Column({\n    length: 500,\n    default: null,\n  })\n  logo: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                company\n            \n\n            \n                Description\n            \n            \n                Controller to manage the companys data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getCompanyOrderByDate\n                            \n                            \n                                    Async\n                                getOneCompany\n                            \n                            \n                                    Async\n                                updateCompany\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiUnauthorizedResponse()@ApiBody({type: undefined})@UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:33\n                \n            \n\n\n            \n                \n                    method call method to check and add a new company\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        information to add a new company\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        Data was added\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:93\n                \n            \n\n\n            \n                \n                    This method call method to delete a company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:61\n                \n            \n\n\n            \n                \n                    This method return all company in database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneCompany(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:49\n                \n            \n\n\n            \n                \n                    this method return one company entity with an id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCompany(id: number, companyDto: CompanyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiUnauthorizedResponse()@ApiNotFoundResponse()@UseGuards(RoleGuard)@Roles('admin')@Put(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/company/company.controller.ts:77\n                \n            \n\n\n            \n                \n                    This method update one company data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyDto\n                                    \n                                                CompanyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { CompanyDto } from './companyDto';\nimport { CompanyService } from './company.service';\nimport { Company } from './companyEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { ApiBearerAuth, ApiBody, ApiCreatedResponse, ApiNotFoundResponse, ApiOkResponse, ApiTags, ApiUnauthorizedResponse } from '@nestjs/swagger';\n\n/**\n * Controller to manage the companys data\n */\n@ApiBearerAuth()\n@ApiTags('company')\n@Controller('company')\n@UseGuards(AuthGuard('jwt'))\nexport class CompanyController {\n  constructor(private readonly companyService: CompanyService) {}\n\n  /**\n   * method call method to check and add a new company\n   * @param {CompanyDto} companyDto information to add a new company\n   * @returns Data was added\n   */\n  @ApiCreatedResponse()\n  @ApiUnauthorizedResponse()\n  @ApiBody({ type: [CompanyDto] })\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addCompany(@Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto);\n  }\n\n  /**\n   * this method return one company entity with an id\n   * @param id {number}\n   * @returns {Company}\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneCompany(@Param('id', new ParseIntPipe()) id: number): Promise {\n    return await this.companyService.getOne(id);\n  }\n\n  /**\n   * This method return all company in database\n   * @returns {Company[]}\n   */\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async getAllCompany(): Promise {\n    return await this.companyService.getAllCompany();\n  }\n\n  /**\n   * This method update one company data\n   * @param id\n   * @param companyDto\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Put(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async updateCompany(@Param('id', new ParseIntPipe()) id: number, @Body() companyDto: CompanyDto) {\n    return await this.companyService.addCompany(companyDto, id);\n  }\n\n  /**\n   * This method call method to delete a company from the database\n   * @param idCompany {number}\n   * @returns string\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @ApiNotFoundResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({  transform: true }))\n  async deleteCompany(@Param('id', new ParseIntPipe()) idCompany: number): Promise {\n    await this.companyService.getOne(idCompany);\n    await this.companyService.deleteCompany(idCompany);\n    return 'delete success';\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiUnauthorizedResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getCompanyOrderByDate(): Promise {\n    return await this.companyService.orderByDate();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyDto.html":{"url":"injectables/CompanyDto.html","title":"injectable - CompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/companyDto.ts\n        \n\n            \n                Description\n            \n            \n                Object that defines how the data will be sent over the network to add a new Company\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                beginDeal\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                domainMail\n                            \n                            \n                                    Readonly\n                                endDeal\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                nbWorker\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:27\n                            \n                        \n\n                \n                    \n                        Address Of Client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            beginDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract start date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:74\n                            \n                        \n\n                \n                    \n                        contract start date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:36\n                            \n                        \n\n                \n                    \n                        City of client stock in db\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            domainMail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'domain mail of client to authorize only employees of this client (ex: @example.com)'})@IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:46\n                            \n                        \n\n                \n                    \n                        domain mail of client to authorize only employees of this client (ex: @example.com\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            endDeal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'contract end date'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:92\n                            \n                        \n\n                \n                    \n                        contract end date\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:18\n                            \n                        \n\n                \n                    \n                        Data useless i guess\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'latitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'longitude of company'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Name of client'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:83\n                            \n                        \n\n                \n                    \n                        Name of client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            nbWorker\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'number of worker who work in this company. This data is here to know how many users to expect'})@IsOptional()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:114\n                            \n                        \n\n                \n                    \n                        number of worker who work in this company. This data is here to know how many users to expect\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postal code of the client'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:55\n                            \n                        \n\n                \n                    \n                        postal code of the client\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of Client', enum: TypeEnum})@IsEnum(TypeEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/company/companyDto.ts:65\n                            \n                        \n\n                \n                    \n                        Type of client (ex: co-working, school etc)\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CompanyInterface } from './interface/company.interface';\nimport { IsDate, IsDateString, IsEnum, IsNumber, IsNumberString, IsOptional, IsString } from 'class-validator';\nimport { TypeEnum } from './enum/type.enum';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\n/**\n * Object that defines how the data will be sent over the network to add a new Company\n */\n@Injectable()\nexport class CompanyDto implements CompanyInterface {\n\n  /**\n   * Data useless i guess\n   */\n  @ApiPropertyOptional()\n  @IsOptional()\n  readonly id?: number;\n\n  /**\n   * Address Of Client stock in db\n   */\n  @ApiProperty({\n    description: 'Address Of Client',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of client stock in db\n   */\n  @ApiProperty({\n    description: 'City of client',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * domain mail of client to authorize only employees of this client (ex: @example.com\n   */\n  @ApiProperty({\n    description: 'domain mail of client to authorize only employees of this client (ex: @example.com)',\n  })\n  @IsOptional()\n  @IsString()\n  readonly domainMail: string;\n\n  /**\n   * postal code of the client\n   */\n  @ApiProperty({\n    description: 'postal code of the client',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  /**\n   * Type of client (ex: co-working, school etc)\n   */\n  @ApiProperty({\n    description: 'Type of Client',\n    enum: TypeEnum,\n  })\n  @IsEnum(TypeEnum)\n  readonly type: string;\n\n  /**\n   * contract start date\n   */\n  @ApiProperty({\n    description: 'contract start date',\n  })\n  @IsString()\n  readonly beginDeal: string;\n\n  /**\n   * Name of client\n   */\n  @ApiProperty({\n    description: 'Name of client',\n  })\n  @IsString()\n  readonly name: string;\n\n  /**\n   * contract end date\n   */\n  @ApiProperty({\n    description: 'contract end date',\n  })\n  @IsString()\n  readonly endDeal: string;\n\n  @ApiProperty({\n    description: 'longitude of company',\n  })\n  @IsString()\n  readonly long: string;\n\n  @ApiProperty({\n    description: 'latitude of company',\n  })\n  @IsString()\n  readonly lat: string;\n\n  /**\n   * number of worker who work in this company. This data is here to know how many users to expect\n   */\n  @ApiPropertyOptional({\n    description: 'number of worker who work in this company. This data is here to know how many users to expect',\n  })\n  @IsOptional()\n  @IsNumber()\n  readonly nbWorker: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CompanyInterface.html":{"url":"interfaces/CompanyInterface.html","title":"interface - CompanyInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CompanyInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/interface/company.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        beginDeal\n                                \n                                \n                                        city\n                                \n                                \n                                            Optional\n                                        domainMail\n                                \n                                \n                                        endDeal\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nbWorker\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beginDeal\n                                    \n                                \n                                \n                                    \n                                        beginDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        domainMail\n                                    \n                                \n                                \n                                    \n                                        domainMail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endDeal\n                                    \n                                \n                                \n                                    \n                                        endDeal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nbWorker\n                                    \n                                \n                                \n                                    \n                                        nbWorker:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CompanyInterface {\n  readonly address: string;\n  readonly name: string;\n  readonly postalCode: string;\n  readonly city: string;\n  readonly domainMail?: string;\n  readonly type: string;\n  readonly nbWorker?: number;\n  readonly beginDeal: string;\n  readonly endDeal: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService \n\nCompanyService \n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Company]),\n  ],\n  providers: [CompanyService],\n  controllers: [CompanyController],\n  exports: [CompanyService],\n})\nexport class CompanyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n            \n                Description\n            \n            \n                This class is the service to entity company\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCompany\n                            \n                            \n                                    Async\n                                countCompany\n                            \n                            \n                                    Async\n                                countNbType\n                            \n                            \n                                    Async\n                                deleteCompany\n                            \n                            \n                                    Async\n                                getAllCompany\n                            \n                            \n                                    Async\n                                getCompanyByDomainMail\n                            \n                            \n                                    Async\n                                getOne\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                            \n                                    Async\n                                searchByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:10\n                            \n                        \n\n                \n                    \n                            set the company repository\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCompany(companyDto, id: null)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:37\n                \n            \n\n\n            \n                \n                    This method use to add or update a company in database\nif the id is not null is for update else is for add\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    companyDto\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                            null\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                    \n                                        | null}\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countNbType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countNbType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCompany(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:71\n                \n            \n\n\n            \n                \n                    This method delete one company from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        the delete data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompany()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:62\n                \n            \n\n\n            \n                \n                    This method returns all company from database\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyByDomainMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyByDomainMail(domainMail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    domainMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(idCompany: number)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:51\n                \n            \n\n\n            \n                \n                    this method return one company from database and send an exception when nothing has found\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idCompany\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Company\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/company/company.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Company } from './companyEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * This class is the service to entity company\n */\n@Injectable()\nexport class CompanyService {\n  /**\n   * set the company repository\n   * @param companyRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Company)\n    private readonly companyRepository: Repository,\n  ) {}\n\n  async searchByName(name: string) {\n    const company =  await this.companyRepository.find({\n      where: {\n        name,\n      },\n    });\n    if (company.length > 0) {\n      throw new ConflictException(`Client with ${name} already exist`);\n    }\n  }\n\n  /**\n   * This method use to add or update a company in database\n   * if the id is not null is for update else is for add\n   * @param companyDto {CompanyDto}\n   * @param id {number} | null}\n   */\n  async addCompany(companyDto, id = null) {\n    await this.searchByName(companyDto.name);\n    const companyData = companyDto;\n    if (id) {\n      companyData.id = id;\n    }\n    return await this.companyRepository.save(companyData);\n  }\n\n  /**\n   * this method return one company from database and send an exception when nothing has found\n   * @param idCompany {number}\n   * @returns Company\n   */\n  async getOne(idCompany: number): Promise {\n    return await this.companyRepository.findOneOrFail(idCompany)\n      .catch(() => {\n        throw new NotFoundException(`Company with id ${idCompany} not found`);\n      });\n  }\n\n  /**\n   * This method returns all company from database\n   * @returns Company[]\n   */\n  async getAllCompany(): Promise {\n    return await this.companyRepository.find();\n  }\n\n  /**\n   * This method delete one company from the database\n   * @param idCompany {number}\n   * @returns the delete data\n   */\n  async deleteCompany(idCompany: number) {\n    return await this.companyRepository.delete(idCompany);\n  }\n\n  async countCompany(): Promise {\n    return await this.companyRepository.count();\n  }\n\n  async countNbType(type: string) {\n    return await this.companyRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.companyRepository.find({\n      order: {\n        createDate: 'ASC',\n      },\n    });\n  }\n\n  async getCompanyByDomainMail(domainMail: string) {\n    return await this.companyRepository.findOneOrFail({\n      domainMail,\n    }).catch(() => {\n      throw new UnauthorizedException(`Cannot find company domain mail ${domainMail}`);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntityTypeInterceptor.html":{"url":"injectables/EntityTypeInterceptor.html","title":"injectable - EntityTypeInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntityTypeInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/entity-type.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/entity-type.interceptor.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport hexToRgba = require('hex-to-rgba');\nimport { exaToRgbaObject, filterInt } from '../utils/function.utils';\n\n@Injectable()\nexport class EntityTypeInterceptor implements NestInterceptor {\n  /**\n   *\n   * @param context\n   * @param next\n   */\n  intercept(context: ExecutionContext, next: CallHandler): Observable | Promise> {\n    return next.handle().pipe(map(data => {\n      data = data.map((d) => {\n        d.isPoi = typeof d.domainMail === 'undefined' ? 1 : 0;\n        if (d.isPoi) {\n          d.tags =  d.tags.map((tag) => {\n            exaToRgbaObject(tag.colorTag, tag);\n            return tag;\n          });\n        }\n        return d;\n      });\n      return data;\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GreenScoreController.html":{"url":"controllers/GreenScoreController.html","title":"controller - GreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                green-score\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('green-score')\nexport class GreenScoreController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GreenScoreModule.html":{"url":"modules/GreenScoreModule.html","title":"module - GreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    GreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/green-score/green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GreenScoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GreenScoreService } from './green-score.service';\nimport { GreenScoreController } from './green-score.controller';\n\n@Module({\n  providers: [GreenScoreService],\n  controllers: [GreenScoreController]\n})\nexport class GreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GreenScoreService.html":{"url":"injectables/GreenScoreService.html","title":"injectable - GreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/green-score/green-score.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GreenScoreService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImgPoi.html":{"url":"classes/ImgPoi.html","title":"class - ImgPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImgPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/img-poi/imgPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                img\n                            \n                            \n                                poi\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/img-poi/imgPoiEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            img\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 300})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/img-poi/imgPoiEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'idPoi'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/img-poi/imgPoiEntity.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\n\n@Entity('img_poi')\nexport class ImgPoi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 300,\n  })\n  img: string;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'idPoi',\n  })\n  poi: Poi;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImgPoiDto.html":{"url":"classes/ImgPoiDto.html","title":"class - ImgPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImgPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/img-poi/imgPoiDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                img\n                            \n                            \n                                    Readonly\n                                mainImage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            img\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/img-poi/imgPoiDto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mainImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/img-poi/imgPoiDto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsOptional, IsString } from 'class-validator';\n\nexport class ImgPoiDto {\n  @IsString()\n  readonly img: string;\n\n  @IsOptional()\n  @IsBoolean()\n  readonly mainImage: boolean = false;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImgPoiModule.html":{"url":"modules/ImgPoiModule.html","title":"module - ImgPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    ImgPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImgPoiModule\n\n\n\ncluster_ImgPoiModule_exports\n\n\n\ncluster_ImgPoiModule_providers\n\n\n\n\nImgPoiService \n\nImgPoiService \n\n\n\nImgPoiModule\n\nImgPoiModule\n\nImgPoiService  -->\n\nImgPoiModule->ImgPoiService \n\n\n\n\n\nImgPoiService\n\nImgPoiService\n\nImgPoiModule -->\n\nImgPoiService->ImgPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/img-poi/img-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImgPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImgPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ImgPoiService } from './img-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ImgPoi } from './imgPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ImgPoi]),\n  ],\n  providers: [ImgPoiService],\n  exports: [ImgPoiService],\n})\nexport class ImgPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImgPoiService.html":{"url":"injectables/ImgPoiService.html","title":"injectable - ImgPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImgPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/img-poi/img-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addImgPoi\n                            \n                            \n                                    Async\n                                getImgs\n                            \n                            \n                                    Async\n                                serializeImgUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imgPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/img-poi/img-poi.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imgPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addImgPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addImgPoi(imgPoi, poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/img-poi/img-poi.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgPoi\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getImgs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImgs(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/img-poi/img-poi.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serializeImgUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeImgUrl(imgs)\n                \n            \n\n\n            \n                \n                    Defined in src/img-poi/img-poi.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { ImgPoi } from './imgPoiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Poi } from '../poi/poiEntity';\n\n@Injectable()\nexport class ImgPoiService {\n  constructor(\n    @InjectRepository(ImgPoi)\n    private readonly imgPoiRepository: Repository,\n  ) {}\n\n  async addImgPoi(imgPoi, poi: Poi) {\n    const poiAndImg = {\n      img: imgPoi,\n      poi,\n    };\n    return await this.imgPoiRepository.save(poiAndImg);\n  }\n\n  async getImgs(poi: Poi): Promise {\n    return await this.imgPoiRepository.find({\n      select: ['img'],\n      where: {\n        poi,\n      },\n    });\n  }\n\n  async serializeImgUrl(imgs) {\n    return imgs.map((img) => {\n      return img.img;\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinTagPoiEntity.html":{"url":"classes/JoinTagPoiEntity.html","title":"class - JoinTagPoiEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinTagPoiEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/joinTagPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tag\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE', nullable: true})@JoinColumn({name: 'tagId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-tag-poi/joinTagPoiEntity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Tag } from '../tags/tagEntity';\nimport { Poi } from '../poi/poiEntity';\n\n@Entity()\nexport class JoinTagPoiEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => Tag, (tag) => tag.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n    nullable: true,\n  })\n  @JoinColumn({\n    name: 'tagId',\n  })\n  tag: Tag;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinTagPoiModule.html":{"url":"modules/JoinTagPoiModule.html","title":"module - JoinTagPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinTagPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinTagPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinTagPoiService } from './join-tag-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinTagPoiEntity]),\n  ],\n  providers: [JoinTagPoiService],\n  exports: [JoinTagPoiService],\n})\nexport class JoinTagPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinTagPoiService.html":{"url":"injectables/JoinTagPoiService.html","title":"injectable - JoinTagPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinTagPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-tag-poi/join-tag-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinTagPoi\n                            \n                            \n                                    Async\n                                checkTag\n                            \n                            \n                                    Async\n                                countTags\n                            \n                            \n                                    Async\n                                getAllCompanyTag\n                            \n                            \n                                    Async\n                                getAllPoiAndTag\n                            \n                            \n                                    Async\n                                getTagsCompany\n                            \n                            \n                                    Async\n                                serializeTagsData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-tag-poi/join-tag-poi.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinTagPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToAdd\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tagToAdd\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkTag(tag: Tag, poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countTags(tag: Tag)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tag\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllCompanyTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllCompanyTag(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoiAndTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoiAndTag()\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsCompany\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsCompany(poiToFind: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiToFind\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serializeTagsData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serializeTagsData(tags: JoinTagPoiEntity[])\n                \n            \n\n\n            \n                \n                    Defined in src/join-tag-poi/join-tag-poi.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tags\n                                    \n                                            JoinTagPoiEntity[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from './joinTagPoiEntity';\n\n@Injectable()\nexport class JoinTagPoiService {\n  /**\n   *\n   * @param joinTagPoiRepository\n   */\n  constructor(\n    @InjectRepository(JoinTagPoiEntity)\n    private readonly joinTagPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param poiToAdd\n   * @param tagToAdd\n   */\n  async addJoinTagPoi(poiToAdd: Poi, tagToAdd: Tag) {\n    const joinTagPoi = {\n      poi: poiToAdd,\n      tag: tagToAdd,\n    };\n    return await this.joinTagPoiRepository.save(joinTagPoi);\n  }\n\n  /**\n   *\n   */\n  async getAllPoiAndTag(): Promise {\n    return await this.joinTagPoiRepository.find({\n      relations: ['poi', 'tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tags\n   */\n  async serializeTagsData(tags: JoinTagPoiEntity[]) {\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getTagsCompany(poiToFind: Poi) {\n    return await this.joinTagPoiRepository.createQueryBuilder('g')\n      .select()\n      .innerJoinAndSelect('tag', 'tag.id = :idTag')\n      .where('idPoi = :idPoi', { idPoi: poiToFind.id })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param poiToFind\n   */\n  async getAllCompanyTag(poiToFind: Poi): Promise {\n    return await this.joinTagPoiRepository.find({\n      where: {\n        poi: poiToFind,\n      },\n      relations: ['tag'],\n    });\n  }\n\n  /**\n   *\n   * @param tagId\n   */\n  async countTags(tag: Tag): Promise {\n    return await this.joinTagPoiRepository.count({\n      where: {\n        tag,\n      },\n    });\n  }\n\n  async checkTag(tag: Tag, poi: Poi) {\n    return await this.joinTagPoiRepository.findOne({\n      where: {\n        poi,\n        tag,\n      },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserChallenge.html":{"url":"classes/JoinUserChallenge.html","title":"class - JoinUserChallenge","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserChallenge\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-challenge/joinUserChallengeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                challenge\n                            \n                            \n                                do\n                            \n                            \n                                id\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Challenge\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'challengeId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            do\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeEntity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'userId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeEntity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Challenge } from '../challenge/challengeEntity';\nimport { User } from '../user/userEntity';\n\n@Entity('join_user_challenge')\nexport class JoinUserChallenge {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    default: false,\n  })\n  do: boolean;\n\n  @ManyToOne(type => Challenge, (challenge) => challenge.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'challengeId',\n  })\n  challenge: Challenge;\n\n  @ManyToOne(type => User, (user) => user.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'userId',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserChallengeDto.html":{"url":"classes/JoinUserChallengeDto.html","title":"class - JoinUserChallengeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserChallengeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-challenge/joinUserChallengeDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                challenge\n                            \n                            \n                                    Readonly\n                                doChallenge\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            challenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            doChallenge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-challenge/joinUserChallengeDto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsNumber, IsString } from 'class-validator';\n\nexport class JoinUserChallengeDto {\n  @IsBoolean()\n  readonly doChallenge: boolean;\n\n  @IsNumber()\n  readonly challenge: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinUserChallengeModule.html":{"url":"modules/JoinUserChallengeModule.html","title":"module - JoinUserChallengeModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinUserChallengeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinUserChallengeModule\n\n\n\ncluster_JoinUserChallengeModule_imports\n\n\n\ncluster_JoinUserChallengeModule_exports\n\n\n\ncluster_JoinUserChallengeModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nJoinUserChallengeModule\n\nJoinUserChallengeModule\n\nJoinUserChallengeModule -->\n\nUserModule->JoinUserChallengeModule\n\n\n\n\n\nJoinUserChallengeService \n\nJoinUserChallengeService \n\nJoinUserChallengeService  -->\n\nJoinUserChallengeModule->JoinUserChallengeService \n\n\n\n\n\nJoinUserChallengeService\n\nJoinUserChallengeService\n\nJoinUserChallengeModule -->\n\nJoinUserChallengeService->JoinUserChallengeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-user-challenge/join-user-challenge.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinUserChallengeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinUserChallengeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinUserChallengeService } from './join-user-challenge.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinUserChallenge } from './joinUserChallengeEntity';\nimport { UserService } from '../user/user.service';\nimport { UserModule } from '../user/user.module';\nimport { JoinUserChallengeDto } from './joinUserChallengeDto';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinUserChallenge]),\n    UserModule,\n  ],\n  providers: [JoinUserChallengeService],\n  exports: [JoinUserChallengeService],\n})\nexport class JoinUserChallengeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinUserChallengeService.html":{"url":"injectables/JoinUserChallengeService.html","title":"injectable - JoinUserChallengeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinUserChallengeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-challenge/join-user-challenge.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinUserChallenge\n                            \n                            \n                                    Async\n                                checkValidation\n                            \n                            \n                                    Private\n                                    Async\n                                getOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinUserChallengeRepository: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/join-user-challenge/join-user-challenge.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinUserChallengeRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinUserChallenge\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinUserChallenge(challenge: Challenge, user, doChallenge: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-challenge/join-user-challenge.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    challenge\n                                    \n                                                Challenge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    doChallenge\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkValidation(user: User, challenge: Challenge)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-challenge/join-user-challenge.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    challenge\n                                    \n                                                Challenge\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOne(joinUserChallenge)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-challenge/join-user-challenge.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    joinUserChallenge\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { JoinUserChallenge } from './joinUserChallengeEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserService } from '../user/user.service';\nimport { Challenge } from '../challenge/challengeEntity';\nimport { User } from '../user/userEntity';\n\n@Injectable()\nexport class JoinUserChallengeService {\n  constructor(\n    @InjectRepository(JoinUserChallenge)\n    private readonly joinUserChallengeRepository: Repository,\n    private readonly userService: UserService,\n  ) {}\n\n  private async getOne(joinUserChallenge) {\n    return await this.joinUserChallengeRepository.findOne({\n      where: {\n        challenge: joinUserChallenge.challenge,\n        user: joinUserChallenge.user,\n      },\n    });\n  }\n\n  async addJoinUserChallenge(challenge: Challenge, user, doChallenge: boolean) {\n      const userChallenge = {\n        challenge,\n        user,\n        do: doChallenge,\n      };\n      if (await this.getOne(userChallenge)) {\n        throw new BadRequestException('Already answered');\n      }\n      await this.joinUserChallengeRepository.save(userChallenge);\n      if (doChallenge) {\n        await this.userService.addCrystal(challenge.crystalGain, userChallenge.user);\n      }\n      return await this.userService.getEmerald(userChallenge.user);\n  }\n\n  async checkValidation(user: User, challenge: Challenge) {\n    try {\n      return await this.joinUserChallengeRepository.findOneOrFail({\n        where: {\n          user,\n          challenge,\n        },\n      });\n    } catch (e) {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserPoi.html":{"url":"classes/JoinUserPoi.html","title":"class - JoinUserPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-poi/joinUserPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                poi\n                            \n                            \n                                recommend\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-poi/joinUserPoiEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'poiId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-poi/joinUserPoiEntity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recommend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-poi/joinUserPoiEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'userId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-poi/joinUserPoiEntity.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Poi } from '../poi/poiEntity';\nimport { User } from '../user/userEntity';\n\n@Entity()\nexport class JoinUserPoi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    default: null,\n    nullable: true,\n  })\n  recommend: boolean;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'poiId',\n  })\n  poi: Poi;\n\n  @ManyToOne(type => User, (user) => user.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'userId',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserPoiDto.html":{"url":"classes/JoinUserPoiDto.html","title":"class - JoinUserPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-poi/joinUserPoiDto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class JoinUserPoiDto {\n  \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JoinUserPoiInterface.html":{"url":"interfaces/JoinUserPoiInterface.html","title":"interface - JoinUserPoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JoinUserPoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-poi/join-user-poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        poi\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        poi\n                                    \n                                \n                                \n                                    \n                                        poi:         Poi\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Poi\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Poi } from '../poi/poiEntity';\nimport { User } from '../user/userEntity';\n\nexport interface JoinUserPoiInterface {\n  readonly poi: Poi;\n  readonly user: User;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinUserPoiModule.html":{"url":"modules/JoinUserPoiModule.html","title":"module - JoinUserPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinUserPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinUserPoiModule\n\n\n\ncluster_JoinUserPoiModule_exports\n\n\n\ncluster_JoinUserPoiModule_providers\n\n\n\n\nJoinUserPoiService \n\nJoinUserPoiService \n\n\n\nJoinUserPoiModule\n\nJoinUserPoiModule\n\nJoinUserPoiService  -->\n\nJoinUserPoiModule->JoinUserPoiService \n\n\n\n\n\nJoinUserPoiService\n\nJoinUserPoiService\n\nJoinUserPoiModule -->\n\nJoinUserPoiService->JoinUserPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-user-poi/join-user-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinUserPoiService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinUserPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinUserPoiService } from './join-user-poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinUserPoi } from './joinUserPoiEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([JoinUserPoi]),\n  ],\n  providers: [JoinUserPoiService],\n  exports: [JoinUserPoiService],\n})\nexport class JoinUserPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinUserPoiService.html":{"url":"injectables/JoinUserPoiService.html","title":"injectable - JoinUserPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinUserPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-poi/join-user-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinUserPoi\n                            \n                            \n                                    Async\n                                getHistoric\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinUserPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-user-poi/join-user-poi.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinUserPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinUserPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinUserPoi(joinUserPoi: JoinUserPoiInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-poi/join-user-poi.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    joinUserPoi\n                                    \n                                                JoinUserPoiInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHistoric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoric(user)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-poi/join-user-poi.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { JoinUserPoi } from './joinUserPoiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { JoinUserPoiInterface } from './join-user-poi.interface';\n\n@Injectable()\nexport class JoinUserPoiService {\n  constructor(\n    @InjectRepository(JoinUserPoi)\n    private readonly joinUserPoiRepository: Repository,\n  ) {}\n\n  async addJoinUserPoi(joinUserPoi: JoinUserPoiInterface) {\n    return await this.joinUserPoiRepository.save(joinUserPoi);\n  }\n\n  async getHistoric(user) {\n    return await this.joinUserPoiRepository.find({\n      where: {\n        user,\n      },\n      relations: ['poi'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinUserQuizzModule.html":{"url":"modules/JoinUserQuizzModule.html","title":"module - JoinUserQuizzModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinUserQuizzModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinUserQuizzModule\n\n\n\ncluster_JoinUserQuizzModule_providers\n\n\n\n\nJoinUserQuizzService\n\nJoinUserQuizzService\n\n\n\nJoinUserQuizzModule\n\nJoinUserQuizzModule\n\nJoinUserQuizzModule -->\n\nJoinUserQuizzService->JoinUserQuizzModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-user-quizz/join-user-quizz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinUserQuizzService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinUserQuizzService } from './join-user-quizz.service';\n\n@Module({\n  providers: [JoinUserQuizzService]\n})\nexport class JoinUserQuizzModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinUserQuizzService.html":{"url":"injectables/JoinUserQuizzService.html","title":"injectable - JoinUserQuizzService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinUserQuizzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-quizz/join-user-quizz.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JoinUserQuizzService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserQuzz.html":{"url":"classes/JoinUserQuzz.html","title":"class - JoinUserQuzz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserQuzz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-quizz/joinUserQuizzEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                goodAnswer\n                            \n                            \n                                id\n                            \n                            \n                                quizz\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goodAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-quizz/joinUserQuizzEntity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-quizz/joinUserQuizzEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Quizz\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'quizzId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-quizz/joinUserQuizzEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'userId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-quizz/joinUserQuizzEntity.ts:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Quizz } from '../quizz/quizzEntity';\nimport { User } from '../user/userEntity';\n\n@Entity('join_user_quizz')\nexport class JoinUserQuzz {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    default: false,\n  })\n  goodAnswer: boolean;\n\n  @ManyToOne(type => Quizz, (quizz) => quizz.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'quizzId',\n  })\n  quizz: Quizz;\n\n  @ManyToOne(type => User, (user) => user.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'userId',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JoinUserThemeQuizz.html":{"url":"classes/JoinUserThemeQuizz.html","title":"class - JoinUserThemeQuizz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JoinUserThemeQuizz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-theme-quizz/joinUserThemeQuizzEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                themeQuizz\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-theme-quizz/joinUserThemeQuizzEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeQuizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ThemeQuizz\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'themeQuizzId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-theme-quizz/joinUserThemeQuizzEntity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'userId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/join-user-theme-quizz/joinUserThemeQuizzEntity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../user/userEntity';\nimport { ThemeQuizz } from '../theme-quizz/themeQuizzEntity';\nimport { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class JoinUserThemeQuizz {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ManyToOne(type => User, (user) =>  user.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'userId',\n  })\n  user: User;\n\n  @ManyToOne(type => ThemeQuizz, (themeQuizz) => themeQuizz.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'themeQuizzId',\n  })\n  themeQuizz: ThemeQuizz;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JoinUserThemeQuizzModule.html":{"url":"modules/JoinUserThemeQuizzModule.html","title":"module - JoinUserThemeQuizzModule","body":"\n                   \n\n\n\n\n    Modules\n    JoinUserThemeQuizzModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JoinUserThemeQuizzModule\n\n\n\ncluster_JoinUserThemeQuizzModule_exports\n\n\n\ncluster_JoinUserThemeQuizzModule_providers\n\n\n\n\nJoinUserThemeQuizzService \n\nJoinUserThemeQuizzService \n\n\n\nJoinUserThemeQuizzModule\n\nJoinUserThemeQuizzModule\n\nJoinUserThemeQuizzService  -->\n\nJoinUserThemeQuizzModule->JoinUserThemeQuizzService \n\n\n\n\n\nJoinUserThemeQuizzService\n\nJoinUserThemeQuizzService\n\nJoinUserThemeQuizzModule -->\n\nJoinUserThemeQuizzService->JoinUserThemeQuizzModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/join-user-theme-quizz/join-user-theme-quizz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JoinUserThemeQuizzService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JoinUserThemeQuizzService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JoinUserThemeQuizzService } from './join-user-theme-quizz.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JoinUserThemeQuizz } from './joinUserThemeQuizzEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([\n      JoinUserThemeQuizz,\n    ]),\n  ],\n  providers: [JoinUserThemeQuizzService],\n  exports: [JoinUserThemeQuizzService],\n})\nexport class JoinUserThemeQuizzModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoinUserThemeQuizzService.html":{"url":"injectables/JoinUserThemeQuizzService.html","title":"injectable - JoinUserThemeQuizzService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoinUserThemeQuizzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/join-user-theme-quizz/join-user-theme-quizz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addJoinUserThemeQuizz\n                            \n                            \n                                    Async\n                                getByUserAndThemeQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinUserThemeQuizzRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/join-user-theme-quizz/join-user-theme-quizz.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinUserThemeQuizzRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addJoinUserThemeQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addJoinUserThemeQuizz(user: User, themeQuizz: ThemeQuizz)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-theme-quizz/join-user-theme-quizz.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeQuizz\n                                    \n                                                ThemeQuizz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByUserAndThemeQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByUserAndThemeQuizz(user: User, themeQuizz: ThemeQuizz)\n                \n            \n\n\n            \n                \n                    Defined in src/join-user-theme-quizz/join-user-theme-quizz.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    themeQuizz\n                                    \n                                                ThemeQuizz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { JoinUserThemeQuizz } from './joinUserThemeQuizzEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../user/userEntity';\nimport { ThemeQuizz } from '../theme-quizz/themeQuizzEntity';\n\n@Injectable()\nexport class JoinUserThemeQuizzService {\n  constructor(\n    @InjectRepository(JoinUserThemeQuizz)\n    private readonly joinUserThemeQuizzRepository: Repository,\n  ) {}\n\n  async addJoinUserThemeQuizz(user: User, themeQuizz: ThemeQuizz) {\n    const jUtQtoAdd = {\n      user,\n      themeQuizz,\n    };\n    return await this.joinUserThemeQuizzRepository.save(jUtQtoAdd);\n  }\n\n  async getByUserAndThemeQuizz(user: User, themeQuizz: ThemeQuizz) {\n    try {\n      return await this.joinUserThemeQuizzRepository.findOneOrFail({\n        where: {\n          user,\n          themeQuizz,\n        },\n      });\n    } catch (e) {\n      return  null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when the client send request with a jwt in request header\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            set the option for jwt and set the jwt secret key,\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:32\n                \n            \n\n\n            \n                \n                    Check the validity of data contains in jwt and return  and set in req.user user info without password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UserService } from '../user/user.service';\nimport { RoleService } from '../role/role.service';\n\n/**\n * Class use when the client send request with a jwt in request header\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set the option for jwt and set the jwt secret key,\n   * @param userService {UserService}\n   * @param roleService {RoleService}\n   */\n  constructor(\n    private readonly userService: UserService,\n    private readonly roleService: RoleService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: process.env.JWT_TOKEN || 'helloo',\n    });\n  }\n\n  /**\n   * Check the validity of data contains in jwt and return  and set in req.user user info without password\n   * @param payload\n   */\n  async validate(payload) {\n    if (!payload.userId) {\n      throw new UnauthorizedException();\n    }\n    const {password, ...result} =  await this.userService.getUser(payload.userId);\n    const roles = await this.roleService.getInfRole(result.role.id);\n    return {\n      user: result,\n      roles: await this.roleService.getOnlyRole(roles),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KnowIt.html":{"url":"classes/KnowIt.html","title":"class - KnowIt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KnowIt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/know-it/knowItEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCreate\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                publicationDate\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'datetime', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 750})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItEntity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 75})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('knowIt')\nexport class KnowIt {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 75,\n  })\n  title: string;\n\n  @Column({\n    length: 750,\n  })\n  description: string;\n\n  @Column({\n    type: 'datetime',\n    default: () => 'CURRENT_TIMESTAMP',\n  })\n  dateCreate: string;\n\n  @Column({\n    type: 'timestamp',\n  })\n  publicationDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/KnowItController.html":{"url":"controllers/KnowItController.html","title":"controller - KnowItController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  KnowItController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/know-it/know-it.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                know-it\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addKnowIt\n                            \n                            \n                                    Async\n                                deleteKnowIt\n                            \n                            \n                                    Async\n                                getKnowIt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addKnowIt(knowItDto: KnowItDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/know-it/know-it.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knowItDto\n                                    \n                                                KnowItDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteKnowIt(idKnowIt: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/know-it/know-it.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idKnowIt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKnowIt()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/know-it/know-it.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { KnowItService } from './know-it.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { KnowItDto } from './knowItDto';\n\n@ApiTags('know-it')\n@ApiBearerAuth()\n@Controller('know-it')\n@UseGuards(AuthGuard('jwt'))\nexport class KnowItController {\n  constructor(\n    private readonly knowItService: KnowItService,\n  ) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addKnowIt(@Body() knowItDto: KnowItDto) {\n    return await this.knowItService.addKnowIt(knowItDto);\n  }\n\n  @Get()\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getKnowIt() {\n    return await this.knowItService.getKnowIt();\n  }\n\n  @Delete(':id')\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async deleteKnowIt(@Param('id', new ParseIntPipe()) idKnowIt: number) {\n    return await this.knowItService.deleteKnowIt(idKnowIt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KnowItDto.html":{"url":"classes/KnowItDto.html","title":"class - KnowItDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KnowItDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/know-it/knowItDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            KnowItInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                publicationDate\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItDto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/know-it/knowItDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { KnowItInterface } from './know-it.interface';\n\nexport class KnowItDto implements KnowItInterface {\n  @IsString()\n  @ApiProperty()\n  readonly title: string;\n\n  @IsString()\n  @ApiProperty({})\n  readonly description: string;\n\n  @IsString()\n  @ApiProperty()\n  readonly publicationDate: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KnowItInterface.html":{"url":"interfaces/KnowItInterface.html","title":"interface - KnowItInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KnowItInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/know-it/know-it.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        publicationDate\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        publicationDate\n                                    \n                                \n                                \n                                    \n                                        publicationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface KnowItInterface {\n   title: string;\n   description: string;\n   publicationDate: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KnowItModule.html":{"url":"modules/KnowItModule.html","title":"module - KnowItModule","body":"\n                   \n\n\n\n\n    Modules\n    KnowItModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KnowItModule\n\n\n\ncluster_KnowItModule_exports\n\n\n\ncluster_KnowItModule_providers\n\n\n\n\nKnowItService \n\nKnowItService \n\n\n\nKnowItModule\n\nKnowItModule\n\nKnowItService  -->\n\nKnowItModule->KnowItService \n\n\n\n\n\nKnowItService\n\nKnowItService\n\nKnowItModule -->\n\nKnowItService->KnowItModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/know-it/know-it.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            KnowItService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            KnowItController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            KnowItService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { KnowItService } from './know-it.service';\nimport { KnowItController } from './know-it.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { KnowIt } from './knowItEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([KnowIt]),\n  ],\n  providers: [KnowItService],\n  controllers: [KnowItController],\n  exports: [KnowItService],\n})\nexport class KnowItModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KnowItService.html":{"url":"injectables/KnowItService.html","title":"injectable - KnowItService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  KnowItService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/know-it/know-it.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addKnowIt\n                            \n                            \n                                    Async\n                                deleteKnowIt\n                            \n                            \n                                    Async\n                                getKnowIt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(knowItRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/know-it/know-it.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        knowItRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addKnowIt(knowIt)\n                \n            \n\n\n            \n                \n                    Defined in src/know-it/know-it.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    knowIt\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteKnowIt(idKnowIt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/know-it/know-it.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idKnowIt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getKnowIt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getKnowIt()\n                \n            \n\n\n            \n                \n                    Defined in src/know-it/know-it.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { KnowIt } from './knowItEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\n\n@Injectable()\nexport class KnowItService {\n  constructor(\n    @InjectRepository(KnowIt)\n    private readonly knowItRepository: Repository,\n  ) {}\n\n  async addKnowIt(knowIt) {\n    return await this.knowItRepository.save(knowIt);\n  }\n\n  async getKnowIt() {\n    return await this.knowItRepository.find({\n      select: ['id', 'title', 'description'],\n    });\n  }\n\n  async deleteKnowIt(idKnowIt: number) {\n    return await this.knowItRepository.delete(idKnowIt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n            \n                Description\n            \n            \n                Class use when client try to connect to their account\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            set authService\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(mail: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:24\n                \n            \n\n\n            \n                \n                    check if user exist and return them else send an exception\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ImATeapotException, Injectable, UnauthorizedException} from '@nestjs/common';\nimport {PassportStrategy} from '@nestjs/passport';\nimport {AuthService} from './auth.service';\nimport {Strategy} from 'passport-local';\n\n/**\n * Class use when client try to connect to their account\n */\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  /**\n   * set authService\n   * @param authService {AuthService}\n   */\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  /**\n   * check if user exist and return them else send an exception\n   * @param mail {string}\n   * @param password {string}\n   */\n  async validate(mail: string, password: string) {\n    const user = await this.authService.validateUser(mail, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/loginDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/loginDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsEmail()\n  readonly username: string;\n\n  @ApiProperty()\n  @IsString()\n  readonly password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentAndIdTag.html":{"url":"classes/PercentAndIdTag.html","title":"class - PercentAndIdTag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentAndIdTag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/percentAndIdTag.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                idType\n                            \n                            \n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            idType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/percentAndIdTag.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PercentAndIdTag {\n  idType: number;\n  percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoi.html":{"url":"classes/PercentTypeGreenScoreAndPoi.html","title":"class - PercentTypeGreenScoreAndPoi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                            \n                                    Readonly\n                                poi\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {nullable: false, onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'idPoi'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TypeGreenScore\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@ManyToOne(undefined, undefined, {nullable: false, onUpdate: 'CASCADE', onDelete: 'CASCADE'})@JoinColumn({name: 'idTypeGreenScore'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { Poi } from '../poi/poiEntity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class PercentTypeGreenScoreAndPoi {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id?: number;\n\n  @ApiProperty()\n  @Column()\n  readonly percent: number;\n\n  @ApiProperty()\n  @ManyToOne(type => TypeGreenScore, (typeGreenScore) => typeGreenScore.id, {\n    nullable: false,\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'idTypeGreenScore',\n  })\n  readonly typeGreenScore: TypeGreenScore;\n\n  @ManyToOne(type => Poi, (poi) => poi.id, {\n    nullable: false,\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'idPoi',\n  })\n  readonly poi: Poi;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PercentTypeGreenScoreAndPoiController.html":{"url":"controllers/PercentTypeGreenScoreAndPoiController.html","title":"controller - PercentTypeGreenScoreAndPoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PercentTypeGreenScoreAndPoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                percent-type-green-score-and-poi\n            \n\n            \n                Description\n            \n            \n                Percent green score controller // todo doc\n\n            \n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PercentTypeGreenScoreAndPoiTransformationPipe } from './Pipe/percent-type-green-score-and-poi.transformation.pipe';\nimport { Role } from '../role/roleEntity';\n\n/**\n * Percent green score controller // todo doc\n */\n@Controller('percent-type-green-score-and-poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PercentTypeGreenScoreAndPoiController {\n  //\n  //\n  // /**\n  //  * todo doc\n  //  * @param percentTypeGreenScoreAndPoiService\n  //  */\n  // constructor(readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService) {}\n  //\n  // /**\n  //  *  todo doc\n  //  * @param percentTypeGreenScoreAndPoiDto\n  //  */\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post()\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @UsePipes(PercentTypeGreenScoreAndPoiTransformationPipe)\n  // async addNewPercentTypeGCAndPoi(@Body() percentTypeGreenScoreAndPoiDto: PercentTypeGreenScoreAndPoiDto) {\n  //   return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGreenScoreAndPoiService(percentTypeGreenScoreAndPoiDto);\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Post('and-type')\n  // async addManyPercentTypeDcAndNewType(@Body() dataPercentAndTypeGc) {\n  //   return 'many';\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @Get()\n  // async getAllPercentTypeAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getAllPercentTypeGreenScoreAndPoi();\n  // }\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Get('one/:id')\n  // async getOnePercentTypeAndPoi(@Param('id', new ParseIntPipe()) idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.getOnePercentTypeGreenScoreAndPoi(idPercent);\n  // }\n  //\n  // /*\n  // @Get('percent/:id')\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // async getPercentOfPoi(@Param('id', new ParseIntPipe()) idPoi: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiService.findByPoi(idPoi);\n  // }\n  // */\n  //\n  // @UseGuards(RoleGuard)\n  // @Roles('admin')\n  // @UsePipes(new ValidationPipe({ transform: true }))\n  // @Delete(':id')\n  // async deletePercentGcAndPoi(@Param('id', new ParseIntPipe()) idPercent: number) {\n  //   return await this.percentTypeGreenScoreAndPoiService.deletePercentTypeGreenScore(idPercent);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PercentTypeGreenScoreAndPoiDto.html":{"url":"classes/PercentTypeGreenScoreAndPoiDto.html","title":"class - PercentTypeGreenScoreAndPoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PercentTypeGreenScoreAndPoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            PercentTypeGreenScoreAndPoiInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                idPoi\n                            \n                            \n                                    Readonly\n                                idTypeGreenScore\n                            \n                            \n                                    Readonly\n                                percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idPoi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idTypeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            percent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNumber()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PercentTypeGreenScoreAndPoiInterface } from './interfaces/percent-type-green-score-and-poi.interface';\nimport { IsNumber } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PercentTypeGreenScoreAndPoiDto implements PercentTypeGreenScoreAndPoiInterface{\n  @ApiProperty()\n  @IsNumber()\n  readonly idPoi: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly idTypeGreenScore: number;\n\n  @ApiProperty()\n  @IsNumber()\n  readonly percent: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PercentTypeGreenScoreAndPoiInterface.html":{"url":"interfaces/PercentTypeGreenScoreAndPoiInterface.html","title":"interface - PercentTypeGreenScoreAndPoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PercentTypeGreenScoreAndPoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        idPoi\n                                \n                                \n                                        idTypeGreenScore\n                                \n                                \n                                        percent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idPoi\n                                    \n                                \n                                \n                                    \n                                        idPoi:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTypeGreenScore\n                                    \n                                \n                                \n                                    \n                                        idTypeGreenScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent\n                                    \n                                \n                                \n                                    \n                                        percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PercentTypeGreenScoreAndPoiInterface {\n  readonly percent: number;\n  readonly idTypeGreenScore: number;\n  readonly idPoi: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PercentTypeGreenScoreAndPoiModule.html":{"url":"modules/PercentTypeGreenScoreAndPoiModule.html","title":"module - PercentTypeGreenScoreAndPoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PercentTypeGreenScoreAndPoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PercentTypeGreenScoreAndPoiController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PercentTypeGreenScoreAndPoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiService } from './percent-type-green-score-and-poi.service';\nimport { PercentTypeGreenScoreAndPoiController } from './percent-type-green-score-and-poi.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { PoiModule } from '../poi/poi.module';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([PercentTypeGreenScoreAndPoi]),\n  ],\n  providers: [PercentTypeGreenScoreAndPoiService],\n  controllers: [PercentTypeGreenScoreAndPoiController],\n  exports: [PercentTypeGreenScoreAndPoiService],\n})\nexport class PercentTypeGreenScoreAndPoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiService.html":{"url":"injectables/PercentTypeGreenScoreAndPoiService.html","title":"injectable - PercentTypeGreenScoreAndPoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPercentTypeGcAndPoi\n                            \n                            \n                                    Async\n                                countRangGreenScore\n                            \n                            \n                                    Async\n                                getByIdTypGcAndPoi\n                            \n                            \n                                    Async\n                                getGreenScorePassMark\n                            \n                            \n                                    Async\n                                getType\n                            \n                            \n                                    Async\n                                serialazeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(percentTypeGreenScoreAndPoiRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        percentTypeGreenScoreAndPoiRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPercentTypeGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentTypeGcAndPoi\n                                    \n                                                PercentTypeGreenScoreAndPoi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countRangGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countRangGreenScore(rangeMax: number, rangeMin: number)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rangeMax\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    rangeMin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIdTypGcAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeGreenScore\n                                    \n                                                TypeGreenScore\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGreenScorePassMark\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScorePassMark(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(poi: Poi)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            serialazeData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serialazeData(percentAndType)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    percentAndType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { PercentTypeGreenScoreAndPoi } from './percentTypeGreenScoreAndPoiEntity';\nimport { Repository } from 'typeorm';\nimport { PoiService } from '../poi/poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentTypeGreenScoreAndPoiDto } from './PercentTypeGreenScoreAndPoiDto';\nimport { Poi } from '../poi/poiEntity';\nimport { TypeGreenScore } from '../type-green-score/typeGreenScoreEntity';\n\n/**\n *\n */\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiService {\n  /**\n   *\n   * @param percentTypeGreenScoreAndPoiRepository\n   */\n  constructor(\n    @InjectRepository(PercentTypeGreenScoreAndPoi)\n    private readonly percentTypeGreenScoreAndPoiRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param percentTypeGcAndPoi\n   */\n  async addPercentTypeGcAndPoi(percentTypeGcAndPoi: PercentTypeGreenScoreAndPoi) {\n    return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGcAndPoi);\n  }\n  //\n  // async addPercentTypeGreenScoreAndPoiService(\n  //   percentTypeGreenScoreAndPoiServiceDto: PercentTypeGreenScoreAndPoiDto) {\n  //   const typeGreenScoreFind = await this.typeGreenScoreService.getType(percentTypeGreenScoreAndPoiServiceDto.idTypeGreenScore);\n  //   const poiFind = await this.poiService.getPoi(percentTypeGreenScoreAndPoiServiceDto.idPoi);\n  //   const percentTypeGreenScoreAndPoi: PercentTypeGreenScoreAndPoi = {\n  //     percent: percentTypeGreenScoreAndPoiServiceDto.percent,\n  //     poi: poiFind,\n  //     typeGreenScore: typeGreenScoreFind,\n  //   };\n  //   return await this.percentTypeGreenScoreAndPoiRepository.save(percentTypeGreenScoreAndPoi);\n  // }\n  //\n  // async getAllPercentTypeGreenScoreAndPoi(): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     relations: ['poi', 'typeGreenScore'],\n  //   });\n  // }\n  //\n  // async findByPoi(idPoi: number): Promise {\n  //   const poi = await this.poiService.getPoi(idPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.find({\n  //     where: {\n  //       poi,\n  //     },\n  //   });\n  // }\n  //\n  // async getOnePercentTypeGreenScoreAndPoi(idPercent: number): Promise {\n  //   return await this.percentTypeGreenScoreAndPoiRepository.findOneOrFail(idPercent)\n  //     .catch(() => {\n  //       throw new NotFoundException(`PercentTypeGreenScoreAndPoi with id ${idPercent} Not Found`);\n  //     });\n  // }\n  //\n  // async deletePercentTypeGreenScore(idPercentGcAndPoi: number) {\n  //   const percentGc = await this.getOnePercentTypeGreenScoreAndPoi(idPercentGcAndPoi);\n  //   return await this.percentTypeGreenScoreAndPoiRepository.delete(percentGc);\n  // }\n  //\n\n  /**\n   *\n   * @param poi\n   */\n  async getGreenScorePassMark(poi: Poi): Promise {\n    const allPercent = await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n      },\n    });\n    if (allPercent.length === 0) {\n      return 0;\n    }\n    let total: number = 0;\n    allPercent.forEach((percent) => {\n      total +=  percent.percent;\n    });\n    return (total / allPercent.length) / 10;\n  }\n\n  /**\n   *\n   * @param poi\n   * @param typeGreenScore\n   */\n  async getByIdTypGcAndPoi(poi: Poi, typeGreenScore: TypeGreenScore) {\n    return await this.percentTypeGreenScoreAndPoiRepository.find({\n      where: {\n        poi,\n        typeGreenScore,\n      },\n    });\n  }\n\n  async countRangGreenScore(rangeMax: number, rangeMin: number) {\n    return await this.percentTypeGreenScoreAndPoiRepository.createQueryBuilder()\n      .where('percent = :rangeM', {rangeM: rangeMin})\n      .getCount();\n  }\n\n  async serialazeData(percentAndType) {\n    return percentAndType.map((percentType) => {\n      return {\n        idTypeGreenScore: percentType.typeGreenScore.id,\n        percent: percentType.percent,\n        typeName: percentType.typeGreenScore.typeGreenScore,\n      };\n    });\n  }\n\n  async getType(poi: Poi) {\n    const types = await this.percentTypeGreenScoreAndPoiRepository.find({\n      select: ['percent'],\n      where: {\n        poi,\n      },\n      relations: ['typeGreenScore'],\n    });\n    return types.map((type: any) => {\n      type.mark = type.percent / 10;\n      return type;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html":{"url":"injectables/PercentTypeGreenScoreAndPoiTransformationPipe.html","title":"injectable - PercentTypeGreenScoreAndPoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PercentTypeGreenScoreAndPoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, Injectable, PipeTransform } from '@nestjs/common';\nimport { PercentTypeGreenScoreAndPoiDto } from '../PercentTypeGreenScoreAndPoiDto';\nimport { filterInt } from '../../utils/function.utils';\n\n@Injectable()\nexport class PercentTypeGreenScoreAndPoiTransformationPipe implements PipeTransform> {\n  /**\n   *\n   * @param value\n   * @param metadata\n   */\n  transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    newValue.idPoi = filterInt(value.idPoi);\n    newValue.idTypeGreenScore = filterInt(value.idTypeGreenScore);\n    newValue.percent = filterInt(value.percent);\n    return newValue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Poi.html":{"url":"classes/Poi.html","title":"class - Poi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Poi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                city\n                            \n                            \n                                dateCreate\n                            \n                            \n                                description\n                            \n                            \n                                greenScore\n                            \n                            \n                                id\n                            \n                            \n                                lat\n                            \n                            \n                                logo\n                            \n                            \n                                long\n                            \n                            \n                                mainImg\n                            \n                            \n                                name\n                            \n                            \n                                postalCode\n                            \n                            \n                                price\n                            \n                            \n                                reward\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'longtext'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mainImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined, length: 300})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 30, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 6})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reward\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiEntity.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Poi {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 30,\n    unique: true,\n  })\n  name: string;\n\n  @Column({\n    length: 50,\n  })\n  price: string;\n\n  @Column({\n    type: 'longtext',\n  })\n  description: string;\n\n  @Column({\n    length: 150,\n  })\n  address: string;\n\n  @Column({\n    length: 50,\n  })\n  city: string;\n\n  @Column({\n    length: 6,\n  })\n  postalCode: string;\n\n  @Column({\n    length: 50,\n    nullable: true,\n    default: null,\n  })\n  type: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  long: string;\n\n  @Column({\n    length: 100,\n    nullable: true,\n    default: null,\n  })\n  lat: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  greenScore: number;\n\n  @Column({\n    nullable: true,\n    default: null,\n  })\n  logo: string;\n\n  @CreateDateColumn()\n  dateCreate: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n    length: 300,\n  })\n  mainImg: string;\n\n  @Column({\n    default: 100,\n  })\n  reward: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PoiAndTags.html":{"url":"classes/PoiAndTags.html","title":"class - PoiAndTags","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PoiAndTags\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiAndTags.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                poi\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poi: Poi, tags: JoinTagPoiEntity[])\n                    \n                \n                        \n                            \n                                Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poi\n                                                  \n                                                        \n                                                                        Poi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tags\n                                                  \n                                                        \n                                                                    JoinTagPoiEntity[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            poi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Poi\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     JoinTagPoiEntity[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiAndTags.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Poi } from './poiEntity';\nimport { Tag } from '../tags/tagEntity';\nimport { JoinTagPoiEntity } from '../join-tag-poi/joinTagPoiEntity';\n\nexport class PoiAndTags {\n  poi: Poi;\n  tags: JoinTagPoiEntity[];\n\n  /**\n   *\n   * @param poi {Poi}\n   * @param tags {JoinTagPoiEntity[]}\n   */\n  constructor(poi: Poi, tags: JoinTagPoiEntity[]) {\n    this.poi = poi;\n    this.tags = tags;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PoiController.html":{"url":"controllers/PoiController.html","title":"controller - PoiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PoiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                poi\n            \n\n            \n                Description\n            \n            \n                point of interest controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                deletePoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getCompanyAndTags\n                            \n                            \n                                    Async\n                                getHistoric\n                            \n                            \n                                    Async\n                                getNearbyPoi\n                            \n                            \n                                    Async\n                                getOneNearbyPoi\n                            \n                            \n                                    Async\n                                getPoiByName\n                            \n                            \n                                    Async\n                                getPoiOrderByDate\n                            \n                            \n                                    Async\n                                updatePoi\n                            \n                            \n                                    Async\n                                validateGoInPoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiCreatedResponse()@ApiForbiddenResponse()@Post()@UsePipes(new ValidationPipe())@UsePipes(PoiTransformationPipe)@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePoi(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiForbiddenResponse()@ApiNotFoundResponse()@ApiBearerAuth()@UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get()@UseInterceptors(EntityTypeInterceptor)@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:78\n                \n            \n\n\n            \n                \n                    Return all poi in database\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCompanyAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCompanyAndTags(idPoi: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Get('one/:id')@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHistoric\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoric(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('historic')@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNearbyPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNearbyPoi(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nearby')@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneNearbyPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneNearbyPoi(idPoi: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('nearby/:id')@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiByName()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/name')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiOrderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiOrderByDate()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@UseGuards(RoleGuard)@Roles('admin')@Get('order/date')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePoi(idPoi: number, poiDto: PoiDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse()@ApiForbiddenResponse()@Put(':id')@UseGuards(RoleGuard)@UsePipes(new ValidationPipe())@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    poiDto\n                                    \n                                                PoiDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateGoInPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateGoInPoi(id: number, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('validate/:id')@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/poi/poi.controller.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, Put, UseGuards, UseInterceptors, UsePipes, ValidationPipe, Request } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { PoiDto } from './poiDto';\nimport { PoiTransformationPipe } from './pipe/poi.transformation.pipe';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { EntityTypeInterceptor } from '../interceptor/entity-type.interceptor';\nimport { Poi } from './poiEntity';\nimport {\n  ApiBearerAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { filterInt } from '../utils/function.utils';\nimport { PoiGeoCalcService } from './poi.geo.calc.service';\nimport { JoinUserPoiInterface } from '../join-user-poi/join-user-poi.interface';\nimport { JoinUserPoiService } from '../join-user-poi/join-user-poi.service';\n\n/**\n * point of interest controller\n */\n@ApiTags('poi')\n@ApiBearerAuth()\n@Controller('poi')\n@UseGuards(AuthGuard('jwt'))\nexport class PoiController {\n  constructor(\n    private readonly poiService: PoiService,\n    private readonly joinTagPoiService: JoinTagPoiService,\n    private readonly poiGeoCalcService: PoiGeoCalcService,\n    private readonly joinUserPoiService: JoinUserPoiService,\n    // private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  /**\n   *\n   * @param poiDto\n   */\n  @ApiCreatedResponse()\n  @ApiForbiddenResponse()\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UsePipes(PoiTransformationPipe)\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addPoi(@Body() poiDto: PoiDto) {\n    return await this.poiService.addPoi(poiDto);\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getCompanyAndTags(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return await this.poiService.getPoiAndTags(idPoi);\n  }\n\n  /**\n   * Return all poi in database\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Get()\n  @UseInterceptors(EntityTypeInterceptor)\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getAllPoi() {\n    return await this.poiService.getAllPoi();\n  }\n\n  /**\n   *\n   * @param idPoi\n   * @param poiDto\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @Put(':id')\n  @UseGuards(RoleGuard)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Roles('admin')\n  async updatePoi(@Param('id') idPoi: number, @Body() poiDto: PoiDto) {\n    idPoi = filterInt(idPoi);\n    return await this.poiService.updatePoi(poiDto, idPoi);\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/name')\n  async getPoiByName(): Promise {\n    return await this.poiService.orderByName();\n  }\n\n  /**\n   *\n   */\n  @ApiOkResponse()\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('order/date')\n  async getPoiOrderByDate(): Promise {\n    return await this.poiService.orderByDate();\n  }\n\n  /**\n   *\n   * @param idPoi\n   */\n  @Delete(':id')\n  @ApiForbiddenResponse()\n  @ApiNotFoundResponse()\n  @ApiBearerAuth()\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async deletePoi(@Param('id', new ParseIntPipe()) idPoi: number) {\n    return await this.poiService.deletePoi(idPoi);\n  }\n\n  @Get('nearby')\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getNearbyPoi(@Request() req) {\n    return await this.poiGeoCalcService.getNearbyPoi(req.user);\n  }\n\n  @Get('nearby/:id')\n  @ApiForbiddenResponse()\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getOneNearbyPoi(@Param('id', new ParseIntPipe()) idPoi: number, @Request() req) {\n    return await this.poiGeoCalcService.getDistancePoi(idPoi, req.user.user);\n  }\n\n  @Get('validate/:id')\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async validateGoInPoi(@Param('id', new ParseIntPipe()) id: number, @Request() req) {\n    const joinUserPoi: JoinUserPoiInterface = {\n      poi: await this.poiService.getPoi(id),\n      user: req.user.user,\n    };\n    return await this.joinUserPoiService.addJoinUserPoi(joinUserPoi);\n  }\n\n  @Get('historic')\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getHistoric(@Request() req) {\n    return await this.joinUserPoiService.getHistoric(req.user.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiDto.html":{"url":"injectables/PoiDto.html","title":"injectable - PoiDto","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poiDto.ts\n        \n\n            \n                Description\n            \n            \n                Data attempt to add new poi\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                address\n                            \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                greenScore\n                            \n                            \n                                    Readonly\n                                imgsPoi\n                            \n                            \n                                    Readonly\n                                lat\n                            \n                            \n                                    Readonly\n                                long\n                            \n                            \n                                    Readonly\n                                mainImg\n                            \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                postalCode\n                            \n                            \n                                    Readonly\n                                price\n                            \n                            \n                                    Readonly\n                                tags\n                            \n                            \n                                    Readonly\n                                type\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Address Of Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:24\n                            \n                        \n\n                \n                    \n                        Address of Poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'City of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:33\n                            \n                        \n\n                \n                    \n                        City of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'short description of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:43\n                            \n                        \n\n                \n                    \n                        Description of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            greenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()@IsNumber()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            imgsPoi\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Latitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:58\n                            \n                        \n\n                \n                    \n                        Latitude of poi\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Longitude of the Poi'})@IsString()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mainImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Name of the Poi'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'postalCode of the Poi'})@IsNumberString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Price range of the point of interest', enum: PriceEnum})@IsEnum(PriceEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id tags'})@IsOptional()@IsArray()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of poi ex (restaurant)'})@IsEnum(TypePoiEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:110\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PercentAndIdTag[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: undefined, description: 'Array of id type Green score'})@ValidateNested()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/poi/poiDto.ts:104\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiInterface } from './interfaces/poi.interface';\nimport { IsArray, IsEnum, IsNumber, IsNumberString, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { PriceEnum } from './enum/price.enum';\nimport { ApiProperty, ApiPropertyOptional, getSchemaPath } from '@nestjs/swagger';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { TypePoiEnum } from './enum/typePoiEnum';\nimport { ImgPoiDto } from '../img-poi/imgPoiDto';\nimport { Type } from 'class-transformer';\n\n/**\n * Data attempt to add new poi\n */\n@Injectable()\nexport class PoiDto implements PoiInterface {\n\n  /**\n   * Address of Poi\n   */\n  @ApiProperty({\n    description: 'Address Of Poi',\n  })\n  @IsString()\n  readonly address: string;\n\n  /**\n   * City of poi\n   */\n  @ApiProperty({\n    description: 'City of the Poi',\n  })\n  @IsString()\n  readonly city: string;\n\n  /**\n   * Description of poi\n   */\n  @ApiPropertyOptional({\n    description: 'short description of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly description: string;\n\n  @ApiPropertyOptional()\n  @IsNumber()\n  @IsOptional()\n  readonly greenScore: number = 10;\n\n  /**\n   * Latitude of poi\n   */\n  @ApiPropertyOptional({\n    description: 'Latitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly lat: string;\n\n  @ApiPropertyOptional({\n    description: 'Longitude of the Poi',\n  })\n  @IsString()\n  @IsOptional()\n  readonly long: string;\n\n  @ApiPropertyOptional({\n    description: 'Name of the Poi',\n  })\n  @IsString()\n  readonly name: string;\n\n  @ApiProperty({\n    description: 'postalCode of the Poi',\n  })\n  @IsNumberString()\n  readonly postalCode: string;\n\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id tags',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly tags: number[];\n\n  /*\n  @ApiPropertyOptional({\n    type: [Number],\n    description: 'Array of id Poi type',\n  })\n  @IsOptional()\n  @IsArray()\n  readonly type: number[];\n  */\n\n  @ApiPropertyOptional({\n    type: [PercentAndIdTag],\n    description: 'Array of id type Green score',\n  })\n  // @IsArray()\n  @ValidateNested()\n  @IsOptional()\n  readonly typeGreenScore: PercentAndIdTag[];\n\n  @ApiProperty({\n    description: 'Type of poi ex (restaurant)',\n  })\n  @IsEnum(TypePoiEnum)\n  readonly type: string;\n\n  @ApiProperty({\n    description: 'Price range of the point of interest',\n    enum: PriceEnum,\n  })\n  @IsEnum(PriceEnum)\n  readonly price: string;\n\n  @IsOptional()\n  @IsString()\n  readonly mainImg: string;\n\n  @IsArray()\n  @IsOptional()\n  readonly imgsPoi: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiGeoCalcService.html":{"url":"injectables/PoiGeoCalcService.html","title":"injectable - PoiGeoCalcService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiGeoCalcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.geo.calc.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calcDist\n                            \n                            \n                                    Async\n                                getDistancePoi\n                            \n                            \n                                    Async\n                                getNearbyPoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyService: CompanyService, poiService: PoiService, imgPoiService: ImgPoiService, joinTagPoiService: JoinTagPoiService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/poi/poi.geo.calc.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        poiService\n                                                  \n                                                        \n                                                                        PoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imgPoiService\n                                                  \n                                                        \n                                                                        ImgPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calcDist\n                        \n                        \n                    \n                \n            \n            \n                \ncalcDist(poi, company: Company, x1: number, y1: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.geo.calc.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    company\n                                    \n                                                Company\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x1\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y1\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getDistancePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDistancePoi(idPoi: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.geo.calc.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNearbyPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNearbyPoi(user)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.geo.calc.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CompanyService } from '../company/company.service';\nimport { PoiService } from './poi.service';\nimport { Poi } from './poiEntity';\nimport { Company } from '../company/companyEntity';\nimport { ImgPoiService } from '../img-poi/img-poi.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n@Injectable()\nexport class PoiGeoCalcService {\n  constructor(\n    private readonly companyService: CompanyService,\n    private readonly poiService: PoiService,\n    private readonly imgPoiService: ImgPoiService,\n    private readonly joinTagPoiService: JoinTagPoiService,\n    private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  calcDist(poi, company: Company, x1: number, y1: number): number {\n    const x2 =  parseFloat(poi.lat);\n    const y2 =  parseFloat(poi.long);\n    const R = 6371e3;\n    const phi1 = x1 * Math.PI / 180;\n    const phi2 = x2 * Math.PI / 180;\n    const deltaPhi = (x2 - x1) * Math.PI / 180;\n    const deltaLambda = (y2 - y1) * Math.PI / 180;\n\n    const calc = Math.sin(deltaPhi / 2) * Math.sin(deltaPhi / 2) + Math.cos(phi1) * Math.cos(phi2) * Math.sin(deltaLambda / 2) * Math.sin(deltaLambda / 2);\n    const distanceInRadians = 2 * Math.atan2(Math.sqrt(calc), Math.sqrt(1 - calc));\n    return Math.round(R * distanceInRadians);\n  }\n\n  async getNearbyPoi(user) {\n    const company = await this.companyService.getOne(user.idCompany);\n    const pois = await this.poiService.getAllPoi();\n    const x1 =  parseFloat(user.user.company.lat);\n    const y1 =  parseFloat(user.user.company.long);\n    return pois.filter((poi: any) =>  {\n      const distance = this.calcDist(poi, user.user.company, x1, y1);\n      if (distance \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PoiInterface.html":{"url":"interfaces/PoiInterface.html","title":"interface - PoiInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PoiInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/interfaces/poi.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        city\n                                \n                                \n                                        description\n                                \n                                \n                                        greenScore\n                                \n                                \n                                        lat\n                                \n                                \n                                            Optional\n                                        logo\n                                \n                                \n                                        long\n                                \n                                \n                                        name\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        price\n                                \n                                \n                                        type\n                                \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        greenScore\n                                    \n                                \n                                \n                                    \n                                        greenScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logo\n                                    \n                                \n                                \n                                    \n                                        logo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        long\n                                    \n                                \n                                \n                                    \n                                        long:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:     PercentAndIdTag[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PercentAndIdTag[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PercentAndIdTag } from '../percentAndIdTag';\n\nexport interface PoiInterface {\n  readonly name: string;\n  readonly price: string;\n  readonly description: string;\n  readonly address: string;\n  readonly city: string;\n  readonly postalCode: string;\n  readonly long: string;\n  readonly lat: string;\n  readonly greenScore: number;\n  readonly logo?: string;\n  readonly type: string;\n  readonly typeGreenScore: PercentAndIdTag[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PoiModule.html":{"url":"modules/PoiModule.html","title":"module - PoiModule","body":"\n                   \n\n\n\n\n    Modules\n    PoiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_imports\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nCompanyModule->PoiModule\n\n\n\n\n\nImgPoiModule\n\nImgPoiModule\n\nPoiModule -->\n\nImgPoiModule->PoiModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\n\n\nJoinUserPoiModule\n\nJoinUserPoiModule\n\nPoiModule -->\n\nJoinUserPoiModule->PoiModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nPoiGeoCalcService\n\nPoiGeoCalcService\n\nPoiModule -->\n\nPoiGeoCalcService->PoiModule\n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/poi/poi.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PoiGeoCalcService\n                        \n                        \n                            PoiService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PoiController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            ImgPoiModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            JoinUserPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeGreenScoreModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PoiService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {  Module } from '@nestjs/common';\nimport { PoiService } from './poi.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Poi } from './poiEntity';\nimport { PoiController } from './poi.controller';\nimport { TagsModule } from '../tags/tags.module';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { TypeModule } from '../type/type.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\nimport { TypeGreenScoreModule } from '../type-green-score/type-green-score.module';\nimport { CompanyModule } from '../company/company.module';\nimport { PoiGeoCalcService } from './poi.geo.calc.service';\nimport { ImgPoiModule } from '../img-poi/img-poi.module';\nimport { JoinUserPoiModule } from '../join-user-poi/join-user-poi.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Poi]),\n    TagsModule,\n    JoinTagPoiModule,\n    TypeModule,\n    TypeGreenScoreModule,\n    PercentTypeGreenScoreAndPoiModule,\n    CompanyModule,\n    ImgPoiModule,\n    JoinUserPoiModule,\n  ],\n  providers: [PoiService, PoiGeoCalcService],\n  controllers: [PoiController],\n  exports: [PoiService],\n})\nexport class PoiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiService.html":{"url":"injectables/PoiService.html","title":"injectable - PoiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/poi.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPoi\n                            \n                            \n                                    Async\n                                countPoi\n                            \n                            \n                                    Async\n                                countType\n                            \n                            \n                                    Async\n                                deletePoi\n                            \n                            \n                                    Async\n                                formatToPercentTGCAndPoi\n                            \n                            \n                                    Async\n                                getAllPoi\n                            \n                            \n                                    Async\n                                getPoi\n                            \n                            \n                                    Async\n                                getPoiAndTags\n                            \n                            \n                                    Async\n                                getTypePoi\n                            \n                            \n                                    Async\n                                getUserPoi\n                            \n                            \n                                    Async\n                                orderByDate\n                            \n                            \n                                    Async\n                                orderByName\n                            \n                            \n                                    Async\n                                updatePoi\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(poiRepository: Repository, connection: Connection, tagsService: TagsService, typeService: TypeService, typeGreenScoreService: TypeGreenScoreService, joinTagPoiService: JoinTagPoiService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService, imgPoiService: ImgPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/poi/poi.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        poiRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeGreenScoreService\n                                                  \n                                                        \n                                                                        TypeGreenScoreService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imgPoiService\n                                                  \n                                                        \n                                                                        ImgPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addPoi(poiDto)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:206\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            formatToPercentTGCAndPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[])\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poi\n                                    \n                                                Poi\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    typeAndPercent\n                                    \n                                            PercentAndIdTag[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoi(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPoiAndTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoiAndTags(idPoi: number)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypePoi()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserPoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserPoi(idPoi: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idPoi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByDate()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            orderByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    orderByName()\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePoi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePoi(poiDto, idPoi)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/poi.service.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    poiDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idPoi\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Connection, Repository } from 'typeorm';\nimport { Poi } from './poiEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TagsService } from '../tags/tags.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { TypeService } from '../type/type.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\nimport { TypeGreenScoreService } from '../type-green-score/type-green-score.service';\nimport { PercentAndIdTag } from './percentAndIdTag';\nimport { PercentTypeGreenScoreAndPoi } from '../percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity';\nimport { exaToRgbaObject, getEnumKey } from '../utils/function.utils';\nimport { TypePoiEnum } from './enum/typePoiEnum';\nimport { ancestorWhere } from 'tslint';\nimport { ImgPoiService } from '../img-poi/img-poi.service';\nimport { PoiGeoCalcService } from './poi.geo.calc.service';\n\n@Injectable()\nexport class PoiService {\n  /**\n   *\n   * @param poiRepository\n   * @param connection\n   * @param tagsService\n   * @param typeService\n   * @param typeGreenScoreService\n   * @param joinTagPoiService\n   * @param percentTypeGreenScoreAndPoiService\n   * @param imgPoiService\n   */\n  constructor(\n    @InjectRepository(Poi)\n    private readonly poiRepository: Repository,\n    private connection: Connection,\n    private tagsService: TagsService,\n    private typeService: TypeService,\n    private typeGreenScoreService: TypeGreenScoreService,\n    private joinTagPoiService: JoinTagPoiService,\n    private percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n    private imgPoiService: ImgPoiService,\n  ) {}\n\n  async formatToPercentTGCAndPoi(poi: Poi, typeAndPercent: PercentAndIdTag[]): Promise {\n      const percentPoiAnTypeGcPromise =  typeAndPercent.map(async (typePercent) => {\n        return {\n          poi,\n          percent: typePercent.percent,\n          typeGreenScore: await this.typeGreenScoreService.getType(typePercent.idType),\n        };\n      });\n      return await Promise.all(percentPoiAnTypeGcPromise);\n  }\n\n  // Todo refacto\n  async addPoi(poiDto) {\n    const tags = await this.tagsService.getTags(poiDto.tags);\n    if (poiDto.typeGreenScore) {\n      const typeToCheck = await this.typeGreenScoreService.getByIds(\n        poiDto.typeGreenScore.map((type) => {\n          return type.idType;\n        }));\n      if (typeToCheck.length  {\n      return await this.joinTagPoiService.addJoinTagPoi(poiAdded, tag);\n    });\n    if (poiDto.typeGreenScore) {\n      const percentTypeGreenScoreAndPoiToAdd = await this.formatToPercentTGCAndPoi(poiAdded, poiDto.typeGreenScore);\n      const percentTypeGcAndPoiAddedPromise = percentTypeGreenScoreAndPoiToAdd.map(async (percentGcAndDto) => {\n        return await this.percentTypeGreenScoreAndPoiService.addPercentTypeGcAndPoi(percentGcAndDto);\n      });\n      await Promise.all(percentTypeGcAndPoiAddedPromise);\n    }\n    await Promise.all(tagAddedPromise);\n    if (poiDto.imgsPoi) {\n      await Promise.all(poiDto.imgsPoi.map( async (img) => {\n        return await this.imgPoiService.addImgPoi(img, poiAdded);\n      }));\n    }\n    return poiAdded;\n  }\n\n  async getPoi(idPoi: number): Promise {\n    const poi =  await this.poiRepository.findOneOrFail(idPoi)\n      .catch(() => {\n        throw new NotFoundException(`Poi with id ${idPoi} Not Found`);\n      });\n    poi.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n    return  poi;\n  }\n\n  async getUserPoi(idPoi: number, user) {\n    const poi: any = await this.getPoi(idPoi);\n    // poi.distance =  this.poiGeoCalcService.calcDist(poi)\n  }\n\n  async getPoiAndTags(idPoi: number) {\n    const poi = await this.getPoi(idPoi);\n    const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n    poi.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n    const serializeTags = await this.joinTagPoiService.serializeTagsData(tags);\n    serializeTags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return {\n      poi,\n      tags:  serializeTags, // serializeTagsWithRgb,\n      typeGreenScore: await this.percentTypeGreenScoreAndPoiService.serialazeData(await this.percentTypeGreenScoreAndPoiService.getType(poi)),\n    };\n  }\n\n  async getAllPoi(): Promise {\n    const allPoi = await this.poiRepository.find();\n    const allPoiWithTagsAndTypesPromise = allPoi.map(async (poi) =>  {\n      const poiWithType: any = poi;\n      const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n      poiWithType.tags = await this.joinTagPoiService.serializeTagsData(tags);\n      poiWithType.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n      poiWithType.typeGreenScore = await this.percentTypeGreenScoreAndPoiService.serialazeData(await this.percentTypeGreenScoreAndPoiService.getType(poi));\n      const imgs = await this.imgPoiService.getImgs(poi);\n      poiWithType.imgs = await this.imgPoiService.serializeImgUrl(imgs);\n      return poiWithType;\n    });\n    return  await Promise.all(allPoiWithTagsAndTypesPromise);\n  }\n/*\n  async getPoiForUserr(user) {\n    const allPoi = await this.poiRepository.find();\n    const allPoiWithTagsAndTypesPromise = allPoi.map(async (poi) =>  {\n      const poiWithType: any = poi;\n      const tags = await this.joinTagPoiService.getAllCompanyTag(poi);\n      poiWithType.tags = await this.joinTagPoiService.serializeTagsData(tags);\n      poiWithType.greenScore = await this.percentTypeGreenScoreAndPoiService.getGreenScorePassMark(poi);\n      poiWithType.typeGreenScore = await this.percentTypeGreenScoreAndPoiService.serialazeData(await this.percentTypeGreenScoreAndPoiService.getType(poi));\n      const imgs = await this.imgPoiService.getImgs(poi);\n      poiWithType.imgs = imgs.map((img) => {\n        return img.img;\n      });\n      poiWithType.distance = await this.poiGeoCalcService.getDitancePoi(user, poi);\n      return poiWithType;\n    });\n    return  await Promise.all(allPoiWithTagsAndTypesPromise);\n  }\n*/\n  async countPoi() {\n    return await this.poiRepository.count();\n  }\n\n  async orderByName(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        name: 'ASC',\n      },\n    });\n  }\n\n  async orderByDate(): Promise {\n    return await this.poiRepository.find({\n      order: {\n        dateCreate: 'ASC',\n      },\n    });\n  }\n\n  async countType(type: string): Promise {\n    return await this.poiRepository.count({\n      where: {\n        type,\n      },\n    });\n  }\n\n  async updatePoi(poiDto, idPoi) {\n    const poi = await this.getPoi(idPoi);\n    const tagAddPromise = poiDto.tags.map(async (tagId) => {\n      const tag =  await this.tagsService.getOneTag(tagId);\n      const checkIfTagJoin = await this.joinTagPoiService.checkTag(tag, poi);\n      if (!checkIfTagJoin) {\n        await this.joinTagPoiService.addJoinTagPoi(poi, tag);\n      }\n    });\n    poiDto.idPoi = idPoi;\n    await Promise.all(tagAddPromise);\n    poi.address = poiDto.address;\n    poi.city = poiDto.city;\n    poi.description = poiDto.description;\n    poi.name = poiDto.name;\n    poi.postalCode = poiDto.postalCode;\n    poi.price = poiDto.price;\n    poi.type = poiDto.type;\n    poi.lat = poiDto.lat;\n    poi.long = poiDto.long;\n    return await this.poiRepository.save(poi);\n  }\n\n  async getTypePoi() {\n    return await getEnumKey(TypePoiEnum);\n  }\n\n  async deletePoi(idPoi: number) {\n    const poi = await this.getPoi(idPoi);\n    return await this.poiRepository.delete(idPoi);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PoiTransformationPipe.html":{"url":"injectables/PoiTransformationPipe.html","title":"injectable - PoiTransformationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PoiTransformationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/poi/pipe/poi.transformation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/poi/pipe/poi.transformation.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, Injectable, PipeTransform } from '@nestjs/common';\nimport { filterInt } from '../../utils/function.utils';\nimport { PoiDto } from '../poiDto';\n\n@Injectable()\nexport class PoiTransformationPipe implements PipeTransform {\n\n  async transform(value: any, metadata: ArgumentMetadata): Promise {\n    const newValue = value;\n    if (newValue.tags) {\n      newValue.tags = value.tags.map((idTags) => {\n        return filterInt(idTags);\n      });\n    }\n    if (newValue.typeGreenScore && Array.isArray(newValue.typeGreenScore)) {\n      newValue.typeGreenScore = value.typeGreenScore.map((percentAndTypeGc) => {\n         percentAndTypeGc.idType = filterInt(percentAndTypeGc.idType);\n         percentAndTypeGc.percent = filterInt(percentAndTypeGc.percent);\n         if (isNaN(percentAndTypeGc.idType) || isNaN(percentAndTypeGc.percent)) {\n           throw new BadRequestException('idGreen score or percent must be a number');\n         }\n         return percentAndTypeGc;\n      });\n    }\n    newValue.tags = newValue.tags.filter((tag) => tag > 0);\n    return newValue;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionQuizz.html":{"url":"classes/QuestionQuizz.html","title":"class - QuestionQuizz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionQuizz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-quizz/questionQuizzEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                goodAnswer\n                            \n                            \n                                id\n                            \n                            \n                                quizz\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goodAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzEntity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Quizz\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onUpdate: 'CASCADE', onDelete: 'CASCADE', nullable: false})@JoinColumn({name: 'quizzId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzEntity.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Quizz } from '../quizz/quizzEntity';\n\n@Entity('question_quizz')\nexport class QuestionQuizz {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 500,\n  })\n  answer: string;\n\n  @Column({\n    default: false,\n  })\n  goodAnswer: boolean;\n\n  @ManyToOne(type => Quizz, (quizz) => quizz.id, {\n    onUpdate: 'CASCADE',\n    onDelete: 'CASCADE',\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'quizzId',\n  })\n  quizz: Quizz;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QuestionQuizzController.html":{"url":"controllers/QuestionQuizzController.html","title":"controller - QuestionQuizzController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QuestionQuizzController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-quizz/question-quizz.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                question-quizz\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('')\n@Controller('question-quizz')\nexport class QuestionQuizzController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionQuizzDto.html":{"url":"classes/QuestionQuizzDto.html","title":"class - QuestionQuizzDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionQuizzDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-quizz/questionQuizzDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                answer\n                            \n                            \n                                    Readonly\n                                goodAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            answer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzDto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            goodAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsBoolean()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/question-quizz/questionQuizzDto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsBoolean, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class QuestionQuizzDto {\n  @ApiProperty()\n  @IsString()\n  readonly answer: string;\n\n  @ApiProperty()\n  @IsBoolean()\n  readonly goodAnswer: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuestionQuizzModule.html":{"url":"modules/QuestionQuizzModule.html","title":"module - QuestionQuizzModule","body":"\n                   \n\n\n\n\n    Modules\n    QuestionQuizzModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuestionQuizzModule\n\n\n\ncluster_QuestionQuizzModule_exports\n\n\n\ncluster_QuestionQuizzModule_providers\n\n\n\n\nQuestionQuizzService \n\nQuestionQuizzService \n\n\n\nQuestionQuizzModule\n\nQuestionQuizzModule\n\nQuestionQuizzService  -->\n\nQuestionQuizzModule->QuestionQuizzService \n\n\n\n\n\nQuestionQuizzService\n\nQuestionQuizzService\n\nQuestionQuizzModule -->\n\nQuestionQuizzService->QuestionQuizzModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/question-quizz/question-quizz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuestionQuizzService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QuestionQuizzController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuestionQuizzService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QuestionQuizzService } from './question-quizz.service';\nimport { QuestionQuizzController } from './question-quizz.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { QuestionQuizz } from './questionQuizzEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([QuestionQuizz]),\n  ],\n  providers: [QuestionQuizzService],\n  controllers: [QuestionQuizzController],\n  exports: [QuestionQuizzService],\n})\nexport class QuestionQuizzModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionQuizzService.html":{"url":"injectables/QuestionQuizzService.html","title":"injectable - QuestionQuizzService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuestionQuizzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/question-quizz/question-quizz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAnswerQuizz\n                            \n                            \n                                    Async\n                                checkAnswer\n                            \n                            \n                                    Async\n                                getAnswerByQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(questionQuizzRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/question-quizz/question-quizz.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        questionQuizzRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addAnswerQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAnswerQuizz(questionQuizzDto)\n                \n            \n\n\n            \n                \n                    Defined in src/question-quizz/question-quizz.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    questionQuizzDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAnswer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAnswer(idQuizz: number, idAnswer: number)\n                \n            \n\n\n            \n                \n                    Defined in src/question-quizz/question-quizz.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idQuizz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idAnswer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAnswerByQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAnswerByQuizz(quizz: Quizz)\n                \n            \n\n\n            \n                \n                    Defined in src/question-quizz/question-quizz.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizz\n                                    \n                                                Quizz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { QuestionQuizz } from './questionQuizzEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Quizz } from '../quizz/quizzEntity';\n\n@Injectable()\nexport class QuestionQuizzService {\n  constructor(\n    @InjectRepository(QuestionQuizz)\n    private readonly questionQuizzRepository: Repository,\n  ) {}\n\n  async addAnswerQuizz(questionQuizzDto): Promise {\n    return await this.questionQuizzRepository.save(questionQuizzDto);\n  }\n\n  async getAnswerByQuizz(quizz: Quizz) {\n    return await this.questionQuizzRepository.find({\n      select: ['id', 'answer', 'goodAnswer'],\n      where: {\n        quizz,\n      },\n    });\n  }\n\n  async checkAnswer(idQuizz: number, idAnswer: number) {\n    return await this.questionQuizzRepository.findOneOrFail({\n      where: {\n        quizz: idQuizz,\n        id: idAnswer,\n      },\n    }).catch(() => {\n      throw new ConflictException('une erreur est survenue petit tricheur (:');\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quizz.html":{"url":"classes/Quizz.html","title":"class - Quizz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quizz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/quizz/quizzEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                crystalGain\n                            \n                            \n                                dateCreate\n                            \n                            \n                                id\n                            \n                            \n                                publicationDate\n                            \n                            \n                                question\n                            \n                            \n                                themeQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            crystalGain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 10})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', default: undefined, nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeQuizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ThemeQuizz\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE', nullable: false})@JoinColumn({name: 'idThemeQuizz'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzEntity.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { ThemeQuizz } from '../theme-quizz/themeQuizzEntity';\n\n@Entity('quizz')\nexport class Quizz {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 500,\n  })\n  question: string;\n\n  @Column({\n    default: 10,\n  })\n  crystalGain: number;\n\n  @Column({\n    type: 'timestamp',\n  })\n  dateCreate: string;\n\n  @Column({\n    type: 'timestamp',\n    default: null,\n    nullable: true,\n  })\n  publicationDate: string;\n\n  @ManyToOne(type => ThemeQuizz, (themeQuizz) => themeQuizz.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    nullable: false,\n  })\n  @JoinColumn({\n    name: 'idThemeQuizz',\n  })\n  themeQuizz: ThemeQuizz;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizzAndQuestionDto.html":{"url":"classes/QuizzAndQuestionDto.html","title":"class - QuizzAndQuestionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizzAndQuestionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/quizz/quizzAndQuestionDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                answers\n                            \n                            \n                                    Readonly\n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [QuestionQuizzDto]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDefined()@ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzAndQuestionDto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         QuizzDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDefined()@ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzAndQuestionDto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { QuizzDto } from './quizzDto';\nimport { IsDefined, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { QuestionQuizzDto } from '../question-quizz/questionQuizzDto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class QuizzAndQuestionDto {\n  @ApiProperty()\n  @IsDefined()\n  @ValidateNested()\n  @Type(() => QuizzDto)\n  readonly question: QuizzDto;\n\n  @ApiProperty()\n  @IsDefined()\n  @ValidateNested()\n  @Type(() => QuestionQuizzDto)\n  readonly answers: [QuestionQuizzDto];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/QuizzController.html":{"url":"controllers/QuizzController.html","title":"controller - QuizzController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  QuizzController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/quizz/quizz.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                quizz\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addQuizz\n                            \n                            \n                                    Async\n                                getQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuizz(quizDto: QuizzAndQuestionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/quizz/quizz.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizDto\n                                    \n                                                QuizzAndQuestionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuizz()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/quizz/quizz.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { QuizzService } from './quizz.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { QuizzAndQuestionDto } from './quizzAndQuestionDto';\n\n@ApiTags('quizz')\n@ApiBearerAuth()\n@Controller('quizz')\n@UseGuards(AuthGuard('jwt'))\nexport class QuizzController {\n  constructor(\n    private readonly quizzService: QuizzService,\n  ) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addQuizz(@Body() quizDto: QuizzAndQuestionDto) {\n    return await this.quizzService.addQuizz(quizDto);\n  }\n\n  @Get()\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getQuizz() {\n    return await this.quizzService.getQuizzs();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizzDto.html":{"url":"classes/QuizzDto.html","title":"class - QuizzDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizzDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/quizz/quizzDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                crystalGain\n                            \n                            \n                                    Readonly\n                                    Optional\n                                publicationDate\n                            \n                            \n                                    Readonly\n                                question\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            crystalGain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzDto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            question\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/quizz/quizzDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class QuizzDto {\n  @IsString()\n  @ApiProperty()\n  readonly question: string;\n\n  @IsNumber()\n  @ApiProperty()\n  readonly crystalGain: number = 10;\n\n  @IsString()\n  @ApiProperty()\n  readonly publicationDate?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizzModule.html":{"url":"modules/QuizzModule.html","title":"module - QuizzModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizzModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QuizzModule\n\n\n\ncluster_QuizzModule_imports\n\n\n\ncluster_QuizzModule_exports\n\n\n\ncluster_QuizzModule_providers\n\n\n\n\nQuestionQuizzModule\n\nQuestionQuizzModule\n\n\n\nQuizzModule\n\nQuizzModule\n\nQuizzModule -->\n\nQuestionQuizzModule->QuizzModule\n\n\n\n\n\nQuizzService \n\nQuizzService \n\nQuizzService  -->\n\nQuizzModule->QuizzService \n\n\n\n\n\nQuizzService\n\nQuizzService\n\nQuizzModule -->\n\nQuizzService->QuizzModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/quizz/quizz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizzService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            QuizzController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QuestionQuizzModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizzService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { QuizzService } from './quizz.service';\nimport { QuizzController } from './quizz.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Quizz } from './quizzEntity';\nimport { QuestionQuizzService } from '../question-quizz/question-quizz.service';\nimport { QuestionQuizzModule } from '../question-quizz/question-quizz.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Quizz]),\n    QuestionQuizzModule,\n  ],\n  providers: [QuizzService],\n  controllers: [QuizzController],\n  exports: [QuizzService],\n})\nexport class QuizzModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizzService.html":{"url":"injectables/QuizzService.html","title":"injectable - QuizzService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  QuizzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/quizz/quizz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addQuizz\n                            \n                            \n                                    Async\n                                getQuizzByTheme\n                            \n                            \n                                    Async\n                                getQuizzs\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(quizzRepository: Repository, questionQuizzService: QuestionQuizzService)\n                    \n                \n                        \n                            \n                                Defined in src/quizz/quizz.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quizzRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionQuizzService\n                                                  \n                                                        \n                                                                        QuestionQuizzService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuizz(quizzDto)\n                \n            \n\n\n            \n                \n                    Defined in src/quizz/quizz.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quizzDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getQuizzByTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuizzByTheme(theme: ThemeQuizz)\n                \n            \n\n\n            \n                \n                    Defined in src/quizz/quizz.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                ThemeQuizz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getQuizzs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuizzs()\n                \n            \n\n\n            \n                \n                    Defined in src/quizz/quizz.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Quizz } from './quizzEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { QuestionQuizzService } from '../question-quizz/question-quizz.service';\nimport { ThemeQuizz } from '../theme-quizz/themeQuizzEntity';\n\n@Injectable()\nexport class QuizzService {\n  constructor(\n    @InjectRepository(Quizz)\n    private readonly quizzRepository: Repository,\n    private readonly questionQuizzService: QuestionQuizzService,\n  ) {}\n\n  async addQuizz(quizzDto) {\n    const {question, answers} = quizzDto;\n    const quizz =  await this.quizzRepository.save(question);\n    await Promise.all(answers.map(async (answer) => {\n      answer.quizz = quizz;\n      return  await this.questionQuizzService.addAnswerQuizz(answer);\n    }));\n    return quizz;\n  }\n\n  async getQuizzs() {\n    const quizzs = await this.quizzRepository.find({\n      select: ['id', 'question'],\n    });\n    return Promise.all(quizzs.map(async (quizz) => {\n      const quizAndAnswer: any = quizz;\n      quizAndAnswer.answer = await this.questionQuizzService.getAnswerByQuizz(quizz);\n      return quizAndAnswer;\n    }));\n  }\n\n  async getQuizzByTheme(theme: ThemeQuizz) {\n    const quizzs = await this.quizzRepository.find({\n      select: ['id', 'question'],\n      where: {\n        themeQuizz: theme,\n      },\n    });\n    return Promise.all(quizzs.map(async (quizz) => {\n      const quizAndAnswer: any = quizz;\n      quizAndAnswer.answer = await this.questionQuizzService.getAnswerByQuizz(quizz);\n      return quizAndAnswer;\n    }));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/roleEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 15})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/role/roleEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 15,\n  })\n  role: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guard/role.guard.ts\n            \n\n                \n                Description\n                \n                \n                    check the role of user\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/guard/role.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guard/role.guard.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {CanActivate, ExecutionContext, Injectable} from '@nestjs/common';\nimport {Reflector} from '@nestjs/core';\nimport {Observable} from 'rxjs';\n\n/**\n * check the role of user\n */\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  /**\n   *\n   * @param reflector\n   */\n  constructor(private readonly reflector: Reflector) {}\n\n  /**\n   *\n   * @param context\n   */\n  canActivate(context: ExecutionContext): boolean | Promise | Observable {\n    const roles = this.reflector.get('roles', context.getHandler());\n    if (!roles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n    const hasRole = () => user.roles.some((role) => roles.includes(role));\n    return user && user.roles && hasRole();\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService \n\nRoleService \n\n\n\nRoleModule\n\nRoleModule\n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/role/role.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Role]),\n  ],\n  providers: [RoleService],\n  exports: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/role/role.service.ts\n        \n\n            \n                Description\n            \n            \n                Role service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInfRole\n                            \n                            \n                                    Async\n                                getOneOrFailByRole\n                            \n                            \n                                    Async\n                                getOnlyRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRoleRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/role/role.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRoleRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfRole(idRole: number)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idRole\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneOrFailByRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneOrFailByRole(roleType: string)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOnlyRole\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOnlyRole(roles)\n                \n            \n\n\n            \n                \n                    Defined in src/role/role.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Role } from './roleEntity';\nimport { Repository } from 'typeorm';\n\n/**\n * Role service\n */\n@Injectable()\nexport class RoleService {\n\n  /**\n   *\n   * @param roleRoleRepository {Repository}\n   */\n  constructor(\n    @InjectRepository(Role)\n    private readonly roleRoleRepository: Repository,\n  ) {}\n\n  /**\n   * @param roleType\n   */\n  async getOneOrFailByRole(roleType: string) {\n    return await this.roleRoleRepository.findOneOrFail({\n      where: {\n        role: roleType,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`Role ${roleType} not found`);\n    });\n  }\n\n  /**\n   *\n   * @param idRole {number}\n   */\n  async getInfRole(idRole: number): Promise {\n    return await this.roleRoleRepository.createQueryBuilder()\n      .select('role')\n      .where(`id = :id`, { id: idRole })\n      .orWhere('id > :idSup', { idSup: idRole  })\n      .getRawMany();\n  }\n\n  /**\n   *\n   * @param roles\n   */\n  async getOnlyRole(roles): Promise {\n    return roles.map((role) => {\n      return role.role;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatsController.html":{"url":"controllers/StatsController.html","title":"controller - StatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stats\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/stats/stats.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('stats')\n@Controller('stats')\n@ApiBearerAuth()\n@UseGuards(AuthGuard('jwt'))\nexport class StatsController {\n  constructor(private readonly statsService: StatsService) {}\n\n  @Get()\n  async getStat() {\n    return await this.statsService.getStat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatsModule.html":{"url":"modules/StatsModule.html","title":"module - StatsModule","body":"\n                   \n\n\n\n\n    Modules\n    StatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_imports\n\n\n\ncluster_StatsModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\n\n\nPoiModule\n\nPoiModule\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\n\n\nTypeModule\n\nTypeModule\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            JoinTagPoiModule\n                        \n                        \n                            PercentTypeGreenScoreAndPoiModule\n                        \n                        \n                            PoiModule\n                        \n                        \n                            TagsModule\n                        \n                        \n                            TypeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StatsService } from './stats.service';\nimport { StatsController } from './stats.controller';\nimport { JoinTagPoiModule } from '../join-tag-poi/join-tag-poi.module';\nimport { PoiModule } from '../poi/poi.module';\nimport { CompanyModule } from '../company/company.module';\nimport { TypeModule } from '../type/type.module';\nimport { TagsModule } from '../tags/tags.module';\nimport { PercentTypeGreenScoreAndPoiModule } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.module';\n\n@Module({\n  imports: [JoinTagPoiModule, PoiModule, CompanyModule, TypeModule, TagsModule, PercentTypeGreenScoreAndPoiModule],\n  providers: [StatsService],\n  controllers: [StatsController],\n})\nexport class StatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getGreenScore\n                            \n                            \n                                    Async\n                                getStat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(joinTagPoiService: JoinTagPoiService, poiService: PoiService, companyService: CompanyService, typeService: TypeService, tagsService: TagsService, percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService)\n                    \n                \n                        \n                            \n                                Defined in src/stats/stats.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        joinTagPoiService\n                                                  \n                                                        \n                                                                        JoinTagPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        poiService\n                                                  \n                                                        \n                                                                        PoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeService\n                                                  \n                                                        \n                                                                        TypeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tagsService\n                                                  \n                                                        \n                                                                        TagsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        percentTypeGreenScoreAndPoiService\n                                                  \n                                                        \n                                                                        PercentTypeGreenScoreAndPoiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGreenScore()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStat()\n                \n            \n\n\n            \n                \n                    Defined in src/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PoiService } from '../poi/poi.service';\nimport { JoinTagPoiService } from '../join-tag-poi/join-tag-poi.service';\nimport { CompanyService } from '../company/company.service';\nimport { TypeService } from '../type/type.service';\nimport { TagsService } from '../tags/tags.service';\nimport { PercentTypeGreenScoreAndPoiService } from '../percent-type-green-score-and-poi/percent-type-green-score-and-poi.service';\n\n@Injectable()\nexport class StatsService {\n  constructor(\n    private readonly joinTagPoiService: JoinTagPoiService,\n    private readonly poiService: PoiService,\n    private readonly companyService: CompanyService,\n    private readonly typeService: TypeService,\n    private readonly tagsService: TagsService,\n    private readonly percentTypeGreenScoreAndPoiService: PercentTypeGreenScoreAndPoiService,\n  ) {}\n\n  private async getGreenScore(): Promise {\n    const nbGreenScore: number[] = [];\n    // tslint:disable-next-line:no-shadowed-variable\n    for (let range = 100; range >= 50; range -= 10) {\n      nbGreenScore.push(await this.percentTypeGreenScoreAndPoiService.countRangGreenScore(range, range - 10));\n    }\n    return nbGreenScore;\n  }\n\n  async getStat() {\n    const nbPoi = await this.poiService.countPoi();\n    const nbCompany = await this.companyService.countCompany();\n    const types = await this.typeService.getType();\n    await this.getGreenScore();\n    const companyTypePromise = types.map(async (type) => {\n      return {\n          companyType: type,\n          nbType: await this.companyService.countNbType(type),\n        };\n    });\n    const typesPoi = await this.poiService.getTypePoi();\n    const getTypePoiPromise = typesPoi.map(async (typePoi) => {\n      return {\n        typeName: typePoi,\n        nbType: await this.poiService.countType(typePoi),\n      };\n    });\n    return {\n      poi: {\n        nbPoi,\n        types: await Promise.all(getTypePoiPromise),\n      },\n      company: {\n        nbCompany,\n        companyType: await Promise.all(companyTypePromise),\n      },\n      greenScore: await this.getGreenScore(),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmitDto.html":{"url":"classes/SubmitDto.html","title":"class - SubmitDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmitDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/submitDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                idAnswer\n                            \n                            \n                                    Readonly\n                                idQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idAnswer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/submitDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idQuizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/submitDto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class SubmitDto {\n  @IsNumber()\n  @ApiProperty()\n  readonly idQuizz: number;\n\n  @IsNumber()\n  @ApiProperty()\n  readonly idAnswer: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tag.html":{"url":"classes/Tag.html","title":"class - Tag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                colorTag\n                            \n                            \n                                id\n                            \n                            \n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            colorTag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: '5EA565'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Tag {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  tag: string;\n\n  @Column({\n    default: '5EA565',\n  })\n  colorTag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto: TagsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n                                    \n                                                TagsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TagsDto } from './tagsDto';\nimport { TagsService } from './tags.service';\nimport { Tag } from './tagEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { exaToRgbaObject } from '../utils/function.utils';\n\n@ApiTags('tags')\n@ApiBearerAuth()\n@Controller('tags')\n@UseGuards(AuthGuard('jwt'))\nexport class TagsController {\n  constructor(private readonly tagsService: TagsService) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addTag(@Body() tagDto: TagsDto) {\n    const tag =  await this.tagsService.addTag(tagDto);\n    exaToRgbaObject(tag.colorTag, tag);\n    return tag;\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true}))\n  async deleteTag(@Param('id', new ParseIntPipe()) idTag: number) {\n    await this.tagsService.getOneTag(idTag);\n    return await this.tagsService.deleteTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async getOneTag(@Param('id', new ParseIntPipe()) idTag: number): Promise {\n    return await this.tagsService.getOneTag(idTag);\n  }\n\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTag(): Promise {\n    return await this.tagsService.getAllTag();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagsDto.html":{"url":"classes/TagsDto.html","title":"class - TagsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tagsDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TagsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tag\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tag\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'name of tag (ex: bio, vegan etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tags/tagsDto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TagsInterface } from './interfaces/tags.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TagsDto implements TagsInterface {\n  @ApiProperty({\n    description: 'name of tag (ex: bio, vegan etc...)',\n  })\n  @IsString()\n  readonly tag: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TagsInterface.html":{"url":"interfaces/TagsInterface.html","title":"interface - TagsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TagsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/interfaces/tags.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        tag\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tag\n                                    \n                                \n                                \n                                    \n                                        tag:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TagsInterface {\n  readonly tag: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nTagsService \n\nTagsService \n\n\n\nTagsModule\n\nTagsModule\n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TagsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagsService } from './tags.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { TagsController } from './tags.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Tag]),\n  ],\n  providers: [TagsService],\n  controllers: [TagsController],\n  exports: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTag\n                            \n                            \n                                    Async\n                                deleteTag\n                            \n                            \n                                    Async\n                                getAllTag\n                            \n                            \n                                    Async\n                                getOneTag\n                            \n                            \n                                    Async\n                                getTags\n                            \n                            \n                                    Async\n                                getTagsName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTag(tagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tagDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTag()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTag\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTag(idTag: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTag\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTags\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTags(idsTags: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTags\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTagsName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTagsName()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Tag } from './tagEntity';\nimport { Repository } from 'typeorm';\nimport { exaToRgbaObject, generateRandExaDecimalColor } from '../utils/function.utils';\n\n@Injectable()\nexport class TagsService {\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: Repository,\n  ) {}\n\n  async addTag(tagDto) {\n    tagDto.colorTag = generateRandExaDecimalColor();\n    return await this.tagRepository.save(tagDto);\n  }\n\n  async deleteTag(idTag: number) {\n    return await this.tagRepository.delete(idTag);\n  }\n\n  async getAllTag(): Promise {\n    const tags =  await this.tagRepository.find();\n    tags.forEach((tag) => {\n      exaToRgbaObject(tag.colorTag, tag);\n    });\n    return tags;\n  }\n\n  async getOneTag(idTag: number): Promise {\n    return await this.tagRepository.findOneOrFail(idTag)\n      .catch(() => {\n        throw new NotFoundException(`Tag with id ${idTag} not found`);\n      });\n  }\n\n  async getTags(idsTags: number[]) {\n    return await this.tagRepository.findByIds(idsTags);\n  }\n\n  async getTagsName() {\n    const tags = await this.getAllTag();\n    return tags.map((tag) => {\n      return tag.tag;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestStrategy.html":{"url":"classes/TestStrategy.html","title":"class - TestStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/test.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/test.strategy.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/test.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport {ExtractJwt, Strategy} from 'passport-jwt';\nimport { UnauthorizedException } from '@nestjs/common';\n\nexport class TestStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: true,\n      secretOrKey: process.env.JWT_TOKEN || 'hello',\n    });\n  }\n\n  async validate(payload) {\n    if (!payload.userId) {\n      throw new UnauthorizedException();\n    }\n    // tslint:disable-next-line:no-console\n    // return result;\n    return {\n      user: 'toto',\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThemeAndQuizzDto.html":{"url":"classes/ThemeAndQuizzDto.html","title":"class - ThemeAndQuizzDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThemeAndQuizzDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/themeAndQuizzDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                infoQuizz\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            infoQuizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [QuizzAndQuestionDto]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDefined()@ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeAndQuizzDto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ThemeQuizzDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDefined()@ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeAndQuizzDto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDefined, IsString, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { QuizzAndQuestionDto } from '../quizz/quizzAndQuestionDto';\nimport { ThemeQuizzDto } from './themeQuizzDto';\n\nexport class ThemeAndQuizzDto {\n\n  @ApiProperty()\n  @IsDefined()\n  @ValidateNested()\n  @Type(() => ThemeQuizzDto)\n  readonly theme: ThemeQuizzDto;\n\n  @ApiProperty()\n  @IsDefined()\n  @ValidateNested()\n  @Type(() => QuizzAndQuestionDto)\n  readonly infoQuizz: [QuizzAndQuestionDto];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThemeQuizz.html":{"url":"classes/ThemeQuizz.html","title":"class - ThemeQuizz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThemeQuizz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/themeQuizzEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dateCreate\n                            \n                            \n                                    Readonly\n                                duration\n                            \n                            \n                                id\n                            \n                            \n                                imgBackground\n                            \n                            \n                                publicationDate\n                            \n                            \n                                    Readonly\n                                reward\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 2})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgBackground\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true, default: undefined, length: 300})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'timestamp', nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            reward\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzEntity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('theme_quizz')\nexport class ThemeQuizz {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 100,\n  })\n  theme: string;\n\n  @Column({\n    nullable: true,\n    default: null,\n    length: 300,\n  })\n  imgBackground: string;\n\n  @Column({\n    type: 'timestamp',\n  })\n  dateCreate: string;\n\n  @Column({\n    type: 'timestamp',\n    nullable: true,\n    default: null,\n  })\n  publicationDate: string;\n\n  @Column({\n    default: 100,\n  })\n  readonly reward: number;\n\n  @Column({\n    default: 2,\n  })\n  readonly duration: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ThemeQuizzController.html":{"url":"controllers/ThemeQuizzController.html","title":"controller - ThemeQuizzController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ThemeQuizzController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/theme-quizz.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                theme-quizz\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addThemeQuizz\n                            \n                            \n                                    Async\n                                deleteThemeQuizz\n                            \n                            \n                                    Async\n                                getQuestionTheme\n                            \n                            \n                                    Async\n                                getTheme\n                            \n                            \n                                    Async\n                                submitAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addThemeQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addThemeQuizz(themeAndQuizzDto: ThemeAndQuizzDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    themeAndQuizzDto\n                                    \n                                                ThemeAndQuizzDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteThemeQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteThemeQuizz(idThemeQuizz: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(RoleGuard)@Roles('admin')\n                \n            \n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idThemeQuizz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getQuestionTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuestionTheme(idTheme: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('question/:idTheme')@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTheme\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(RoleGuard)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submitAnswer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitAnswer(validationDto: ValidationDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('submit')@UseGuards(RoleGuard)@UsePipes(ValidationPipe)@Roles('user')\n                \n            \n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    validationDto\n                                    \n                                                ValidationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, ParseIntPipe, Post, Request, Put, UseGuards, UsePipes, ValidationPipe, Delete } from '@nestjs/common';\nimport { ThemeQuizzService } from './theme-quizz.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RoleGuard } from '../guard/role.guard';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Roles } from '../decorator/role.decorator';\nimport { ThemeQuizzDto } from './themeQuizzDto';\nimport { ThemeAndQuizzDto } from './themeAndQuizzDto';\nimport { ThemeQuizz } from './themeQuizzEntity';\nimport { ValidationDto } from './validationDto';\n\n@ApiTags('theme-quizz')\n@ApiBearerAuth()\n@Controller('theme-quizz')\n@UseGuards(AuthGuard('jwt'))\nexport class ThemeQuizzController {\n  constructor(\n    private readonly themeQuizzService: ThemeQuizzService,\n  ) {}\n\n  @Post()\n  @UsePipes(new ValidationPipe())\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async addThemeQuizz(@Body() themeAndQuizzDto: ThemeAndQuizzDto) {\n    return await this.themeQuizzService.addThemeAndQuizz(themeAndQuizzDto);\n  }\n\n  @Get()\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getTheme(@Request() req): Promise {\n    return await this.themeQuizzService.getTheme(req.user.user);\n  }\n\n  @Get('question/:idTheme')\n  @UseGuards(RoleGuard)\n  @Roles('user')\n  async getQuestionTheme(@Param('idTheme', new ParseIntPipe()) idTheme: number) {\n    return await this.themeQuizzService.getQuestionTheme(idTheme);\n  }\n\n  @Put('submit')\n  @UseGuards(RoleGuard)\n  @UsePipes(ValidationPipe)\n  @Roles('user')\n  async submitAnswer(@Body() validationDto: ValidationDto, @Request() req) {\n    return await this.themeQuizzService.checkAnswers(validationDto.answers,\n      validationDto.idThemeQuizz, req.user.user);\n  }\n\n  @Delete(':id')\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  async deleteThemeQuizz(@Param('id', new ParseIntPipe()) idThemeQuizz: number) {\n    return await this.themeQuizzService.deleteThemeQuizz(idThemeQuizz);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThemeQuizzDto.html":{"url":"classes/ThemeQuizzDto.html","title":"class - ThemeQuizzDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThemeQuizzDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/themeQuizzDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                imgBackground\n                            \n                            \n                                    Readonly\n                                    Optional\n                                publicationDate\n                            \n                            \n                                    Readonly\n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            imgBackground\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzDto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            publicationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/themeQuizzDto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDefined, IsString, ValidateNested } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { QuizzAndQuestionDto } from '../quizz/quizzAndQuestionDto';\nimport { Type } from 'class-transformer';\n\nexport class ThemeQuizzDto {\n  @IsString()\n  @ApiProperty()\n  readonly theme: string;\n\n  @IsString()\n  @ApiProperty()\n  readonly imgBackground: string;\n\n  @IsString()\n  @ApiProperty()\n  readonly publicationDate?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemeQuizzModule.html":{"url":"modules/ThemeQuizzModule.html","title":"module - ThemeQuizzModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemeQuizzModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThemeQuizzModule\n\n\n\ncluster_ThemeQuizzModule_imports\n\n\n\ncluster_ThemeQuizzModule_providers\n\n\n\n\nJoinUserThemeQuizzModule\n\nJoinUserThemeQuizzModule\n\n\n\nThemeQuizzModule\n\nThemeQuizzModule\n\nThemeQuizzModule -->\n\nJoinUserThemeQuizzModule->ThemeQuizzModule\n\n\n\n\n\nQuestionQuizzModule\n\nQuestionQuizzModule\n\nThemeQuizzModule -->\n\nQuestionQuizzModule->ThemeQuizzModule\n\n\n\n\n\nQuizzModule\n\nQuizzModule\n\nThemeQuizzModule -->\n\nQuizzModule->ThemeQuizzModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nThemeQuizzModule -->\n\nUserModule->ThemeQuizzModule\n\n\n\n\n\nThemeQuizzService\n\nThemeQuizzService\n\nThemeQuizzModule -->\n\nThemeQuizzService->ThemeQuizzModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/theme-quizz/theme-quizz.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemeQuizzService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ThemeQuizzController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JoinUserThemeQuizzModule\n                        \n                        \n                            QuestionQuizzModule\n                        \n                        \n                            QuizzModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ThemeQuizzService } from './theme-quizz.service';\nimport { ThemeQuizzController } from './theme-quizz.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ThemeQuizz } from './themeQuizzEntity';\nimport { QuizzModule } from '../quizz/quizz.module';\nimport { QuestionQuizzModule } from '../question-quizz/question-quizz.module';\nimport { UserModule } from '../user/user.module';\nimport { JoinUserThemeQuizzModule } from '../join-user-theme-quizz/join-user-theme-quizz.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([ThemeQuizz]),\n    QuizzModule,\n    QuestionQuizzModule,\n    UserModule,\n    JoinUserThemeQuizzModule,\n  ],\n  providers: [ThemeQuizzService],\n  controllers: [ThemeQuizzController],\n})\nexport class ThemeQuizzModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeQuizzService.html":{"url":"injectables/ThemeQuizzService.html","title":"injectable - ThemeQuizzService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeQuizzService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/theme-quizz.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addThemeAndQuizz\n                            \n                            \n                                    Async\n                                checkAnswers\n                            \n                            \n                                    Async\n                                deleteThemeQuizz\n                            \n                            \n                                    Async\n                                getOneTheme\n                            \n                            \n                                    Async\n                                getQuestionTheme\n                            \n                            \n                                    Async\n                                getTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(themeQuizzRepository: Repository, quizzService: QuizzService, questionQuizzService: QuestionQuizzService, userService: UserService, joinUserThemeQuizzService: JoinUserThemeQuizzService)\n                    \n                \n                        \n                            \n                                Defined in src/theme-quizz/theme-quizz.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        themeQuizzRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizzService\n                                                  \n                                                        \n                                                                        QuizzService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionQuizzService\n                                                  \n                                                        \n                                                                        QuestionQuizzService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        joinUserThemeQuizzService\n                                                  \n                                                        \n                                                                        JoinUserThemeQuizzService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addThemeAndQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addThemeAndQuizz(themeAndQuizzDto: ThemeAndQuizzDto)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    themeAndQuizzDto\n                                    \n                                                ThemeAndQuizzDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkAnswers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkAnswers(answers, idThemeQuizz: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answers\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idThemeQuizz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteThemeQuizz\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteThemeQuizz(idThemeQuizz: number)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idThemeQuizz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTheme(idTheme: number)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTheme\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getQuestionTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getQuestionTheme(idTheme: number)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTheme\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheme(user)\n                \n            \n\n\n            \n                \n                    Defined in src/theme-quizz/theme-quizz.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { ThemeQuizz } from './themeQuizzEntity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ThemeAndQuizzDto } from './themeAndQuizzDto';\nimport { QuizzService } from '../quizz/quizz.service';\nimport { QuestionQuizzService } from '../question-quizz/question-quizz.service';\nimport { UserService } from '../user/user.service';\nimport { JoinUserThemeQuizzService } from '../join-user-theme-quizz/join-user-theme-quizz.service';\n\n@Injectable()\nexport class ThemeQuizzService {\n  constructor(\n    @InjectRepository(ThemeQuizz)\n    private readonly themeQuizzRepository: Repository,\n    private readonly quizzService: QuizzService,\n    private readonly questionQuizzService: QuestionQuizzService,\n    private readonly userService: UserService,\n    private readonly joinUserThemeQuizzService: JoinUserThemeQuizzService,\n  ) {}\n\n  async addThemeAndQuizz(themeAndQuizzDto: ThemeAndQuizzDto) {\n    const {theme, infoQuizz} = themeAndQuizzDto;\n    const themeEntity = await this.themeQuizzRepository.save(theme);\n    await Promise.all(infoQuizz.map(async (quizz) => {\n      const addThemeToQuizz: any = quizz;\n      addThemeToQuizz.question.themeQuizz = themeEntity;\n      return await this.quizzService.addQuizz(addThemeToQuizz);\n    }));\n    return themeEntity;\n  }\n\n  async getTheme(user): Promise {\n    const quizzs = await this.themeQuizzRepository.find();\n    return await Promise.all(quizzs.map(async (quizz: any) => {\n      quizz.answered = !!(await this.joinUserThemeQuizzService.getByUserAndThemeQuizz(user, quizz));\n      return quizz;\n    }));\n  }\n\n  async getOneTheme(idTheme: number): Promise {\n    return await this.themeQuizzRepository.findOneOrFail({\n      where: {\n        id: idTheme,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`theme with id ${idTheme} Not Found`);\n    });\n  }\n\n  async getQuestionTheme(idTheme: number) {\n    const theme = await this.getOneTheme(idTheme);\n    return await this.quizzService.getQuizzByTheme(theme);\n  }\n\n  async checkAnswers(answers, idThemeQuizz: number, user) {\n    const themeQuizz = await this.getOneTheme(idThemeQuizz);\n    if (await this.joinUserThemeQuizzService.getByUserAndThemeQuizz(user, themeQuizz)) {\n      throw new BadRequestException('Vous avez déjà répondu a ce quizz');\n    }\n    const quizzs = await this.quizzService.getQuizzByTheme(themeQuizz);\n    let goodAnswer = 0;\n    let checkNbAnswer = 0;\n    let gain = themeQuizz.reward;\n    const checkAnswer = await Promise.all(answers.map(async (answer, i) => {\n      const answ = await this.questionQuizzService.checkAnswer(answer.idQuizz, answer.idAnswer);\n      if (answ.goodAnswer) {\n        goodAnswer++;\n      } else {\n        gain -= themeQuizz.reward / quizzs.length;\n      }\n      checkNbAnswer++;\n      return answ;\n    }));\n    if (goodAnswer > quizzs.length || checkNbAnswer !== quizzs.length) {\n      throw new ConflictException('Bien essayé petit tricheur :)');\n    }\n    await this.userService.addCrystal(gain, user);\n    await this.joinUserThemeQuizzService.addJoinUserThemeQuizz(user, themeQuizz);\n    return {\n      totalAnswer: quizzs.length,\n      goodAnswer,\n      reward: gain,\n    };\n  }\n\n  async deleteThemeQuizz(idThemeQuizz: number) {\n    return await this.themeQuizzRepository.delete(idThemeQuizz);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Type.html":{"url":"classes/Type.html","title":"class - Type","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Type\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 25})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeEntity.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class Type {\n\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 25,\n  })\n  type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeController.html":{"url":"controllers/TypeController.html","title":"controller - TypeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type\n            \n\n            \n                Description\n            \n            \n                type controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                delteType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto: TypeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n                                    \n                                                TypeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delteType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('one/:id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type/type.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { TypeDto } from './typeDto';\nimport { Type } from './typeEntity';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Roles } from '../decorator/role.decorator';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { type } from 'os';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * type controller\n */\n@ApiBearerAuth()\n@ApiTags('type')\n@Controller('type')\n@UseGuards(AuthGuard('jwt'))\nexport class TypeController {\n  /**\n   *\n   * @param typeService\n   */\n  constructor(private readonly typeService: TypeService) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe())\n  async addType(@Body() typeDto: TypeDto) {\n    return await this.typeService.addType(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('one/:id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async getOneType(@Param('id', new ParseIntPipe()) idType: number): Promise {\n    return await this.typeService.getOneType(idType);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getTypes() {\n    return await this.typeService.getType();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({transform: true}))\n  async delteType(@Param('id', new ParseIntPipe()) idType: number) {\n    await this.typeService.getOneType(idType);\n    return await this.typeService.deleteType(idType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeDto.html":{"url":"classes/TypeDto.html","title":"class - TypeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/typeDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Type of company (ex: Co-Working, PME, etc...)'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type/typeDto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeInterface } from './interface/type.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeDto implements TypeInterface {\n\n  @ApiProperty({\n    description: 'Type of company (ex: Co-Working, PME, etc...)',\n  })\n  @IsString()\n  readonly type: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScore.html":{"url":"classes/TypeGreenScore.html","title":"class - TypeGreenScore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Column({length: 70})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreEntity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Entity()\nexport class TypeGreenScore {\n  @ApiProperty()\n  @PrimaryGeneratedColumn()\n  readonly id: number;\n\n  @ApiProperty()\n  @Column({\n    length: 70,\n  })\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController.html":{"url":"controllers/TypeGreenScoreController.html","title":"controller - TypeGreenScoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@ApiBearerAuth()\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TypeGreenScoreController-1.html":{"url":"controllers/TypeGreenScoreController-1.html","title":"controller - TypeGreenScoreController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TypeGreenScoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                type-green-score-controller\n            \n\n            \n                Description\n            \n            \n                Type green score controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTypeGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllTypeGreenScore\n                            \n                            \n                                    Async\n                                getOneTypeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addTypeGreenScore(typeGreenScoreAndPoiDto: TypeGreenScoreDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreAndPoiDto\n                                    \n                                                TypeGreenScoreDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@UsePipes(new ValidationPipe())@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTypeGreenScore()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get()\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneTypeGreenScore(idTypeGreenScore: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RoleGuard)@Roles('admin')@Get('/one/:id')\n                \n            \n\n            \n                \n                    Defined in src/type-green-score/type-green-score.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { RoleGuard } from '../guard/role.guard';\nimport { Role } from '../role/roleEntity';\nimport { TypeGreenScoreDto } from './typeGreenScoreDto';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Roles } from '../decorator/role.decorator';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\n\n/**\n * Type green score controller\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('type-green-score')\n\n@ApiTags('type-green-score')\n@ApiBearerAuth()\n@Controller('type-green-score-controller')\nexport class TypeGreenScoreController {\n  /**\n   *\n   * @param typeGreenScoreService\n   */\n  constructor(readonly typeGreenScoreService: TypeGreenScoreService) {}\n\n  /**\n   *\n   * @param typeGreenScoreAndPoiDto\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addTypeGreenScore(@Body() typeGreenScoreAndPoiDto: TypeGreenScoreDto) {\n    return await this.typeGreenScoreService.addGreenScore(typeGreenScoreAndPoiDto);\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get('/one/:id')\n  async getOneTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number): Promise {\n    return await this.typeGreenScoreService.getType(idTypeGreenScore);\n  }\n\n  /**\n   *\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @Get()\n  async getAllTypeGreenScore(): Promise {\n    return await this.typeGreenScoreService.getAllType();\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  @UseGuards(RoleGuard)\n  @Roles('admin')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Delete(':id')\n  async deleteTypeGreenScore(@Param('id', new ParseIntPipe()) idTypeGreenScore: number) {\n    return await this.typeGreenScoreService.deleteTypeGreenScore(idTypeGreenScore);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TypeGreenScoreDto.html":{"url":"classes/TypeGreenScoreDto.html","title":"class - TypeGreenScoreDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TypeGreenScoreDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/typeGreenScoreDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            TypeGreenScoreInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                typeGreenScore\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            typeGreenScore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/type-green-score/typeGreenScoreDto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TypeGreenScoreInterface } from './interfaces/type-green-score.interface';\nimport { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class TypeGreenScoreDto implements TypeGreenScoreInterface{\n  @ApiProperty()\n  @IsString()\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeGreenScoreInterface.html":{"url":"interfaces/TypeGreenScoreInterface.html","title":"interface - TypeGreenScoreInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeGreenScoreInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/interfaces/type-green-score.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        typeGreenScore\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        typeGreenScore\n                                    \n                                \n                                \n                                    \n                                        typeGreenScore:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeGreenScoreInterface {\n  readonly typeGreenScore: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeGreenScoreModule.html":{"url":"modules/TypeGreenScoreModule.html","title":"module - TypeGreenScoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeGreenScoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type-green-score/type-green-score.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeGreenScoreController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeGreenScoreService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeGreenScoreService } from './type-green-score.service';\nimport { TypeGreenScoreController } from './type-green-score.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([TypeGreenScore]),\n  ],\n  providers: [TypeGreenScoreService],\n  controllers: [TypeGreenScoreController],\n  exports: [TypeGreenScoreService],\n})\nexport class TypeGreenScoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeGreenScoreService.html":{"url":"injectables/TypeGreenScoreService.html","title":"injectable - TypeGreenScoreService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeGreenScoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-green-score/type-green-score.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addGreenScore\n                            \n                            \n                                    Async\n                                deleteTypeGreenScore\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getByIds\n                            \n                            \n                                    Async\n                                getType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeGreenScoreRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type-green-score/type-green-score.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeGreenScoreRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGreenScore(typeGreenScoreDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeGreenScoreDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteTypeGreenScore\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTypeGreenScore(idTypeGreenScore)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypeGreenScore\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByIds\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIds(idTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type-green-score/type-green-score.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { TypeGreenScore } from './typeGreenScoreEntity';\nimport { Repository } from 'typeorm';\nimport { PercentAndIdTag } from '../poi/percentAndIdTag';\n\n@Injectable()\nexport class TypeGreenScoreService {\n  /**\n   *\n   * @param typeGreenScoreRepository\n   */\n  constructor(\n    @InjectRepository(TypeGreenScore)\n    private readonly typeGreenScoreRepository: Repository,\n  ) {}\n\n  /**\n   *\n   *\n   * @param typeGreenScoreDto\n   */\n  async addGreenScore(typeGreenScoreDto) {\n    return await this.typeGreenScoreRepository.save(typeGreenScoreDto);\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeGreenScoreRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getType(idType: number): Promise {\n    return await this.typeGreenScoreRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type Green Score With id ${idType} Not Found`);\n      });\n  }\n\n  /**\n   *\n   * @param idTypeGreenScore\n   */\n  async deleteTypeGreenScore(idTypeGreenScore) {\n    const typeGreenScore = await this.getType(idTypeGreenScore);\n    return await this.typeGreenScoreRepository.delete(typeGreenScore);\n  }\n\n  /**\n   *\n   * @param idTypes\n   */\n  async getByIds(idTypes: number[]) {\n    return await this.typeGreenScoreRepository.findByIds(idTypes);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TypeInterface.html":{"url":"interfaces/TypeInterface.html","title":"interface - TypeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TypeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/interface/type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TypeInterface {\n  readonly type: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeModule.html":{"url":"modules/TypeModule.html","title":"module - TypeModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\n\nTypeService \n\nTypeService \n\n\n\nTypeModule\n\nTypeModule\n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/type/type.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TypeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TypeController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TypeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeService } from './type.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { TypeController } from './type.controller';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Type]),\n  ],\n  providers: [TypeService],\n  controllers: [TypeController],\n  exports: [TypeService],\n})\nexport class TypeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeService.html":{"url":"injectables/TypeService.html","title":"injectable - TypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type/type.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addType\n                            \n                            \n                                    Async\n                                deleteType\n                            \n                            \n                                    Async\n                                getAllType\n                            \n                            \n                                    Async\n                                getOneType\n                            \n                            \n                                    Async\n                                getType\n                            \n                            \n                                    Async\n                                getTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(typeRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/type/type.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        typeRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addType(typeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    typeDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOneType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOneType(idType: number)\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idType\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getType()\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypes(idsTypes: number[])\n                \n            \n\n\n            \n                \n                    Defined in src/type/type.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idsTypes\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Type } from './typeEntity';\nimport { Repository } from 'typeorm';\nimport { TypeEnum } from '../company/enum/type.enum';\nimport { getEnumKey } from '../utils/function.utils';\n\n@Injectable()\nexport class TypeService {\n  /**\n   *\n   * @param typeRepository\n   */\n  constructor(\n    @InjectRepository(Type)\n    private readonly typeRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param typeDto\n   */\n  async addType(typeDto) {\n    return await this.typeRepository.save(typeDto);\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async getOneType(idType: number): Promise {\n    return await this.typeRepository.findOneOrFail(idType)\n      .catch(() => {\n        throw new NotFoundException(`Type with id ${idType} not found`);\n      });\n  }\n\n  /**\n   *\n   */\n  async getAllType(): Promise {\n    return await this.typeRepository.find();\n  }\n\n  /**\n   *\n   * @param idType\n   */\n  async deleteType(idType: number) {\n    return await this.typeRepository.delete(idType);\n  }\n\n  /**\n   *\n   * @param idsTypes\n   */\n  async getTypes(idsTypes: number[]): Promise {\n      return await this.typeRepository.findByIds(idsTypes);\n  }\n\n  async getType() {\n    return await getEnumKey(TypeEnum);\n    // const types = TypeEnum;\n    // const stringType: string[] = [];\n    // for (const n in types) {\n    //   if (typeof types[n] === 'string') {\n    //     stringType.push(types[n]);\n    //   }\n    // }\n    // return stringType;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userEntity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                company\n                            \n                            \n                                crystal\n                            \n                            \n                                dateSignup\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                mail\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            company\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Company\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE', nullable: true})@JoinColumn({name: 'companyId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            crystal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateSignup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 255, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 200})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne(undefined, undefined, {onDelete: 'CASCADE', onUpdate: 'CASCADE'})@JoinColumn({name: 'roleId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userEntity.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Role } from '../role/roleEntity';\nimport { Company } from '../company/companyEntity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 255,\n    unique: true,\n  })\n  mail: string;\n\n  @Column({\n    length: 50,\n  })\n  firstName: string;\n\n  @Column({\n    length: 50,\n  })\n  lastName: string;\n\n  @Column({\n    length: 200,\n  })\n  password: string;\n\n  @ManyToOne(type => Role, (role) => role.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n  })\n  @JoinColumn({\n    name: 'roleId',\n  })\n  role: Role;\n\n  @ManyToOne(type => Company, (company) => company.id, {\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE',\n    nullable: true,\n  })\n  @JoinColumn({\n    name: 'companyId',\n  })\n  company: Company;\n\n  @Column({\n    default: 0,\n  })\n  crystal: number;\n\n  @CreateDateColumn()\n  dateSignup: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserAppModule.html":{"url":"modules/UserAppModule.html","title":"module - UserAppModule","body":"\n                   \n\n\n\n\n    Modules\n    UserAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\n\nUserAppService\n\nUserAppService\n\n\n\nUserAppModule\n\nUserAppModule\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user-app/user-app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserAppService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserAppService } from './user-app.service';\n\n@Module({\n  providers: [UserAppService]\n})\nexport class UserAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAppService.html":{"url":"injectables/UserAppService.html","title":"injectable - UserAppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserAppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user-app/user-app.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class UserAppService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n            \n                Description\n            \n            \n                User controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addAppUser\n                            \n                            \n                                    Async\n                                addEm\n                            \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                deleteUer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addAppUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAppUser(appUserDto: AppUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('app/register')@Redirect('/auth/login', 308)@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    appUserDto\n                                    \n                                                AppUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addEm\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addEm(em: number, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test/:em')@UseGuards(undefined)@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    em\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:23\n                \n            \n\n\n            \n                \n                    method call to add new user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteUer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUer(idUser: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePipes(new ValidationPipe())\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n                    method to delete a user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, ParseIntPipe, Post, UseGuards, UsePipes, ValidationPipe, Request, Redirect } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserDto } from './userDto';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AppUserDto } from './appUserDto';\nimport { AuthGuard } from '@nestjs/passport';\n\n/**\n * User controller\n */\n@ApiBearerAuth()\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(readonly userService: UserService) {}\n\n  /**\n   * method call to add new user\n   * @param userDto\n   */\n  @Post()\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async addUser(@Body() userDto: UserDto) {\n    return this.userService.addUser(userDto);\n  }\n\n  /**\n   * method to delete a user\n   * @param idUser\n   */\n  @Delete(':id')\n  @UsePipes(new ValidationPipe({ transform: true }))\n  async deleteUer(@Param('id', new ParseIntPipe()) idUser: number) {\n    return 'deletUser';\n  }\n\n  @Post('app/register')\n  @Redirect('/auth/login', 308)\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addAppUser(@Body() appUserDto: AppUserDto) {\n    return await this.userService.addUserApp(appUserDto);\n  }\n\n  @Get('test/:em')\n  @UseGuards(AuthGuard('jwt'))\n  @UsePipes(new ValidationPipe({transform: true}))\n  async addEm(@Param('em', new ParseIntPipe()) em: number, @Request() user) {\n    return await this.userService.addCrystal(em, user.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/userDto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            UserInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                mail\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'first name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'last name of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'email of user'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'password of user'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'preset role user', enum: RoleEnum})@IsEnum(RoleEnum)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/user/userDto.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './interfaces/user.interface';\nimport { IsEmail, IsEnum, IsString } from 'class-validator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UserDto implements UserInterface {\n  @ApiProperty({\n    description: 'first name of user',\n  })\n  @IsString()\n  readonly firstName: string;\n\n  @ApiProperty({\n    description: 'last name of user',\n  })\n  @IsString()\n  readonly lastName: string;\n\n  @ApiProperty({\n    description: 'email of user',\n  })\n  @IsEmail()\n  readonly mail: string;\n\n  @ApiProperty({\n    description: 'password of user',\n  })\n  @IsString()\n  readonly password: string;\n\n  @ApiProperty({\n    description: 'preset role user',\n    enum: RoleEnum,\n  })\n  @IsEnum(RoleEnum)\n  readonly role: string;\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/interfaces/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstName\n                                \n                                \n                                        lastName\n                                \n                                \n                                        mail\n                                \n                                \n                                        password\n                                \n                                \n                                        role\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                    \n                                \n                                \n                                    \n                                        mail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserInterface {\n  readonly mail: string;\n  readonly firstName: string;\n  readonly lastName: string;\n  readonly password: string;\n  readonly role: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCompanyModule->UserModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CompanyModule\n                        \n                        \n                            RoleModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { RoleModule } from '../role/role.module';\nimport { CompanyModule } from '../company/company.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    RoleModule,\n    CompanyModule,\n  ],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                USER_ROLE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addCrystal\n                            \n                            \n                                    Async\n                                addUser\n                            \n                            \n                                    Async\n                                addUserApp\n                            \n                            \n                                    Async\n                                findEmail\n                            \n                            \n                                    Private\n                                    Async\n                                getDomainMail\n                            \n                            \n                                    Async\n                                getEmerald\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserByMail\n                            \n                            \n                                    Async\n                                hashPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, roleService: RoleService, companyService: CompanyService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        companyService\n                                                  \n                                                        \n                                                                        CompanyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addCrystal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addCrystal(crystal: number, user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    crystal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser(userDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            addUserApp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserApp(userAppDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userAppDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEmail(mail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getDomainMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDomainMail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEmerald\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmerald(user)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserByMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByMail(eMail: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eMail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            USER_ROLE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'user'\n                        \n                    \n                        \n                            \n                                    Defined in src/user/user.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from './userEntity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { RoleService } from '../role/role.service';\nimport { Role } from '../role/roleEntity';\nimport { CompanyService } from '../company/company.service';\n\n@Injectable()\nexport class UserService {\n   private USER_ROLE = 'user';\n\n  /**\n   *\n   * @param userRepository\n   * @param roleService\n   * @param companyService\n   */\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly roleService: RoleService,\n    private readonly companyService: CompanyService,\n  ) {}\n\n  /**\n   *\n   * @param password\n   */\n  async hashPassword(password: string): Promise {\n    const saltRounds = 10;\n    return await bcrypt.hash(password, saltRounds);\n  }\n\n  /**\n   *\n   * @param userDto\n   */\n  async addUser(userDto) {\n    const user = userDto;\n    user.password = await this.hashPassword(user.password);\n    user.role = await this.roleService.getOneOrFailByRole(user.role);\n    return this.userRepository.save(user);\n  }\n\n  /**\n   *\n   * @param eMail\n   */\n  async getUserByMail(eMail: string) {\n    return this.userRepository.findOneOrFail({\n      where: {\n        mail: eMail,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`User ${eMail} not found`);\n    });\n  }\n\n  async findEmail(mail: string) {\n    return await this.userRepository.findOne({\n      where: {\n        mail,\n      },\n    });\n  }\n\n  /**\n   *\n   * @param userId\n   */\n  async getUser(userId: number) {\n    return await this.userRepository.findOneOrFail(userId, {\n      relations: ['role', 'company'],\n    })\n      .catch(() => {\n        throw new NotFoundException(`Utilisateur ${userId}  inconnu`);\n      });\n  }\n\n  private async getDomainMail(email: string) {\n    return email.split('@')[1];\n  }\n\n  async addUserApp(userAppDto) {\n    userAppDto.role = await this.roleService.getOneOrFailByRole(this.USER_ROLE);\n    userAppDto.company = await this.companyService\n      .getCompanyByDomainMail(await this.getDomainMail(userAppDto.username));\n    userAppDto.password = await this.hashPassword(userAppDto.password);\n    userAppDto.mail = userAppDto.username.trim().toLowerCase();\n    if (await this.findEmail(userAppDto.mail)) {\n      throw new ConflictException('Cette adresse mail existe déjà');\n    }\n    const {password, ...addData} = await this.userRepository.save(userAppDto);\n    return addData;\n  }\n\n  async getEmerald(user) {\n    return await this.userRepository.findOneOrFail({\n      select: ['crystal'],\n      where: {\n        id: user.id,\n      },\n    }).catch(() => {\n      throw new NotFoundException(`Utilisateur ${user.id} non trouvé`);\n    });\n  }\n\n  async addCrystal(crystal: number, user) {\n    const currentCrystal = await this.getEmerald(user);\n    const totalCrystal: number = currentCrystal.crystal + crystal;\n    const toto = await this.userRepository.createQueryBuilder()\n      .update(User)\n      .set({crystal: totalCrystal})\n      .where('id = :id', {id: user.id})\n      .execute();\n    return totalCrystal;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationDto.html":{"url":"classes/ValidationDto.html","title":"class - ValidationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/theme-quizz/validationDto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                    Readonly\n                                idThemeQuizz\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         [SubmitDto]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsDefined()@ValidateNested()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/validationDto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            idThemeQuizz\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/theme-quizz/validationDto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SubmitDto } from './submitDto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsNumber, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class ValidationDto {\n  @IsNumber()\n  @ApiProperty()\n  readonly idThemeQuizz: number;\n\n  @ApiProperty()\n  @IsDefined()\n  @ValidateNested()\n  @Type(() => SubmitDto)\n  answers: [SubmitDto];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/access-token.ts\n            \n            class\n            AccessToken\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/auth/interfaces/access-token.interfaces.ts\n            \n            interface\n            AccessTokenInterfaces\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/auth/test.strategy.ts\n            \n            class\n            TestStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/challenge/challenge.controller.ts\n            \n            controller\n            ChallengeController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/challenge/challenge.service.ts\n            \n            injectable\n            ChallengeService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/challenge/challengeDto.ts\n            \n            class\n            ChallengeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/challenge/challengeEntity.ts\n            \n            class\n            Challenge\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/company/companyDto.ts\n            \n            injectable\n            CompanyDto\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/company/companyEntity.ts\n            \n            class\n            Company\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                src/company/interface/company.interface.ts\n            \n            interface\n            CompanyInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/decorator/role.decorator.ts\n            \n            variable\n            Roles\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.controller.ts\n            \n            controller\n            GreenScoreController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/green-score/green-score.service.ts\n            \n            injectable\n            GreenScoreService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/img-poi/img-poi.service.ts\n            \n            injectable\n            ImgPoiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/img-poi/imgPoiDto.ts\n            \n            class\n            ImgPoiDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/img-poi/imgPoiEntity.ts\n            \n            class\n            ImgPoi\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/interceptor/entity-type.interceptor.ts\n            \n            injectable\n            EntityTypeInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/join-tag-poi/join-tag-poi.service.ts\n            \n            injectable\n            JoinTagPoiService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/join-tag-poi/joinTagPoiEntity.ts\n            \n            class\n            JoinTagPoiEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/join-user-challenge/join-user-challenge.service.ts\n            \n            injectable\n            JoinUserChallengeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/join-user-challenge/joinUserChallengeDto.ts\n            \n            class\n            JoinUserChallengeDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/join-user-challenge/joinUserChallengeEntity.ts\n            \n            class\n            JoinUserChallenge\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/join-user-poi/join-user-poi.interface.ts\n            \n            interface\n            JoinUserPoiInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/join-user-poi/join-user-poi.service.ts\n            \n            injectable\n            JoinUserPoiService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/join-user-poi/joinUserPoiDto.ts\n            \n            class\n            JoinUserPoiDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/join-user-poi/joinUserPoiEntity.ts\n            \n            class\n            JoinUserPoi\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/join-user-quizz/join-user-quizz.service.ts\n            \n            injectable\n            JoinUserQuizzService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/join-user-quizz/joinUserQuizzEntity.ts\n            \n            class\n            JoinUserQuzz\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/join-user-theme-quizz/join-user-theme-quizz.service.ts\n            \n            injectable\n            JoinUserThemeQuizzService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/join-user-theme-quizz/joinUserThemeQuizzEntity.ts\n            \n            class\n            JoinUserThemeQuizz\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/know-it/know-it.controller.ts\n            \n            controller\n            KnowItController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/know-it/know-it.interface.ts\n            \n            interface\n            KnowItInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/know-it/know-it.service.ts\n            \n            injectable\n            KnowItService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/know-it/knowItDto.ts\n            \n            class\n            KnowItDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/know-it/knowItEntity.ts\n            \n            class\n            KnowIt\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/loginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/PercentTypeGreenScoreAndPoiDto.ts\n            \n            class\n            PercentTypeGreenScoreAndPoiDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/Pipe/percent-type-green-score-and-poi.transformation.pipe.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/interfaces/percent-type-green-score-and-poi.interface.ts\n            \n            interface\n            PercentTypeGreenScoreAndPoiInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.controller.ts\n            \n            controller\n            PercentTypeGreenScoreAndPoiController\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percent-type-green-score-and-poi.service.ts\n            \n            injectable\n            PercentTypeGreenScoreAndPoiService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/percent-type-green-score-and-poi/percentTypeGreenScoreAndPoiEntity.ts\n            \n            class\n            PercentTypeGreenScoreAndPoi\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/poi/interfaces/poi.interface.ts\n            \n            interface\n            PoiInterface\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/poi/percentAndIdTag.ts\n            \n            class\n            PercentAndIdTag\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/poi/pipe/poi.transformation.pipe.ts\n            \n            injectable\n            PoiTransformationPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/poi/poi.controller.ts\n            \n            controller\n            PoiController\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/poi/poi.geo.calc.service.ts\n            \n            injectable\n            PoiGeoCalcService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/poi/poi.service.ts\n            \n            injectable\n            PoiService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/poi/poiAndTags.ts\n            \n            class\n            PoiAndTags\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/poi/poiDto.ts\n            \n            injectable\n            PoiDto\n            \n                33 %\n                (5/15)\n            \n        \n        \n            \n                \n                src/poi/poiEntity.ts\n            \n            class\n            Poi\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/question-quizz/question-quizz.controller.ts\n            \n            controller\n            QuestionQuizzController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/question-quizz/question-quizz.service.ts\n            \n            injectable\n            QuestionQuizzService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/question-quizz/questionQuizzDto.ts\n            \n            class\n            QuestionQuizzDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/question-quizz/questionQuizzEntity.ts\n            \n            class\n            QuestionQuizz\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/quizz/quizz.controller.ts\n            \n            controller\n            QuizzController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/quizz/quizz.service.ts\n            \n            injectable\n            QuizzService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/quizz/quizzAndQuestionDto.ts\n            \n            class\n            QuizzAndQuestionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/quizz/quizzDto.ts\n            \n            class\n            QuizzDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/quizz/quizzEntity.ts\n            \n            class\n            Quizz\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/role/roleEntity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stats/stats.controller.ts\n            \n            controller\n            StatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/interfaces/tags.interface.ts\n            \n            interface\n            TagsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tags/tagEntity.ts\n            \n            class\n            Tag\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tags/tagsDto.ts\n            \n            class\n            TagsDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/theme-quizz/submitDto.ts\n            \n            class\n            SubmitDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/theme-quizz/theme-quizz.controller.ts\n            \n            controller\n            ThemeQuizzController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/theme-quizz/theme-quizz.service.ts\n            \n            injectable\n            ThemeQuizzService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/theme-quizz/themeAndQuizzDto.ts\n            \n            class\n            ThemeAndQuizzDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/theme-quizz/themeQuizzDto.ts\n            \n            class\n            ThemeQuizzDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/theme-quizz/themeQuizzEntity.ts\n            \n            class\n            ThemeQuizz\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/theme-quizz/validationDto.ts\n            \n            class\n            ValidationDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/type-green-score/interfaces/type-green-score.interface.ts\n            \n            interface\n            TypeGreenScoreInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.controller.ts\n            \n            controller\n            TypeGreenScoreController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type-green-score/type-green-score.service.ts\n            \n            injectable\n            TypeGreenScoreService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreDto.ts\n            \n            class\n            TypeGreenScoreDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type-green-score/typeGreenScoreEntity.ts\n            \n            class\n            TypeGreenScore\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/type/interface/type.interface.ts\n            \n            interface\n            TypeInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/type.controller.ts\n            \n            controller\n            TypeController\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/type/type.service.ts\n            \n            injectable\n            TypeService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/type/typeDto.ts\n            \n            class\n            TypeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/type/typeEntity.ts\n            \n            class\n            Type\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user-app/user-app.service.ts\n            \n            injectable\n            UserAppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/appUserDto.ts\n            \n            class\n            AppUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/user/userDto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/userEntity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            exaToRgbaObject\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            filterInt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            generateRandExaDecimalColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/function.utils.ts\n            \n            variable\n            getEnumKey\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.1\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/swagger : ^4.2.3\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/compression : ^1.0.1\n        \n            @types/cookie-parser : ^1.4.2\n        \n            bcrypt : ^3.0.7\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            compression : ^1.7.4\n        \n            cookie-parser : ^1.4.4\n        \n            express-rate-limit : ^5.0.0\n        \n            helmet : ^3.21.2\n        \n            hex-to-rgba : ^2.0.1\n        \n            moment : ^2.26.0\n        \n            mysql : ^2.18.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            swagger-ui-express : ^4.1.3\n        \n            typeorm : ^0.2.22\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PriceEnum   (src/.../price.enum.ts)\n                        \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                        \n                            TypeEnum   (src/.../type.enum.ts)\n                        \n                        \n                            TypePoiEnum   (src/.../typePoiEnum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/poi/enum/price.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PriceEnum\n                    \n                \n                        \n                            \n                                 low\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n            \n        \n\n    src/role/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 admin\n                            \n                        \n                        \n                            \n                                 company\n                            \n                        \n                        \n                            \n                                 user\n                            \n                        \n            \n        \n\n    src/company/enum/type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeEnum\n                    \n                \n                        \n                            \n                                 Agence\n                            \n                        \n                        \n                            \n                                 Ecole\n                            \n                        \n                        \n                            \n                                 Co-working\n                            \n                        \n                        \n                            \n                                 Start-up\n                            \n                        \n                        \n                            \n                                 Grand compte\n                            \n                        \n                        \n                            \n                                 PME\n                            \n                        \n                        \n                            \n                                 Incubateur\n                            \n                        \n                        \n                            \n                                 autre\n                            \n                        \n            \n        \n\n    src/poi/enum/typePoiEnum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypePoiEnum\n                    \n                \n                        \n                            \n                                 Food\n                            \n                        \n                        \n                            \n                                 Drink\n                            \n                        \n                        \n                            \n                                 Cosmetic\n                            \n                        \n                        \n                            \n                                 Fashion\n                            \n                        \n                        \n                            \n                                 Shopping\n                            \n                        \n                        \n                            \n                                 Activity\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Main function who call the different router and middleware for the app to work properly\nHelmet helps you secure your Express apps by setting various HTTP headers\nUse to limit repeated requests to  APIs\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMADU Back\nDescription\nAPI REST du back office de maduEquipe\n\nClément Haller (dev back api)\nGuillaume Cornet (infra/server)\n\nTechno\n\nNestJS\nMySQL\nTypeOrm\njson web token pour l'authentification a l'api\n\nDocumentation\n\nCompodoc(http://${URL}:8081)\nSwagger (http://${URL}:3000/documentation/)\n\nUML Base de donnée\n\nCommande\nlancer l'app en dev:\n- yarn install\n- docker-compose upTest\n- yarn test\n- yarn test:watch\n- yarn test:cov\n- yarn test:debugLint\n- yarn lintProd\n- yarn build\n- yarn start:prodDependencies\n\n@nestjs/common\n@nestjs/core\n@nestjs/jwt\n@nestjs/passport\n@nestjs/platform-express\n@nestjs/swagger\n@nestjs/typeorm\n@types/bcrypt\n@types/compression\n@types/cookie-parser\nbcrypt\nclass-transformer\nclass-validator\ncompression\ncookie-parser\nexpress-rate-limit\nhelmet\nhex-to-rgba\nmoment\nmysql\npassport\npassport-jwt\npassport-local\nreflect-metadata\nrimraf\nrxjs\nswagger-ui-express\ntypeorm\n\nDevDependencies\n\n@compodoc/compodoc\n@nestjs/cli\n@nestjs/schematics\n@nestjs/testing\n@types/express\n@types/jest:\n@types/node\n@types/passport-jwt\n@types/passport-local\n@types/supertest\njest\nprettier\nsupertest\nts-jest\nts-loader\nts-node\ntsconfig-paths\ntslint\ntypescrip\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChallengeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImgPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinTagPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinUserChallengeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinUserPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinUserQuizzModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JoinUserThemeQuizzModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        KnowItModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PercentTypeGreenScoreAndPoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PoiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuestionQuizzModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizzModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemeQuizzModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeGreenScoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ChallengeModule\n\n\n\ncluster_ChallengeModule_exports\n\n\n\ncluster_ChallengeModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_exports\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_GreenScoreModule\n\n\n\ncluster_GreenScoreModule_providers\n\n\n\ncluster_ImgPoiModule\n\n\n\ncluster_ImgPoiModule_exports\n\n\n\ncluster_ImgPoiModule_providers\n\n\n\ncluster_JoinTagPoiModule\n\n\n\ncluster_JoinTagPoiModule_exports\n\n\n\ncluster_JoinTagPoiModule_providers\n\n\n\ncluster_JoinUserChallengeModule\n\n\n\ncluster_JoinUserChallengeModule_exports\n\n\n\ncluster_JoinUserChallengeModule_providers\n\n\n\ncluster_JoinUserPoiModule\n\n\n\ncluster_JoinUserPoiModule_exports\n\n\n\ncluster_JoinUserPoiModule_providers\n\n\n\ncluster_JoinUserQuizzModule\n\n\n\ncluster_JoinUserQuizzModule_providers\n\n\n\ncluster_JoinUserThemeQuizzModule\n\n\n\ncluster_JoinUserThemeQuizzModule_exports\n\n\n\ncluster_JoinUserThemeQuizzModule_providers\n\n\n\ncluster_KnowItModule\n\n\n\ncluster_KnowItModule_exports\n\n\n\ncluster_KnowItModule_providers\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_exports\n\n\n\ncluster_PercentTypeGreenScoreAndPoiModule_providers\n\n\n\ncluster_PoiModule\n\n\n\ncluster_PoiModule_exports\n\n\n\ncluster_PoiModule_providers\n\n\n\ncluster_QuestionQuizzModule\n\n\n\ncluster_QuestionQuizzModule_exports\n\n\n\ncluster_QuestionQuizzModule_providers\n\n\n\ncluster_QuizzModule\n\n\n\ncluster_QuizzModule_exports\n\n\n\ncluster_QuizzModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_StatsModule\n\n\n\ncluster_StatsModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_exports\n\n\n\ncluster_TagsModule_providers\n\n\n\ncluster_ThemeQuizzModule\n\n\n\ncluster_ThemeQuizzModule_providers\n\n\n\ncluster_TypeGreenScoreModule\n\n\n\ncluster_TypeGreenScoreModule_exports\n\n\n\ncluster_TypeGreenScoreModule_providers\n\n\n\ncluster_TypeModule\n\n\n\ncluster_TypeModule_exports\n\n\n\ncluster_TypeModule_providers\n\n\n\ncluster_UserAppModule\n\n\n\ncluster_UserAppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nChallengeModule\n\nChallengeModule\n\nAppModule -->\n\nChallengeModule->AppModule\n\n\n\n\n\nChallengeService \n\nChallengeService \n\nChallengeService  -->\n\nChallengeModule->ChallengeService \n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\n\n\nPoiModule\n\nPoiModule\n\nPoiModule -->\n\nCompanyModule->PoiModule\n\n\n\n\n\nStatsModule\n\nStatsModule\n\nStatsModule -->\n\nCompanyModule->StatsModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCompanyModule->UserModule\n\n\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nCompanyService \n\nCompanyService \n\nCompanyService  -->\n\nCompanyModule->CompanyService \n\n\n\n\n\nGreenScoreModule\n\nGreenScoreModule\n\nAppModule -->\n\nGreenScoreModule->AppModule\n\n\n\n\n\nImgPoiModule\n\nImgPoiModule\n\nPoiModule -->\n\nImgPoiModule->PoiModule\n\n\n\nAppModule -->\n\nImgPoiModule->AppModule\n\n\n\n\n\nImgPoiService \n\nImgPoiService \n\nImgPoiService  -->\n\nImgPoiModule->ImgPoiService \n\n\n\n\n\nJoinTagPoiModule\n\nJoinTagPoiModule\n\nPoiModule -->\n\nJoinTagPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nJoinTagPoiModule->StatsModule\n\n\n\nAppModule -->\n\nJoinTagPoiModule->AppModule\n\n\n\n\n\nJoinTagPoiService \n\nJoinTagPoiService \n\nJoinTagPoiService  -->\n\nJoinTagPoiModule->JoinTagPoiService \n\n\n\n\n\nJoinUserChallengeModule\n\nJoinUserChallengeModule\n\nChallengeModule -->\n\nJoinUserChallengeModule->ChallengeModule\n\n\n\nAppModule -->\n\nJoinUserChallengeModule->AppModule\n\n\n\n\n\nJoinUserChallengeService \n\nJoinUserChallengeService \n\nJoinUserChallengeService  -->\n\nJoinUserChallengeModule->JoinUserChallengeService \n\n\n\n\n\nJoinUserPoiModule\n\nJoinUserPoiModule\n\nPoiModule -->\n\nJoinUserPoiModule->PoiModule\n\n\n\nAppModule -->\n\nJoinUserPoiModule->AppModule\n\n\n\n\n\nJoinUserPoiService \n\nJoinUserPoiService \n\nJoinUserPoiService  -->\n\nJoinUserPoiModule->JoinUserPoiService \n\n\n\n\n\nJoinUserQuizzModule\n\nJoinUserQuizzModule\n\nAppModule -->\n\nJoinUserQuizzModule->AppModule\n\n\n\n\n\nJoinUserThemeQuizzModule\n\nJoinUserThemeQuizzModule\n\n\n\nThemeQuizzModule\n\nThemeQuizzModule\n\nThemeQuizzModule -->\n\nJoinUserThemeQuizzModule->ThemeQuizzModule\n\n\n\nAppModule -->\n\nJoinUserThemeQuizzModule->AppModule\n\n\n\n\n\nJoinUserThemeQuizzService \n\nJoinUserThemeQuizzService \n\nJoinUserThemeQuizzService  -->\n\nJoinUserThemeQuizzModule->JoinUserThemeQuizzService \n\n\n\n\n\nKnowItModule\n\nKnowItModule\n\nAppModule -->\n\nKnowItModule->AppModule\n\n\n\n\n\nKnowItService \n\nKnowItService \n\nKnowItService  -->\n\nKnowItModule->KnowItService \n\n\n\n\n\nPercentTypeGreenScoreAndPoiModule\n\nPercentTypeGreenScoreAndPoiModule\n\nPoiModule -->\n\nPercentTypeGreenScoreAndPoiModule->PoiModule\n\n\n\nStatsModule -->\n\nPercentTypeGreenScoreAndPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPercentTypeGreenScoreAndPoiModule->AppModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService \n\nPercentTypeGreenScoreAndPoiService  -->\n\nPercentTypeGreenScoreAndPoiModule->PercentTypeGreenScoreAndPoiService \n\n\n\nStatsModule -->\n\nPoiModule->StatsModule\n\n\n\nAppModule -->\n\nPoiModule->AppModule\n\n\n\n\n\nPoiService \n\nPoiService \n\nPoiService  -->\n\nPoiModule->PoiService \n\n\n\n\n\nQuestionQuizzModule\n\nQuestionQuizzModule\n\n\n\nQuizzModule\n\nQuizzModule\n\nQuizzModule -->\n\nQuestionQuizzModule->QuizzModule\n\n\n\nThemeQuizzModule -->\n\nQuestionQuizzModule->ThemeQuizzModule\n\n\n\nAppModule -->\n\nQuestionQuizzModule->AppModule\n\n\n\n\n\nQuestionQuizzService \n\nQuestionQuizzService \n\nQuestionQuizzService  -->\n\nQuestionQuizzModule->QuestionQuizzService \n\n\n\nThemeQuizzModule -->\n\nQuizzModule->ThemeQuizzModule\n\n\n\nAppModule -->\n\nQuizzModule->AppModule\n\n\n\n\n\nQuizzService \n\nQuizzService \n\nQuizzService  -->\n\nQuizzModule->QuizzService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAuthModule -->\n\nRoleModule->AuthModule\n\n\n\nUserModule -->\n\nRoleModule->UserModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\nAppModule -->\n\nStatsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nPoiModule -->\n\nTagsModule->PoiModule\n\n\n\nStatsModule -->\n\nTagsModule->StatsModule\n\n\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nTagsService \n\nTagsService \n\nTagsService  -->\n\nTagsModule->TagsService \n\n\n\nAppModule -->\n\nThemeQuizzModule->AppModule\n\n\n\n\n\nTypeGreenScoreModule\n\nTypeGreenScoreModule\n\nPoiModule -->\n\nTypeGreenScoreModule->PoiModule\n\n\n\nAppModule -->\n\nTypeGreenScoreModule->AppModule\n\n\n\n\n\nTypeGreenScoreService \n\nTypeGreenScoreService \n\nTypeGreenScoreService  -->\n\nTypeGreenScoreModule->TypeGreenScoreService \n\n\n\n\n\nTypeModule\n\nTypeModule\n\nPoiModule -->\n\nTypeModule->PoiModule\n\n\n\nStatsModule -->\n\nTypeModule->StatsModule\n\n\n\nAppModule -->\n\nTypeModule->AppModule\n\n\n\n\n\nTypeService \n\nTypeService \n\nTypeService  -->\n\nTypeModule->TypeService \n\n\n\n\n\nUserAppModule\n\nUserAppModule\n\nAppModule -->\n\nUserAppModule->AppModule\n\n\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nJoinUserChallengeModule -->\n\nUserModule->JoinUserChallengeModule\n\n\n\nThemeQuizzModule -->\n\nUserModule->ThemeQuizzModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nChallengeService\n\nChallengeService\n\nChallengeModule -->\n\nChallengeService->ChallengeModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nGreenScoreService\n\nGreenScoreService\n\nGreenScoreModule -->\n\nGreenScoreService->GreenScoreModule\n\n\n\n\n\nImgPoiService\n\nImgPoiService\n\nImgPoiModule -->\n\nImgPoiService->ImgPoiModule\n\n\n\n\n\nJoinTagPoiService\n\nJoinTagPoiService\n\nJoinTagPoiModule -->\n\nJoinTagPoiService->JoinTagPoiModule\n\n\n\n\n\nJoinUserChallengeService\n\nJoinUserChallengeService\n\nJoinUserChallengeModule -->\n\nJoinUserChallengeService->JoinUserChallengeModule\n\n\n\n\n\nJoinUserPoiService\n\nJoinUserPoiService\n\nJoinUserPoiModule -->\n\nJoinUserPoiService->JoinUserPoiModule\n\n\n\n\n\nJoinUserQuizzService\n\nJoinUserQuizzService\n\nJoinUserQuizzModule -->\n\nJoinUserQuizzService->JoinUserQuizzModule\n\n\n\n\n\nJoinUserThemeQuizzService\n\nJoinUserThemeQuizzService\n\nJoinUserThemeQuizzModule -->\n\nJoinUserThemeQuizzService->JoinUserThemeQuizzModule\n\n\n\n\n\nKnowItService\n\nKnowItService\n\nKnowItModule -->\n\nKnowItService->KnowItModule\n\n\n\n\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiService\n\nPercentTypeGreenScoreAndPoiModule -->\n\nPercentTypeGreenScoreAndPoiService->PercentTypeGreenScoreAndPoiModule\n\n\n\n\n\nPoiGeoCalcService\n\nPoiGeoCalcService\n\nPoiModule -->\n\nPoiGeoCalcService->PoiModule\n\n\n\n\n\nPoiService\n\nPoiService\n\nPoiModule -->\n\nPoiService->PoiModule\n\n\n\n\n\nQuestionQuizzService\n\nQuestionQuizzService\n\nQuestionQuizzModule -->\n\nQuestionQuizzService->QuestionQuizzModule\n\n\n\n\n\nQuizzService\n\nQuizzService\n\nQuizzModule -->\n\nQuizzService->QuizzModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nStatsModule -->\n\nStatsService->StatsModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\nThemeQuizzService\n\nThemeQuizzService\n\nThemeQuizzModule -->\n\nThemeQuizzService->ThemeQuizzModule\n\n\n\n\n\nTypeGreenScoreService\n\nTypeGreenScoreService\n\nTypeGreenScoreModule -->\n\nTypeGreenScoreService->TypeGreenScoreModule\n\n\n\n\n\nTypeService\n\nTypeService\n\nTypeModule -->\n\nTypeService->TypeModule\n\n\n\n\n\nUserAppService\n\nUserAppService\n\nUserAppModule -->\n\nUserAppService->UserAppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    32 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    42 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            exaToRgbaObject   (src/.../function.utils.ts)\n                        \n                        \n                            filterInt   (src/.../function.utils.ts)\n                        \n                        \n                            generateRandExaDecimalColor   (src/.../function.utils.ts)\n                        \n                        \n                            getEnumKey   (src/.../function.utils.ts)\n                        \n                        \n                            Roles   (src/.../role.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/function.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            exaToRgbaObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exaDecimalCode: string, insertToObject) => {\n  const hexaToRgba = hexToRgba(exaDecimalCode);\n  const getValueRba = hexaToRgba.split('(')[1].split(',').filter((elem) => typeof filterInt(elem) === 'number');\n  insertToObject.r = filterInt(getValueRba[0].trim());\n  insertToObject.g = filterInt(getValueRba[1].trim());\n  insertToObject.b = filterInt(getValueRba[2].trim());\n  insertToObject.a = filterInt(getValueRba[3].replace(')', '').trim());\n}\n                        \n                    \n\n                \n                    \n                        set the rgba color\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (value) => {\n  if (/^(-|\\+)?(\\d+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n  return NaN;\n}\n                        \n                    \n\n                \n                    \n                        Function who check if the value is an integer return null if not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandExaDecimalColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () =>  {\n  return '#' + Math.floor(Math.random() * 16777215 ).toString(16);\n}\n                        \n                    \n\n                \n                    \n                        generate a random hexadecimal code\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEnumKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (enumeration) => {\n  const keysEnum: string[] = [];\n\n  for (const n in enumeration) {\n    if (typeof enumeration[n] === 'string') {\n      keysEnum.push(enumeration[n]);\n    }\n  }\n  return keysEnum;\n}\n                        \n                    \n\n                \n                    \n                        get the key of an enumeration\n\n                    \n                \n\n            \n        \n\n    src/decorator/role.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: string []) => SetMetadata('roles', roles)\n                        \n                    \n\n                \n                    \n                        this function set roles who have the right to access an a method or class\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
